{
  "project": {
    "name": "Crypto Futures Dashboard",
    "version": "v1.0",
    "phase": "P3.6 - UTF8 Logging + QuantSummary Stable",
    "uptime_pct": 40,
    "backend_status": "unhealthy",
    "last_sync": "2025-10-21 23:54:28"
  },
  "code": {
    "files": [
      {
        "path": "backend\\src\\futuresboard\\app.py",
        "type": ".py",
        "size_kb": 14.5,
        "lines": 382,
        "content": "",
        "summary": "382L | app.py | .py | 14.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\binance_ws_client.py",
        "type": ".py",
        "size_kb": 1.9,
        "lines": 47,
        "content": "aW1wb3J0IGFzeW5jaW8KaW1wb3J0IGpzb24KaW1wb3J0IGFpb2h0dHAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKCkJJTkFOQ0VfV1NfQkFTRSA9ICJ3c3M6Ly9mc3RyZWFtLmJpbmFuY2UuY29tL3N0cmVhbT9zdHJlYW1zPSIgICMgRm9yIFVTRFMtTSBmdXR1cmVzCgphc3luYyBkZWYgY29ubmVjdF9hbmRfbGlzdGVuKHNlc3Npb246IGFpb2h0dHAuQ2xpZW50U2Vzc2lvbiwgdXJsOiBzdHIsIGhhbmRsZV9tc2cpOgogICAgdHJ5OgogICAgICAgIGFzeW5jIHdpdGggc2Vzc2lvbi53c19jb25uZWN0KHVybCwgaGVhcnRiZWF0PTE1MCkgYXMgd3M6ICAjIEFkanVzdGVkIGhlYXJ0YmVhdAogICAgICAgICAgICBwcmludCgiQ29ubmVjdGVkIHRvIiwgdXJsKQogICAgICAgICAgICBhc3luYyBmb3IgbXNnIGluIHdzOgogICAgICAgICAgICAgICAgaWYgbXNnLnR5cGUgPT0gYWlvaHR0cC5XU01zZ1R5cGUuVEVYVDoKICAgICAgICAgICAgICAgICAgICBkYXRhID0ganNvbi5sb2Fkcyhtc2cuZGF0YSkKICAgICAgICAgICAgICAgICAgICBhd2FpdCBoYW5kbGVfbXNnKGRhdGEpCiAgICAgICAgICAgICAgICBlbGlmIG1zZy50eXBlID09IGFpb2h0dHAuV1NNc2dUeXBlLlBJTkc6CiAgICAgICAgICAgICAgICAgICAgYXdhaXQgd3MucG9uZygpCiAgICAgICAgICAgICAgICBlbGlmIG1zZy50eXBlID09IGFpb2h0dHAuV1NNc2dUeXBlLkVSUk9SOgogICAgICAgICAgICAgICAgICAgIHByaW50KCJXUyBFcnJvcjoiLCBtc2cpCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgIGV4Y2VwdCBhaW9odHRwLkNsaWVudEVycm9yIGFzIGU6CiAgICAgICAgcHJpbnQoIkNvbm5lY3Rpb24gZXJyb3I6IiwgZSkKICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDUpICAjIFNpbXBsZSBiYWNrb2ZmIGFsdGVybmF0aXZlCgphc3luYyBkZWYgYnVpbGRfY29tYmluZWRfc3RyZWFtKHBhaXJfc3RyZWFtczogTGlzdFtzdHJdKSAtPiBzdHI6CiAgICByZXR1cm4gQklOQU5DRV9XU19CQVNFICsgIi8iLmpvaW4ocGFpcl9zdHJlYW1zKQoKYXN5bmMgZGVmIGhhbmRsZV9tZXNzYWdlKGRhdGEpOgogICAgIyBFeGFtcGxlOiBFeHRyYWN0IG1hcmtQcmljZSwgT0kgaWYgc3Vic2NyaWJlZAogICAgc3RyZWFtID0gZGF0YVsic3RyZWFtIl0KICAgIGlmICJtYXJrUHJpY2UiIGluIHN0cmVhbToKICAgICAgICBwcmludCgiTWFyayBQcmljZSBVcGRhdGU6IiwgZGF0YVsiZGF0YSJdWyJwIl0pICAjIFByaWNlCiAgICAjIFB1c2ggdG8gcXVldWUvREIgaGVyZQoKYXN5bmMgZGVmIHN0YXJ0X3N0cmVhbV93b3JrZXIocGFpcnM6IExpc3Rbc3RyXSk6CiAgICBzdHJlYW1zID0gW2Yie3AubG93ZXIoKX1AbWFya1ByaWNlQDFzIiBmb3IgcCBpbiBwYWlyc10gICMgMXMgdXBkYXRlcwogICAgc3RyZWFtcyArPSBbZiJ7cC5sb3dlcigpfUBvcGVuSW50ZXJlc3RAMWgiIGZvciBwIGluIHBhaXJzXSAgIyBPSSBob3VybHkKICAgIHVybCA9IGF3YWl0IGJ1aWxkX2NvbWJpbmVkX3N0cmVhbShzdHJlYW1zKQogICAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzaW9uOgogICAgICAgIHdoaWxlIFRydWU6ICAjIFJlY29ubmVjdCBsb29wCiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3RfYW5kX2xpc3RlbihzZXNzaW9uLCB1cmwsIGhhbmRsZV9tZXNzYWdlKQogICAgICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDUpICAjIEJhY2tvZmYKCiMgRXhhbXBsZSBydW4gKGluIGZ1dHVyZXNib2FyZDogY2FsbCBpbiB0aHJlYWQpCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBwYWlycyA9IFsiQlRDVVNEVCIsICJFVEhVU0RUIiwgIlNPTFVTRFQiXQogICAgYXN5bmNpby5ydW4oc3RhcnRfc3RyZWFtX3dvcmtlcihwYWlycykp",
        "summary": "47L | binance_ws_client.py | .py | 1.9 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\blueprint.py",
        "type": ".py",
        "size_kb": 50.2,
        "lines": 1426,
        "content": "",
        "summary": "1426L | blueprint.py | .py | 50.2 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\cli.py",
        "type": ".py",
        "size_kb": 3.5,
        "lines": 100,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBsb2dnaW5nCmltcG9ydCBwYXRobGliCmltcG9ydCBzeXMKaW1wb3J0IG9zICAjIEZvciBzdHIoKSBjb21wYXQgaWYgbmVlZGVkCmltcG9ydCB0cmFjZWJhY2sgICMgRm9yIGVycm9yIHByaW50CgppbXBvcnQgZnV0dXJlc2JvYXJkLmFwcAppbXBvcnQgZnV0dXJlc2JvYXJkLnNjcmFwZXIKZnJvbSBmdXR1cmVzYm9hcmQgaW1wb3J0IF9fdmVyc2lvbl9fICAjIHR5cGU6IGlnbm9yZVthdHRyLWRlZmluZWRdCmZyb20gZnV0dXJlc2JvYXJkLmNvbmZpZyBpbXBvcnQgQ29uZmlnCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudiAgIyBFeHBsaWNpdCAuZW52IGxvYWQKCmxvZyA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKCmRlZiBtYWluKCk6CiAgICBwcmludCgiQ0xJIExvYWRlZDogU3RhcnRpbmcgbWFpbigpIikgICMgRGVidWc6IENvbmZpcm1zIGVudHJ5CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihwcm9nPSJmdXR1cmVzYm9hcmQiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS12ZXJzaW9uIiwgYWN0aW9uPSJ2ZXJzaW9uIiwgdmVyc2lvbj1mIiUocHJvZylzIHtfX3ZlcnNpb25fX30iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLWMiLAogICAgICAgICItLWNvbmZpZy1kaXIiLAogICAgICAgIHR5cGU9cGF0aGxpYi5QYXRoLAogICAgICAgIGRlZmF1bHQ9Tm9uZSwKICAgICAgICBoZWxwPSJQYXRoIHRvIGNvbmZpZ3VyYXRpb24gZGlyZWN0b3J5LiBEZWZhdWx0cyB0byB0aGUgYGNvbmZpZy9gIHN1Yi1kaXJlY3Rvcnkgb24gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IiwKICAgICkKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoCiAgICAgICAgIi0tc2NyYXBlLW9ubHkiLCBkZWZhdWx0PUZhbHNlLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJSdW4gb25seSB0aGUgc2NyYXBlciBjb2RlIgogICAgKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1kaXNhYmxlLWF1dG8tc2NyYXBlciIsCiAgICAgICAgZGVmYXVsdD1GYWxzZSwKICAgICAgICBhY3Rpb249InN0b3JlX3RydWUiLAogICAgICAgIGhlbHA9IkRpc2FibGUgdGhlIHJvdXRpbmVzIHdoaWNoIHNjcmFwZSB3aGlsZSB0aGUgd2Vic2VydmljZSBpcyBydW5uaW5nIiwKICAgICkKICAgIHNlcnZlcl9zZXR0aW5ncyA9IHBhcnNlci5hZGRfYXJndW1lbnRfZ3JvdXAoIlNlcnZlciBTZXR0aW5ncyIpCiAgICBzZXJ2ZXJfc2V0dGluZ3MuYWRkX2FyZ3VtZW50KAogICAgICAgICItLWhvc3QiLAogICAgICAgIGRlZmF1bHQ9JzAuMC4wLjAnLAogICAgICAgIGhlbHA9IlNlcnZlciBob3N0LiBEZWZhdWx0OiAwLjAuMC4wIiwKICAgICAgICB0eXBlPXN0ciwgICMgU3RyIGZvciBhcmdwYXJzZSAodjEgY29tcGF0KQogICAgKQogICAgc2VydmVyX3NldHRpbmdzLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1wb3J0IiwgdHlwZT1pbnQsIGRlZmF1bHQ9Tm9uZSwgaGVscD0iU2VydmVyIHBvcnQuIERlZmF1bHQ6IDUwMDAiCiAgICApCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgIHByaW50KGYiQXJncyBwYXJzZWQ6IGNvbmZpZ19kaXI9e2FyZ3MuY29uZmlnX2Rpcn0sIHBvcnQ9e2FyZ3MucG9ydH0sIHNjcmFwZV9vbmx5PXthcmdzLnNjcmFwZV9vbmx5fSIpICAjIERlYnVnOiBBcmdwYXJzZSBPSz8KCiAgICAjIERlZmF1bHQgY29uZmlnX2RpciB0byByb290L2NvbmZpZyAoYmFja2VuZC8gLT4gLi4vY29uZmlnIGZvciBqc29uL2RiKQogICAgaWYgYXJncy5jb25maWdfZGlyIGlzIE5vbmU6CiAgICAgICAgYXJncy5jb25maWdfZGlyID0gcGF0aGxpYi5QYXRoLmN3ZCgpLnBhcmVudCAvICJjb25maWciCiAgICBlbHNlOgogICAgICAgIGFyZ3MuY29uZmlnX2RpciA9IGFyZ3MuY29uZmlnX2Rpci5yZXNvbHZlKCkKCiAgICBwcmludChmIlJlc29sdmVkIGNvbmZpZ19kaXI6IHthcmdzLmNvbmZpZ19kaXJ9IChleGlzdHM/IHthcmdzLmNvbmZpZ19kaXIuZXhpc3RzKCl9KSIpICAjIERlYnVnOiBQYXRoIGNoZWNrCgogICAgIyAuZW52IGxvYWQgZnJvbSBiYWNrZW5kLyAoY3dkPWJhY2tlbmQsIHNlbGYpCiAgICBiYWNrZW5kX2RpciA9IHBhdGhsaWIuUGF0aC5jd2QoKQogICAgZG90ZW52X3BhdGggPSBiYWNrZW5kX2RpciAvICIuZW52IgogICAgbG9hZF9kb3RlbnYoZG90ZW52X3BhdGg9c3RyKGRvdGVudl9wYXRoKSkKICAgICMgRGVidWcgcHJpbnQ6IENvbmZpcm0gbG9hZCBiZWZvcmUgQ29uZmlnCiAgICBwcmludChmIkRlYnVnOiBMb2FkZWQgQVBJX0tFWSBmcm9tIC5lbnY6IHtvcy5nZXRlbnYoJ0FQSV9LRVknKVs6MTBdICsgJy4uLicgaWYgb3MuZ2V0ZW52KCdBUElfS0VZJykgZWxzZSAnTUlTU0lORyd9IikKICAgIHByaW50KGYiRGVidWc6IC5lbnYgcGF0aCByZXNvbHZlZDoge2RvdGVudl9wYXRoLnJlc29sdmUoKX0gKGV4aXN0cz8ge2RvdGVudl9wYXRoLmV4aXN0cygpfSkiKQoKICAgIHByaW50KCJQcmUtQ29uZmlnOiBBYm91dCB0byBjYWxsIGZyb21fY29uZmlnX2Rpci4uLiIpICAjIERlYnVnOiBCZWZvcmUgY2FsbAogICAgdHJ5OgogICAgICAgIGNvbmZpZyA9IENvbmZpZy5mcm9tX2NvbmZpZ19kaXIoYXJncy5jb25maWdfZGlyKQogICAgICAgIHByaW50KCJQb3N0LUNvbmZpZzogQ29uZmlnIGxvYWRlZCBPSyEiKSAgIyBJZiByZWFjaGVzLCB2YWxpZGF0aW9uIHBhc3NlZAogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiQ29uZmlnIEVycm9yOiB7ZX0iKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgIHN5cy5leGl0KDEpCiAgICBpZiBub3QgYXJncy5ob3N0OgogICAgICAgIGFyZ3MuaG9zdCA9IGNvbmZpZy5IT1NUCiAgICBpZiBub3QgYXJncy5wb3J0OgogICAgICAgIGFyZ3MucG9ydCA9IGNvbmZpZy5QT1JUCgogICAgIyBSdW4gdGhlIGFwcGxpY2F0aW9uCiAgICB0cnk6CiAgICAgICAgYXBwID0gZnV0dXJlc2JvYXJkLmFwcC5pbml0X2FwcChjb25maWcpCiAgICAgICAgcHJpbnQoIkluaXQgQXBwIE9LISIpICAjIENvbmZpcm1zIGluaXRfYXBwIChEQi9ibHVlcHJpbnQvc2NyYXBlciBzZXR1cCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIkluaXQgQXBwIEVycm9yOiB7ZX0iKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgaWYgYXJncy5zY3JhcGVfb25seToKICAgICAgICB3aXRoIGFwcC5hcHBfY29udGV4dCgpOgogICAgICAgICAgICBmdXR1cmVzYm9hcmQuc2NyYXBlci5zY3JhcGUoKQogICAgICAgIHN5cy5leGl0KDApCgogICAgYXBwLnJ1bihob3N0PWFyZ3MuaG9zdCwgcG9ydD1hcmdzLnBvcnQpICAjIERpcmVjdCBzdHIgaG9zdAoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBtYWluKCk=",
        "summary": "100L | cli.py | .py | 3.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\config.py",
        "type": ".py",
        "size_kb": 6.7,
        "lines": 177,
        "content": "",
        "summary": "177L | config.py | .py | 6.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\db.py",
        "type": ".py",
        "size_kb": 18.8,
        "lines": 520,
        "content": "",
        "summary": "520L | db.py | .py | 18.8 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\metrics.py",
        "type": ".py",
        "size_kb": 8.6,
        "lines": 220,
        "content": "",
        "summary": "220L | metrics.py | .py | 8.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\quant_engine.py",
        "type": ".py",
        "size_kb": 3.7,
        "lines": 106,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvcXVhbnRfZW5naW5lLnB5CiIiIgpRdWFudCBFbmdpbmUg4oCTIFRpZXIgMiBJbnRlbGxpZ2VudCBNZXRyaWNzIFBpcGVsaW5lCkNvbXB1dGVzIHJvbGxpbmcgT0kgWi1zY29yZSwgTFMgzpQlLCBpbWJhbGFuY2UgJSwgZnVuZGluZyBiaWFzLCBjb25mbHVlbmNlIHNjb3JlLgoiIiIKCmltcG9ydCBzcWxpdGUzLCBudW1weSBhcyBucCwgcGFuZGFzIGFzIHBkLCBkYXRldGltZQoKREJfUEFUSCA9ICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIKCmRlZiBjb21wdXRlX3F1YW50X21ldHJpY3MobGltaXQ6IGludCA9IDIwMCk6CiAgICBjb25uID0gc3FsaXRlMy5jb25uZWN0KERCX1BBVEgpCiAgICBkZiA9IHBkLnJlYWRfc3FsX3F1ZXJ5KCIiIgogICAgICAgIFNFTEVDVCBzeW1ib2wsIHRpbWVmcmFtZSwgb2lfdXNkLAogICAgICAgICAgICAgICBsb25nX2FjY291bnRfcGN0LCBzaG9ydF9hY2NvdW50X3BjdCwKICAgICAgICAgICAgICAgZnVuZGluZywgbHNfZGVsdGFfcGN0LCBpbWJhbGFuY2UsIHRpbWVzdGFtcAogICAgICAgIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA/CiAgICAiIiIsIGNvbm4sIHBhcmFtcz0obGltaXQsKSkKICAgIGNvbm4uY2xvc2UoKQogICAgaWYgZGYuZW1wdHk6CiAgICAgICAgcmV0dXJuIFtdCgogICAgIyBFbnN1cmUgYWxsIG51bWVyaWMgY29sdW1ucyBhcmUgZmxvYXRzIChub3Qgb2JqZWN0cykKICAgIG51bV9jb2xzID0gWyJvaV91c2QiLCJsb25nX2FjY291bnRfcGN0Iiwic2hvcnRfYWNjb3VudF9wY3QiLAogICAgICAgICAgICAgICAgImZ1bmRpbmciLCJsc19kZWx0YV9wY3QiLCJpbWJhbGFuY2UiXQogICAgZm9yIGMgaW4gbnVtX2NvbHM6CiAgICAgICAgaWYgYyBpbiBkZi5jb2x1bW5zOgogICAgICAgICAgICBkZltjXSA9IHBkLnRvX251bWVyaWMoZGZbY10sIGVycm9ycz0iY29lcmNlIikuZmlsbG5hKDAuMCkKCiAgICAjIC0tLSBPSSBaLVNjb3JlIC0tLQogICAgZGZbIm9pX3oiXSA9IChkZlsib2lfdXNkIl0gLSBkZlsib2lfdXNkIl0ubWVhbigpKSAvIChkZlsib2lfdXNkIl0uc3RkKGRkb2Y9MCkgb3IgMSkKCiAgICAjIC0tLSBMUyBEZWx0YSAvIEltYmFsYW5jZSAtLS0KICAgIGlmICJsc19kZWx0YV9wY3QiIG5vdCBpbiBkZi5jb2x1bW5zIG9yIGRmWyJsc19kZWx0YV9wY3QiXS5pc25hKCkuYWxsKCk6CiAgICAgICAgZGZbImxzX2RlbHRhX3BjdCJdID0gKGRmWyJsb25nX2FjY291bnRfcGN0Il0gLSBkZlsic2hvcnRfYWNjb3VudF9wY3QiXSkKICAgIGlmICJpbWJhbGFuY2UiIG5vdCBpbiBkZi5jb2x1bW5zIG9yIGRmWyJpbWJhbGFuY2UiXS5pc25hKCkuYWxsKCk6CiAgICAgICAgZGZbImltYmFsYW5jZSJdID0gKGRmWyJsb25nX2FjY291bnRfcGN0Il0gLyAoZGZbInNob3J0X2FjY291bnRfcGN0Il0gKyAxZS02KSkgKiAxMDAKCiAgICAjIC0tLSBGdW5kaW5nIEJpYXMgLS0tCiAgICBkZlsiZnVuZGluZ19iaWFzIl0gPSBwZC50b19udW1lcmljKGRmWyJmdW5kaW5nIl0sIGVycm9ycz0iY29lcmNlIikuZmlsbG5hKDAuMCkgKiAxMDAwMAoKICAgICMgLS0tIENvbmZsdWVuY2UgU2NvcmUgLS0tCiAgICBvaV96X25wID0gZGZbIm9pX3oiXS50b19udW1weShkdHlwZT1mbG9hdCkKICAgIGxzX25wID0gZGZbImxzX2RlbHRhX3BjdCJdLnRvX251bXB5KGR0eXBlPWZsb2F0KQogICAgaW1iX25wID0gZGZbImltYmFsYW5jZSJdLnRvX251bXB5KGR0eXBlPWZsb2F0KQogICAgZmJfbnAgPSBkZlsiZnVuZGluZ19iaWFzIl0udG9fbnVtcHkoZHR5cGU9ZmxvYXQpCgogICAgZGZbImNvbmZsdWVuY2Vfc2NvcmUiXSA9ICgKICAgICAgICBucC50YW5oKG5wLmFicyhvaV96X25wKSAvIDIpCiAgICAgICAgKyBucC50YW5oKG5wLmFicyhsc19ucCkgLyA1MCkKICAgICAgICArIG5wLnRhbmgobnAuYWJzKGltYl9ucCkgLyAyMDApCiAgICAgICAgKyBucC50YW5oKG5wLmFicyhmYl9ucCkgLyA1KQogICAgKSAvIDQuMAoKICAgICMgLS0tIEJpYXMgRGV0ZWN0aW9uIC0tLQogICAgZGZbImJpYXMiXSA9IG5wLndoZXJlKGRmWyJjb25mbHVlbmNlX3Njb3JlIl0gPiAwLjY2LCAiQlVMTCIsICJCRUFSIikKICAgIGRmWyJ1cGRhdGVkX2F0Il0gPSBkYXRldGltZS5kYXRldGltZS51dGNub3coKS5pc29mb3JtYXQoKQoKICAgIHJldHVybiBkZltbCiAgICAgICAgInN5bWJvbCIsInRpbWVmcmFtZSIsIm9pX3oiLCJsc19kZWx0YV9wY3QiLAogICAgICAgICJpbWJhbGFuY2UiLCJmdW5kaW5nIiwiY29uZmx1ZW5jZV9zY29yZSIsCiAgICAgICAgImJpYXMiLCJ1cGRhdGVkX2F0IgogICAgXV0udG9fZGljdChvcmllbnQ9InJlY29yZHMiKQoKCmRlZiB1cGRhdGVfcXVhbnRfc3VtbWFyeSgpOgogICAgcm93cyA9IGNvbXB1dGVfcXVhbnRfbWV0cmljcygpCiAgICBpZiBub3Qgcm93czoKICAgICAgICByZXR1cm4gMAogICAgY29ubiA9IHNxbGl0ZTMuY29ubmVjdChEQl9QQVRIKQogICAgY3VyID0gY29ubi5jdXJzb3IoKQogICAgY3VyLmV4ZWN1dGUoIiIiCiAgICAgICAgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcXVhbnRfc3VtbWFyeSAoCiAgICAgICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT0lOQ1JFTUVOVCwKICAgICAgICAgICAgc3ltYm9sIFRFWFQsIHRpbWVmcmFtZSBURVhULAogICAgICAgICAgICBvaV96IFJFQUwsIGxzX2RlbHRhX3BjdCBSRUFMLCBpbWJhbGFuY2UgUkVBTCwKICAgICAgICAgICAgZnVuZGluZyBSRUFMLCBjb25mbHVlbmNlX3Njb3JlIFJFQUwsIGJpYXMgVEVYVCwKICAgICAgICAgICAgdXBkYXRlZF9hdCBURVhUCiAgICAgICAgKTsKICAgICIiIikKICAgIGNvbm4uY29tbWl0KCkKICAgIGN1ci5leGVjdXRlbWFueSgiIiIKICAgICAgICBJTlNFUlQgSU5UTyBxdWFudF9zdW1tYXJ5CiAgICAgICAgKHN5bWJvbCx0aW1lZnJhbWUsb2lfeixsc19kZWx0YV9wY3QsaW1iYWxhbmNlLGZ1bmRpbmcsCiAgICAgICAgIGNvbmZsdWVuY2Vfc2NvcmUsYmlhcyx1cGRhdGVkX2F0KQogICAgICAgIFZBTFVFUyAoOnN5bWJvbCw6dGltZWZyYW1lLDpvaV96LDpsc19kZWx0YV9wY3QsOmltYmFsYW5jZSwKICAgICAgICAgICAgICAgIDpmdW5kaW5nLDpjb25mbHVlbmNlX3Njb3JlLDpiaWFzLDp1cGRhdGVkX2F0KQogICAgIiIiLCByb3dzKQogICAgY29ubi5jb21taXQoKQogICAgY29ubi5jbG9zZSgpCiAgICByZXR1cm4gbGVuKHJvd3MpCgoKIyA9PT0gQ0xJIHJ1bm5lciA9PT0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHByaW50KCJbUXVhbnRFbmdpbmVdIFJ1bm5pbmcgaW50ZWxsaWdlbnQgbWV0cmljcyB1cGRhdGUuLi4iKQogICAgdHJ5OgogICAgICAgIGNvdW50ID0gdXBkYXRlX3F1YW50X3N1bW1hcnkoKQogICAgICAgIGlmIGNvdW50ID4gMDoKICAgICAgICAgICAgcHJpbnQoZiJbUXVhbnRFbmdpbmVdIOKchSBJbnNlcnRlZCB7Y291bnR9IG5ldyByb3dzIGludG8gcXVhbnRfc3VtbWFyeS4iKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KCJbUXVhbnRFbmdpbmVdIOKaoO+4jyBObyBkYXRhIGZvdW5kIG9yIHVwZGF0ZSBza2lwcGVkLiIpCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIGltcG9ydCB0cmFjZWJhY2sKICAgICAgICBwcmludCgiW1F1YW50RW5naW5lXSDinYwgRXJyb3IgZHVyaW5nIHVwZGF0ZToiKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQo=",
        "summary": "106L | quant_engine.py | .py | 3.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\scraper.py",
        "type": ".py",
        "size_kb": 11.0,
        "lines": 316,
        "content": "",
        "summary": "316L | scraper.py | .py | 11.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\utils.py",
        "type": ".py",
        "size_kb": 2.5,
        "lines": 61,
        "content": "aW1wb3J0IHJlcXVlc3RzCmZyb20gY29sbGVjdGlvbnMgaW1wb3J0IE9yZGVyZWREaWN0CmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCB1cmxlbmNvZGUKZnJvbSBmbGFzayBpbXBvcnQgY3VycmVudF9hcHAKCmRlZiBzZW5kX3B1YmxpY19yZXF1ZXN0KHVybF9wYXRoLCBwYXlsb2FkPXt9LCBhcGlfYmFzZT1Ob25lKToKICAgICIiIlB1YmxpYyBBUEkgcmVxdWVzdCB3aXRoIG9wdGlvbmFsIGJhc2UgVVJMIChkZWZhdWx0IGZhcGkpLiIiIgogICAgYmFzZSA9IGFwaV9iYXNlIG9yIGN1cnJlbnRfYXBwLmNvbmZpZy5nZXQoJ0FQSV9CQVNFX1VSTCcsICdodHRwczovL2ZhcGkuYmluYW5jZS5jb20nKQogICAgcXVlcnlfc3RyaW5nID0gdXJsZW5jb2RlKHBheWxvYWQsIFRydWUpCiAgICB1cmwgPSBiYXNlICsgdXJsX3BhdGgKICAgIGlmIHF1ZXJ5X3N0cmluZzoKICAgICAgICB1cmwgPSB1cmwgKyAiPyIgKyBxdWVyeV9zdHJpbmcKICAgIHRyeToKICAgICAgICBzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpCiAgICAgICAgc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7IkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgifSkKICAgICAgICByZXNwb25zZSA9IHNlc3Npb24uZ2V0KHVybCkKICAgICAgICBwcmludChmIkRFQlVHIEFQSToge3VybH0gLSBTdGF0dXM6IHtyZXNwb25zZS5zdGF0dXNfY29kZX0iKSAgIyBLZWVwIGRlYnVnCiAgICAgICAgaWYgcmVzcG9uc2Uuc3RhdHVzX2NvZGUgIT0gMjAwOgogICAgICAgICAgICBwcmludChmIk5vbi0yMDAgc3RhdHVzIGZvciB7dXJsfToge3Jlc3BvbnNlLnRleHRbOjEwMF19IikKICAgICAgICAgICAgcmV0dXJuIHt9LCBbXSAgIyBGYWxsYmFjawogICAgICAgIAogICAgICAgIGlmIG5vdCByZXNwb25zZS50ZXh0LnN0cmlwKCk6CiAgICAgICAgICAgIHByaW50KGYiRW1wdHkgcmVzcG9uc2UgZm9yIHt1cmx9IikKICAgICAgICAgICAgcmV0dXJuIHt9LCBbXQogICAgICAgIAogICAgICAgICMgRGV0ZWN0IEhUTUwgZXJyb3IgcGFnZQogICAgICAgIGlmIHJlc3BvbnNlLnRleHQuc3RhcnRzd2l0aCgnPCFET0NUWVBFJykgb3IgJ2JpbmFuY2UuY29tL2VuL2Vycm9yJyBpbiByZXNwb25zZS50ZXh0Lmxvd2VyKCk6CiAgICAgICAgICAgIHByaW50KGYiSFRNTCBlcnJvciBwYWdlIGZvciB7dXJsfTogUmVnaW9uYWwgYmxvY2sgb3IgaW52YWxpZCBhY2Nlc3MuIEZhbGxiYWNrIGVtcHR5LiIpCiAgICAgICAgICAgIHJldHVybiB7fSwgW10KICAgICAgICAKICAgICAgICB0cnk6CiAgICAgICAgICAgIGpzb25fcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkKICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5KU09ORGVjb2RlRXJyb3IgYXMgZToKICAgICAgICAgICAgcHJpbnQoZiJOb24tSlNPTiByZXNwb25zZSBmb3Ige3VybH06IHtyZXNwb25zZS50ZXh0WzoyMDBdfSIpCiAgICAgICAgICAgIGpzb25fcmVzcG9uc2UgPSBbXSAgIyBGYWxsYmFjayBlbXB0eSBsaXN0CiAgICAgICAgCiAgICAgICAgaWYgImNvZGUiIGluIGpzb25fcmVzcG9uc2UgYW5kIGpzb25fcmVzcG9uc2VbImNvZGUiXSA8IDA6CiAgICAgICAgICAgIHByaW50KGYiQVBJIGVycm9yIGZvciB7dXJsfToge2pzb25fcmVzcG9uc2VbJ21zZyddfSIpCiAgICAgICAgICAgIHJldHVybiB7fSwgW10KICAgICAgICAKICAgICAgICByZXR1cm4gcmVzcG9uc2UuaGVhZGVycywganNvbl9yZXNwb25zZQogICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yIGFzIGU6CiAgICAgICAgcHJpbnQoZiJDb25uZWN0aW9uIGVycm9yIGZvciB7dXJsfToge2V9IikKICAgICAgICByZXR1cm4ge30sIFtdCgpkZWYgaGFzaGluZyhxdWVyeV9zdHJpbmcsIGV4Y2hhbmdlPSJiaW5hbmNlIiwgdGltZXN0YW1wPU5vbmUpOgogICAgIiIiU2lnbmF0dXJlIGhhc2hpbmcgKGZyb20gc2NyYXBlci5weSkuIiIiCiAgICBpbXBvcnQgaG1hYwogICAgaW1wb3J0IGhhc2hsaWIKICAgIGlmIGV4Y2hhbmdlID09ICJieWJpdCI6CiAgICAgICAgcXVlcnlfc3RyaW5nID0gZiJ7dGltZXN0YW1wfXtjdXJyZW50X2FwcC5jb25maWdbJ0FQSV9LRVknXX01MDAwIiArIHF1ZXJ5X3N0cmluZwogICAgICAgIHJldHVybiBobWFjLm5ldygKICAgICAgICAgICAgYnl0ZXMoY3VycmVudF9hcHAuY29uZmlnWyJBUElfU0VDUkVUIl0uZW5jb2RlKCJ1dGYtOCIpKSwKICAgICAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICAgICAgaGFzaGxpYi5zaGEyNTYsCiAgICAgICAgKS5oZXhkaWdlc3QoKQogICAgcmV0dXJuIGhtYWMubmV3KAogICAgICAgIGJ5dGVzKGN1cnJlbnRfYXBwLmNvbmZpZ1siQVBJX1NFQ1JFVCJdLmVuY29kZSgidXRmLTgiKSksCiAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICBoYXNobGliLnNoYTI1NiwKICAgICkuaGV4ZGlnZXN0KCk=",
        "summary": "61L | utils.py | .py | 2.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\version.py",
        "type": ".py",
        "size_kb": 0.1,
        "lines": 3,
        "content": "IyBweWxpbnQ6IHNraXAtZmlsZQoKX192ZXJzaW9uX18gPSAiMC4zLjQuZGV2MCtnNTcxMzdkNGU4LmQyMDI1MTAxNiI=",
        "summary": "3L | version.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\wsgi.py",
        "type": ".py",
        "size_kb": 0.1,
        "lines": 6,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGZ1dHVyZXNib2FyZC5hcHAKCgphcHAgPSBmdXR1cmVzYm9hcmQuYXBwLmluaXRfYXBwKCkK",
        "summary": "6L | wsgi.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\__init__.py",
        "type": ".py",
        "size_kb": 0.9,
        "lines": 33,
        "content": "Iwpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgppbXBvcnQgcGF0aGxpYgoKUEFDS0FHRV9ST09UID0gcGF0aGxpYi5QYXRoKF9fZmlsZV9fKS5yZXNvbHZlKCkucGFyZW50CnRyeToKICAgIGZyb20gLnZlcnNpb24gaW1wb3J0IF9fdmVyc2lvbl9fCmV4Y2VwdCBJbXBvcnRFcnJvcjogICMgcHJhZ21hOiBubyBjb3ZlcgogICAgX192ZXJzaW9uX18gPSAiMC4wLjAubm90LWluc3RhbGxlZCIKICAgIHRyeToKICAgICAgICBmcm9tIGltcG9ydGxpYi5tZXRhZGF0YSBpbXBvcnQgUGFja2FnZU5vdEZvdW5kRXJyb3IsIHZlcnNpb24KCiAgICAgICAgdHJ5OgogICAgICAgICAgICBfX3ZlcnNpb25fXyA9IHZlcnNpb24oImZ1dHVyZXNib2FyZCIpCiAgICAgICAgZXhjZXB0IFBhY2thZ2VOb3RGb3VuZEVycm9yOgogICAgICAgICAgICAjIHBhY2thZ2UgaXMgbm90IGluc3RhbGxlZAogICAgICAgICAgICBwYXNzCiAgICBleGNlcHQgSW1wb3J0RXJyb3I6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmcm9tIHBrZ19yZXNvdXJjZXMgaW1wb3J0ICggICMgdHlwZTogaWdub3JlCiAgICAgICAgICAgICAgICBEaXN0cmlidXRpb25Ob3RGb3VuZCwKICAgICAgICAgICAgICAgIGdldF9kaXN0cmlidXRpb24sCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIF9fdmVyc2lvbl9fID0gZ2V0X2Rpc3RyaWJ1dGlvbigiZnV0dXJlc2JvYXJkIikudmVyc2lvbgogICAgICAgICAgICBleGNlcHQgRGlzdHJpYnV0aW9uTm90Rm91bmQ6CiAgICAgICAgICAgICAgICAjIHBhY2thZ2UgaXMgbm90IGluc3RhbGxlZAogICAgICAgICAgICAgICAgcGFzcwogICAgICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICAgICAgIyBwa2cgcmVzb3VyY2VzIGlzbid0IGV2ZW4gYXZhaWxhYmxlPyEKICAgICAgICAgICAgcGFzcwo=",
        "summary": "33L | __init__.py | .py | 0.9 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\base.html",
        "type": ".html",
        "size_kb": 10.5,
        "lines": 141,
        "content": "",
        "summary": "141L | base.html | .html | 10.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\coin.html",
        "type": ".html",
        "size_kb": 30.7,
        "lines": 707,
        "content": "",
        "summary": "707L | coin.html | .html | 30.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\error.html",
        "type": ".html",
        "size_kb": 0.4,
        "lines": 10,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfTQwNHslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZSI+PC9pPiBFcnJvciA0MDQ8L2gzPgogICAgPC9kaXY+CiAgICA8cCBjbGFzcz0iaW1wb3J0YW50Ij4KICAgICAgICBQYWdlIG5vdCBmb3VuZAogICAgPC9wPgp7JSBlbmRibG9jayAlfQo=",
        "summary": "10L | error.html | .html | 0.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\history.html",
        "type": ".html",
        "size_kb": 3.6,
        "lines": 87,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9eyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgdGl0bGUgJX1JbmNvbWUgaGlzdG9yeXslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWhpc3RvcnkiPjwvaT4gSW5jb21lIGhpc3Rvcnk8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIHslIGlmIGZpbGVuYW1lICE9ICItIiAlfQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtaW5mbyIgcm9sZT0iYWxlcnQiPjxpIGNsYXNzPSJmYXMgZmEtZmlsZS1kb3dubG9hZCI+PC9pPiBZb3VyIGZpbGUgaGFzIGJlZW4gc2F2ZWQgdG8gPGNvZGU+e3sgZm5hbWUgfX08L2NvZGU+IHdoaWNoIGNhbiBiZSBkb3dubG9hZGVkIGJ5IGNsaWNraW5nIDxhIGhyZWY9ICJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1mbmFtZSkgfX0iPmhlcmU8L2E+PC9kaXY+PGJyPgogICAgICAgICAgICB7JSBlbmRpZiAlfQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0ib3JkZXJzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+VGltZSBwZXJpb2Q8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlRvdGFsIHJlY29yZHM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvbCBpbiBoaXN0b3J5WyJjb2x1bW5zIl0gJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+e3sgY29sIH19PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgdGltZWZyYW1lIGluIGhpc3RvcnkgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGlmIHRpbWVmcmFtZSAhPSAiY29sdW1ucyIgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmhpc3RvcnlfcGFnZV90aW1lZnJhbWUiLCBzdGFydD1oaXN0b3J5W3RpbWVmcmFtZV1bInN0YXJ0Il0sIGVuZD1oaXN0b3J5W3RpbWVmcmFtZV1bImVuZCJdKSB9fSIgcm9sZT0iYnV0dG9uIj5TYXZlIHRvIGZpbGU8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHRpbWVmcmFtZSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBoaXN0b3J5W3RpbWVmcmFtZV1bInRvdGFsIl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgY29sIGluIGhpc3RvcnlbImNvbHVtbnMiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGhpc3RvcnlbdGltZWZyYW1lXVtjb2xdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGJyPjxocj48YnI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8dGFibGUgaWQ9Im9sZGZpbGVzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+RmlsZW5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgZmlsZSBpbiBmaWxlcyAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1maWxlKSB9fSIgcm9sZT0iYnV0dG9uIj5Eb3dubG9hZDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBmaWxlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKCgoKCiAgICA8c2NyaXB0PgogICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICQoJyNvcmRlcnMnKS5EYXRhVGFibGUoewogICAgICAgICAgICAgICAgInBhZ2luZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgIm9yZGVyIjogW10sCiAgICAgICAgICAgICAgICAiaW5mbyI6IGZhbHNlLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJCgnI29sZGZpbGVzJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgICAgICJwYWdpbmciOiB0cnVlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IHRydWUsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWyAxLCAnZGVzYycgXV0sCiAgICAgICAgICAgICAgICAiaW5mbyI6IHRydWUsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "87L | history.html | .html | 3.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\home.html",
        "type": ".html",
        "size_kb": 9.4,
        "lines": 300,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9PG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iNjAiPnslIGVuZGJsb2NrICV9CnslIGJsb2NrIHRpdGxlICV9RGFzaGJvYXJkeyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgY29udGVudCAlfQogICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGZsZXgtd3JhcCBmbGV4LW1kLW5vd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyBwYi0yIG1iLTMgYm9yZGVyLWJvdHRvbSI+CiAgICAgICAgPGgzPjxpIGNsYXNzPSJmYXMgZmEtdGFjaG9tZXRlci1hbHQiPjwvaT4gRGFzaGJvYXJkPC9oMz4gPHNwYW4gY2xhc3M9ImJhZGdlIGJnLXNlY29uZGFyeSI+PGkgY2xhc3M9ImZhciBmYS1jbG9jayI+PC9pPiBMQVNUIE9SREVSOiB7eyBsYXN0dXBkYXRlIH19PC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9ImJ0bi10b29sYmFyIG1iLTIgbWItbWQtMCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1ncm91cCBtZS0yIj4KICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0iR0VUIiBuYW1lPSJkYXRlcmFuZ2Vmb3JtIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc20iPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC10ZXh0Ij48aSBjbGFzcz0iZmFyIGZhLWNhbGVuZGFyLWFsdCI+PC9pPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0iZGF0ZXJhbmdlIiBzaXplPSIyMiIgLz4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGEgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tb3V0bGluZS1zZWNvbmRhcnkiIGhyZWY9Imh0dHBzOi8vd3d3LmJpbmFuY2UuY29tL2VuL2Z1dHVyZXMve3sgY29pbiB9fSIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWV4dGVybmFsLWxpbmstYWx0Ij48L2k+IFZpZXcgb24gQmluYW5jZSAKICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgIDxhIGhyZWY9Int7IHVybF9mb3IoIm1haW4uZGFzaGJvYXJkX3BhZ2UiLCBzdGFydD10aW1lcmFuZ2VzWzBdWzBdLCBlbmQ9dGltZXJhbmdlc1swXVsxXSkgfX0iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj57eyB0b3RhbHNbNl1bMF0gfX0lPC9oNT4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0Ij4ke3sgdG90YWxzWzFdIH19PC9wPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1mb290ZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgUHJvZml0IHRvZGF5CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgIDxhIGhyZWY9Int7IHVybF9mb3IoIm1haW4uZGFzaGJvYXJkX3BhZ2UiLCBzdGFydD10aW1lcmFuZ2VzWzJdWzBdLCBlbmQ9dGltZXJhbmdlc1syXVsxXSkgfX0iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj57eyB0b3RhbHNbNl1bMV0gfX0lPC9oNT4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0Ij4ke3sgdG90YWxzWzJdIH19PC9wPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1mb290ZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgUHJvZml0IGZyb20gTW9uZGF5CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgICA8YSBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmRhc2hib2FyZF9wYWdlIiwgc3RhcnQ9dGltZXJhbmdlc1s0XVswXSwgZW5kPXRpbWVyYW5nZXNbNF1bMV0pIH19Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC10aXRsZSI+e3sgdG90YWxzWzZdWzJdIH19JTwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+JHt7IHRvdGFsc1szXSB9fTwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFByb2ZpdCBpbiB7eyB0b3RhbHNbOF0gfX0KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIj4KICAgICAgICAgICA8YSBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmRhc2hib2FyZF9wYWdlIiwgc3RhcnQ9dGltZXJhbmdlc1s4XVswXSwgZW5kPXRpbWVyYW5nZXNbOF1bMV0pIH19Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC10aXRsZSI+e3sgdG90YWxzWzZdWzNdIH19JTwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+JHt7IHRvdGFsc1swXSB9fTwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFRvdGFsIHByb2ZpdAogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTIiPgogICAgICAgICAgICA8YSBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLnBvc2l0aW9uc19wYWdlIikgfX0iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj4ke3sgdG90YWxzWzddWzBdIH19PC9oNT4KCSAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPiZuYnNwOzwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFVucmVhbGlzZWQgUG5MCiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtdGl0bGUiPiR7eyB0b3RhbHNbN11bMV0gfX08L2g1PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+Jm5ic3A7PC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgV2FsbGV0IGJhbGFuY2UKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxicj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFByb2ZpdCBieSBkYXkgYmV0d2VlbiB7eyBzdGFydGRhdGUgfX0gYW5kIHt7IGVuZGRhdGUgfX08c3BhbiBjbGFzcz0iZmxvYXQtZW5kIj48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXNlY29uZGFyeSBidG4tc20iIHJvbGU9ImJ1dHRvbiIgaHJlZj0iLi4vLi4vcHJvamVjdGlvbiI+UHJvamVjdGlvbjwvYT48L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibGluZUNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CgkJCQk8ZGl2IGNsYXNzPSJjYXJkLWZvb3RlciB0ZXh0LW11dGVkIj4KCQkJCQlQcm9maXQgb3ZlciB0aGlzIHBlcmlvZDoge3sgIiQlLjJmInxmb3JtYXQodG90YWxzWzldKSB9fQoJCQkJPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciB0ZXh0LW11dGVkIj4KICAgICAgICAgICAgICAgICAgICBQcm9maXQgYnkgY29pbiBiZXR3ZWVuIHt7IHN0YXJ0ZGF0ZSB9fSBhbmQge3sgZW5kZGF0ZSB9fQogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxjYW52YXMgaWQ9ImJhckNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CgkJCQk8ZGl2IGNsYXNzPSJjYXJkLWZvb3RlciB0ZXh0LW11dGVkIj4KCQkJCQlDb2lucyBhY3RpdmUgb3ZlciB0aGlzIHBlcmlvZDoge3sgdG90YWxzWzEwXSB9fQoJCQkJPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8c2NyaXB0PiAgICAKICAgICQoJ2lucHV0W25hbWU9ImRhdGVyYW5nZSJdJykuZGF0ZXJhbmdlcGlja2VyKHsKICAgICAgICAic2hvd0Ryb3Bkb3ducyI6IHRydWUsCiAgICAgICAgImF1dG9BcHBseSI6IHRydWUsCiAgICAgICAgcmFuZ2VzOiB7CiAgICAgICAgICAgICdUb2RheSc6IFsne3t0aW1lcmFuZ2VzWzBdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzBdWzFdfX0nXSwKICAgICAgICAgICAgJ1llc3RlcmRheSc6IFsne3t0aW1lcmFuZ2VzWzFdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzFdWzFdfX0nXSwKICAgICAgICAgICAgJ1RoaXMgV2Vlayc6IFsne3t0aW1lcmFuZ2VzWzJdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzJdWzFdfX0nXSwKICAgICAgICAgICAgJ0xhc3QgV2Vlayc6IFsne3t0aW1lcmFuZ2VzWzNdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzNdWzFdfX0nXSwKICAgICAgICAgICAgJ1RoaXMgTW9udGgnOiBbJ3t7dGltZXJhbmdlc1s0XVswXX19JywgJ3t7dGltZXJhbmdlc1s0XVsxXX19J10sCiAgICAgICAgICAgICdMYXN0IE1vbnRoJzogWyd7e3RpbWVyYW5nZXNbNV1bMF19fScsICd7e3RpbWVyYW5nZXNbNV1bMV19fSddLAogICAgICAgICAgICAnVGhpcyBZZWFyJzogWyd7e3RpbWVyYW5nZXNbNl1bMF19fScsICd7e3RpbWVyYW5nZXNbNl1bMV19fSddLAogICAgICAgICAgICAnTGFzdCBZZWFyJzogWyd7e3RpbWVyYW5nZXNbN11bMF19fScsICd7e3RpbWVyYW5nZXNbN11bMV19fSddLAogICAgICAgICAgICAnQWxsIFRpbWUnOiBbJ3t7dGltZXJhbmdlc1s4XVswXX19JywgJ3t7dGltZXJhbmdlc1s4XVsxXX19J10sCiAgICAgICAgfSwKICAgICAgICAibG9jYWxlIjogewogICAgICAgICAgICAiZm9ybWF0IjogIllZWVktTU0tREQiLAogICAgICAgICAgICAic2VwYXJhdG9yIjogIiAtICIsCiAgICAgICAgICAgICJmcm9tTGFiZWwiOiAiRnJvbSIsCiAgICAgICAgICAgICJ0b0xhYmVsIjogIlRvIiwKICAgICAgICAgICAgIndlZWtMYWJlbCI6ICJXIiwKICAgICAgICAgICAgImRheXNPZldlZWsiOiBbCiAgICAgICAgICAgICAgICAiU3UiLAogICAgICAgICAgICAgICAgIk1vIiwKICAgICAgICAgICAgICAgICJUdSIsCiAgICAgICAgICAgICAgICAiV2UiLAogICAgICAgICAgICAgICAgIlRoIiwKICAgICAgICAgICAgICAgICJGciIsCiAgICAgICAgICAgICAgICAiU2EiCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJtb250aE5hbWVzIjogWwogICAgICAgICAgICAgICAgIkphbnVhcnkiLAogICAgICAgICAgICAgICAgIkZlYnJ1YXJ5IiwKICAgICAgICAgICAgICAgICJNYXJjaCIsCiAgICAgICAgICAgICAgICAiQXByaWwiLAogICAgICAgICAgICAgICAgIk1heSIsCiAgICAgICAgICAgICAgICAiSnVuZSIsCiAgICAgICAgICAgICAgICAiSnVseSIsCiAgICAgICAgICAgICAgICAiQXVndXN0IiwKICAgICAgICAgICAgICAgICJTZXB0ZW1iZXIiLAogICAgICAgICAgICAgICAgIk9jdG9iZXIiLAogICAgICAgICAgICAgICAgIk5vdmVtYmVyIiwKICAgICAgICAgICAgICAgICJEZWNlbWJlciIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgImZpcnN0RGF5IjogMQogICAgICAgIH0sCiAgICAgICAgImFsd2F5c1Nob3dDYWxlbmRhcnMiOiB0cnVlLAogICAgICAgICJzdGFydERhdGUiOiAie3tzdGFydGRhdGV9fSIsCiAgICAgICAgImVuZERhdGUiOiAie3tlbmRkYXRlfX0iLAogICAgICAgICJvcGVucyI6ICJsZWZ0IgogICAgfSk7CiAgICAKICAgICQoJ2lucHV0W25hbWU9ImRhdGVyYW5nZSJdJykub24oJ2FwcGx5LmRhdGVyYW5nZXBpY2tlcicsIChlLCBwaWNrZXIpID0+IHsKICAgICAgZG9jdW1lbnQuZm9ybXNbImRhdGVyYW5nZWZvcm0iXS5zdWJtaXQoKTsKICAgIH0pOwogICAgCkNoYXJ0LnJlZ2lzdGVyKENoYXJ0RGF0YUxhYmVscyk7CmNvbnN0IGRhdGEgPSB7CiAgbGFiZWxzOiB7eyBkYXRhWzFdWzBdIHwgc2FmZSB9fSwKICBkYXRhc2V0czogW3sKICAgIGF4aXM6ICd5JywKICAgIGxhYmVsOiAnUHJvZml0ICQnLAogICAgZGF0YToge3sgZGF0YVsxXVsxXSB9fSwKICAgIGZpbGw6IGZhbHNlLAogICAgYm9yZGVyV2lkdGg6IDEKICB9XQp9OwoKY29uc3QgY29uZmlnID0gewogIHR5cGU6ICdiYXInLAogIGRhdGE6IGRhdGEsCiAgb3B0aW9uczogewogICAgICBvbkNsaWNrOiBncmFwaENsaWNrRXZlbnQsCiAgICAgIGluZGV4QXhpczogJ3knLAogICAgICBwbHVnaW5zOnsgICAKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgfSwKICAgICAgfSwKCSAgc2NhbGVzOiB7CgkJeTogewoJCQl0aWNrczogewoJCQkJYXV0b1NraXA6IGZhbHNlLAoJCQl9CgkJfQoJICB9CiAgfQp9OwogICAgCmZ1bmN0aW9uIGdyYXBoQ2xpY2tFdmVudChldmVudCwgYXJyYXkpewogICAgaWYoYXJyYXlbMF0pewogICAgICAgIGNvbnN0IHZhbHVlID0gZGF0YS5sYWJlbHNbYXJyYXlbMF0uaW5kZXhdOwogICAgICAgIGxvY2F0aW9uLmhyZWYgPSAiLi4vLi4vY29pbnMvIiArIHZhbHVlOwogICAgfQp9Cgp2YXIgbXlDaGFydCA9IG5ldyBDaGFydCgKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYXJDaGFydCcpLAogICAgY29uZmlnCik7CiAgICAKY29uc3QgZGF0YTIgPSB7CiAgbGFiZWxzOiB7eyBkYXRhWzBdWzFdIHwgc2FmZSB9fSwKICBkYXRhc2V0czogWwoJICB7CgkJbGFiZWw6ICdQcm9maXQnLAoJCWRhdGE6IHt7IGRhdGFbMF1bMF0gfX0sCgkJZmlsbDogZmFsc2UsCgkJYm9yZGVyQ29sb3I6ICdyZ2IoNzUsIDE5MiwgMTkyKScsCgkJdGVuc2lvbjogMC4xLAoJCXlBeGlzSUQ6ICd5JywKCSAgfSwKCSAgewoJCWxhYmVsOiAnQmFsYW5jZScsCgkJZGF0YToge3sgZGF0YVsyXVswXSB9fSwKCQlmaWxsOiB0cnVlLAoJCWJvcmRlckNvbG9yOiAncmdiYSgyNDAsIDIzNCwgMTUxLCAwLjMpJywKCQliYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI0MCwgMjM0LCAxNTEsIDAuMyknLAoJCXRlbnNpb246IDAuMSwKCQl5QXhpc0lEOiAneTEnLAogICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgICAgdGl0bGU6IG51bGwKICAgICAgICAgICAgfQogICAgICAgIH0KCSAgfSwJICAKICBdCn07CmNvbnN0IGNvbmZpZzIgPSB7CiAgdHlwZTogJ2xpbmUnLAogIGRhdGE6IGRhdGEyLAogIG9wdGlvbnM6IHsKCQlyZXNwb25zaXZlOiB0cnVlLAogICAgICAgIGxheW91dDogewogICAgICAgICAgICBwYWRkaW5nOiB7CiAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHBsdWdpbnM6ewogICAgICAgICAgICBkYXRhbGFiZWxzOiB7CiAgICAgICAgICAgICAgICBhbmNob3I6ICdlbmQnLAogICAgICAgICAgICAgICAgYWxpZ246ICd0b3AnLAogICAgICAgICAgICAgICAgb2Zmc2V0OiA1LAogICAgICAgICAgICB9LAogICAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKCQlzY2FsZXM6IHsKCQkJeTogewoJCQkJdHlwZTogJ2xpbmVhcicsCgkJCQlkaXNwbGF5OiB0cnVlLAoJCQkJcG9zaXRpb246ICdsZWZ0JywKCQkJCWJlZ2luQXRaZXJvOiB0cnVlLAoJCQkJdGlja3M6IHsKCQkJCQlhdXRvU2tpcDogZmFsc2UsCgkJCQl9CgkJCX0sCgkJCXkxOiB7CgkJCQl0eXBlOiAnbGluZWFyJywKCQkJCWRpc3BsYXk6IHRydWUsCgkJCQlwb3NpdGlvbjogJ3JpZ2h0JywKCQkJCWdyaWQ6IHsKCQkJCSAgZHJhd09uQ2hhcnRBcmVhOiBmYWxzZSwgLy8gb25seSB3YW50IHRoZSBncmlkIGxpbmVzIGZvciBvbmUgYXhpcyB0byBzaG93IHVwCgkJCQl9CgkJCX0KCQl9Cgl9Cn07CiAgICAKdmFyIG15Q2hhcnQgPSBuZXcgQ2hhcnQoCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGluZUNoYXJ0JyksCiAgICBjb25maWcyCik7Cjwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "300L | home.html | .html | 9.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\positions.html",
        "type": ".html",
        "size_kb": 4.5,
        "lines": 84,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9PG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iNjAiPnslIGVuZGJsb2NrICV9CnslIGJsb2NrIHRpdGxlICV9UG9zaXRpb25zeyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgY29udGVudCAlfQogICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGZsZXgtd3JhcCBmbGV4LW1kLW5vd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyBwYi0yIG1iLTMgYm9yZGVyLWJvdHRvbSI+CiAgICAgICAgPGgzPjxpIGNsYXNzPSJmYXMgZmEtaGFuZC1ob2xkaW5nLXVzZCI+PC9pPiBQb3NpdGlvbnM8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiB0YWJsZS1yZXNwb25zaXZlIj4KICAgICAgICAgICAgPHRhYmxlIGlkPSJvcmRlcnMiIGNsYXNzPSd0YWJsZSB0YWJsZS1zbSB0YWJsZS1ib3JkZXJlZCB0ZXh0LWNlbnRlcic+CiAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9InRoZWFkLWRhcmsiPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlN5bWJvbDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5MZXZlcmFnZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFZvbHVtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFByaWNlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlBvcy4gVmFsdWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+VW5yZWFsaXNlZCBQbkw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q3VycmVudCBQcmljZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+QnV5cyBsZWZ0PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0YWJsZS1zdWNjZXNzIj5OZXh0IGJ1eTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLXN1Y2Nlc3MiPkRpc3RhbmNlICU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+U2VsbHMgbGVmdDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtZGFuZ2VyIj5OZXh0IHNlbGw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2UgJTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvaW4gaW4gcG9zaXRpb25zICV9CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBjb2luIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNV19fSB7eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bM10gfX14PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKHBvc2l0aW9uc1tjb2luXVswXVswXVs2XSAqIHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSl8cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7ICIkJS4yZiJ8Zm9ybWF0KHBvc2l0aW9uc1tjb2luXVswXVswXVsyXSkgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IG1hcmtwcmljZXNbY29pbl18cm91bmQoOCl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzBdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVs0XX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNV19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+eyUgaWYgcG9zaXRpb25zW2NvaW5dWzJdWzRdICE9ICItIiAlfXt7ICgocG9zaXRpb25zW2NvaW5dWzJdWzVdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsxXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNl19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzddfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs2XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs3XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICB7JSBpZiBwb3NpdGlvbnNbY29pbl1bMF18bGVuZ3RoID4gMSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgY29pbiB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzVdfX0ge3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzNdIH19eDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzZdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IChwb3NpdGlvbnNbY29pbl1bMF1bMV1bNl0gKiBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0pfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyAiJCUuMmYifGZvcm1hdChwb3NpdGlvbnNbY29pbl1bMF1bMV1bMl0pIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBtYXJrcHJpY2VzW2NvaW5dfHJvdW5kKDgpfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsyXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bOF19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzldfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs4XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs5XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bM119fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzEwXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bMTFdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVsxMF0gIT0gIi0iICV9e3sgKChwb3NpdGlvbnNbY29pbl1bMl1bMTFdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdD4KCiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCgnI29yZGVycycpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWzAsImFzYyJdXSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfSApOwoKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "84L | positions.html | .html | 4.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\projection.html",
        "type": ".html",
        "size_kb": 5.0,
        "lines": 135,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfVByb2plY3Rpb257JSBlbmRibG9jayAlfQp7JSBibG9jayBjb250ZW50ICV9CiAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gZmxleC13cmFwIGZsZXgtbWQtbm93cmFwIGFsaWduLWl0ZW1zLWNlbnRlciBwdC0zIHBiLTIgbWItMyBib3JkZXItYm90dG9tIj4KICAgICAgICA8aDM+PGkgY2xhc3M9ImZhcyBmYS1jaGFydC1saW5lIj48L2k+IFByb2plY3Rpb248L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgQmFsYW5jZSBwcm9qZWN0aW9uIHZpc3VhbGlzZWQKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibGluZUNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8YnI+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIEJhbGFuY2UgcHJvamVjdGlvbiBicmVha2Rvd24KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHRhYmxlIGlkPSJoeXBlIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EYWlseSAlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4zMCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD42MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD45MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4xMjAgZGF5czwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+MjQwIGRheXM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjM2NSBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIHZhbHVlIGluIGRhdGFbInByb2oiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKCh2YWx1ZSAtIDEpICogMTAwKXxyb3VuZCgyKSB9fSU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMzBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVs5MF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMTIwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWy0xXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbV92YWx1ZSJdIH19JSAoYXZnIHBhc3QgNyBkYXlzKTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzMwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzkwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzEyMF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInBjdXN0b20iXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwY3VzdG9tIl1bLTFdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8c2NyaXB0PgoKICAgICAgICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkKCcjaHlwZScpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAic2VhcmNoaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbXSwKICAgICAgICAgICAgICAgICJpbmZvIjogZmFsc2UsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKCiAgICAgICAgQ2hhcnQucmVnaXN0ZXIoQ2hhcnREYXRhTGFiZWxzKTsKCiAgICAgICAgY29uc3QgZmxhdF9jb2xvdXJzID0gWwogICAgICAgICAgICAicmdiYSg0NiwgMjA0LCAxMTMsIDAuMykiLCAicmdiYSg1MiwgMTUyLCAyMTksIDAuMykiLCAicmdiYSgxNTUsIDg5LCAxODIsIDAuMykiLCAicmdiYSg1MiwgNzMsIDk0LCAwLjMpIiwgInJnYmEoMjQxLCAxOTYsIDE1LCAwLjMpIiwgCiAgICAgICAgICAgICJyZ2JhKDIzMCwgMTI2LCAzNCwgMC4zKSIsICJyZ2JhKDIzMSwgNzYsIDYwLCAwLjMpIiwgInJnYmEoMTI3LCAxNDAsIDE0MSwgMC4zKSIsICJyZ2JhKDQ0LCA2MiwgODAsIDAuMykiLCAicmdiYSgyNiwgMTg4LCAxNTYsIDAuMykiLAogICAgICAgICAgICAKICAgICAgICBdCiAgICAgICAgCiAgICAgICAgY29uc3QgZGF0YSA9IHsKICAgICAgICAgICAgbGFiZWxzOiB7eyBkYXRhWyJkYXRlcyJdIHwgc2FmZSB9fSwKICAgICAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgICAgICAgIHslIGZvciB2YWx1ZSBpbiBkYXRhWyJwcm9qIl0gJX0KICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3t7ICgodmFsdWUgLSAxKSAqIDEwMCl8cm91bmQoMikgfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwcm9qIl1bdmFsdWVdIH19LAogICAgICAgICAgICAgICAgICAgIGZpbGw6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBmbGF0X2NvbG91cnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmZsYXRfY29sb3Vycy5sZW5ndGgpXSwKICAgICAgICAgICAgICAgICAgICB0ZW5zaW9uOiAwLjEsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICd7eyBkYXRhWyJwY3VzdG9tX3ZhbHVlIl0gfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwY3VzdG9tIl0gfX0sCiAgICAgICAgICAgICAgICAgICAgZmlsbDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDc1LCAxOTIsIDE5MiwgMC4zKScsCiAgICAgICAgICAgICAgICAgICAgdGVuc2lvbjogMC4xLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgXQogICAgICAgIH07CiAgICAgICAgY29uc3QgY29uZmlnMiA9IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgICAgICAgICAgbGF5b3V0OiB7CiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogewogICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHBsdWdpbnM6ewogICAgICAgICAgICAgICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvU2tpcDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydCgKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpbmVDaGFydCcpLAogICAgICAgICAgICBjb25maWcyCiAgICAgICAgKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "135L | projection.html | .html | 5.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\chartjs-chart-financial.js",
        "type": ".js",
        "size_kb": 14.6,
        "lines": 522,
        "content": "",
        "summary": "522L | chartjs-chart-financial.js | .js | 14.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\hammer.min.js",
        "type": ".js",
        "size_kb": 20.3,
        "lines": 7,
        "content": "",
        "summary": "7L | hammer.min.js | .js | 20.3 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\dashboard.css",
        "type": ".css",
        "size_kb": 1.6,
        "lines": 100,
        "content": "Ym9keSB7CiAgZm9udC1zaXplOiAuODc1cmVtOwp9CgouZmVhdGhlciB7CiAgd2lkdGg6IDE2cHg7CiAgaGVpZ2h0OiAxNnB4OwogIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTsKfQoKLyoKICogU2lkZWJhcgogKi8KCi5zaWRlYmFyIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIC8qIHJ0bDpyYXc6CiAgcmlnaHQ6IDA7CiAgKi8KICBib3R0b206IDA7CiAgLyogcnRsOnJlbW92ZSAqLwogIGxlZnQ6IDA7CiAgei1pbmRleDogMTAwOyAvKiBCZWhpbmQgdGhlIG5hdmJhciAqLwogIHBhZGRpbmc6IDQ4cHggMCAwOyAvKiBIZWlnaHQgb2YgbmF2YmFyICovCiAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAuMSk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkgewogIC5zaWRlYmFyIHsKICAgIHRvcDogNXJlbTsKICB9Cn0KCi5zaWRlYmFyLXN0aWNreSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogMDsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0OHB4KTsKICBwYWRkaW5nLXRvcDogLjVyZW07CiAgb3ZlcmZsb3cteDogaGlkZGVuOwogIG92ZXJmbG93LXk6IGF1dG87IC8qIFNjcm9sbGFibGUgY29udGVudHMgaWYgdmlld3BvcnQgaXMgc2hvcnRlciB0aGFuIGNvbnRlbnQuICovCn0KCi5zaWRlYmFyIC5uYXYtbGluayB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBjb2xvcjogIzMzMzsKfQoKLnNpZGViYXIgLm5hdi1saW5rIC5mZWF0aGVyIHsKICBtYXJnaW4tcmlnaHQ6IDRweDsKICBjb2xvcjogIzcyNzI3MjsKfQoKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSB7CiAgY29sb3I6ICMyNDcwZGM7Cn0KCi5zaWRlYmFyIC5uYXYtbGluazpob3ZlciAuZmVhdGhlciwKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSAuZmVhdGhlciB7CiAgY29sb3I6IGluaGVyaXQ7Cn0KCi5zaWRlYmFyLWhlYWRpbmcgewogIGZvbnQtc2l6ZTogLjc1cmVtOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi8qCiAqIE5hdmJhcgogKi8KCi5uYXZiYXItYnJhbmQgewogIHBhZGRpbmctdG9wOiAuNzVyZW07CiAgcGFkZGluZy1ib3R0b206IC43NXJlbTsKICBmb250LXNpemU6IDFyZW07CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMjUpOwogIGJveC1zaGFkb3c6IGluc2V0IC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgLjI1KTsKfQoKLm5hdmJhciAubmF2YmFyLXRvZ2dsZXIgewogIHRvcDogLjI1cmVtOwogIHJpZ2h0OiAxcmVtOwp9CgoubmF2YmFyIC5mb3JtLWNvbnRyb2wgewogIHBhZGRpbmc6IC43NXJlbSAxcmVtOwogIGJvcmRlci13aWR0aDogMDsKICBib3JkZXItcmFkaXVzOiAwOwp9CgouZm9ybS1jb250cm9sLWRhcmsgewogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjEpOwogIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuMSk7Cn0KCi5mb3JtLWNvbnRyb2wtZGFyazpmb2N1cyB7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAuMjUpOwp9Cg==",
        "summary": "100L | dashboard.css | .css | 1.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\sidebars.css",
        "type": ".css",
        "size_kb": 1.9,
        "lines": 89,
        "content": "Ym9keSB7CiAgbWluLWhlaWdodDogMTAwdmg7CiAgbWluLWhlaWdodDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKfQoKaHRtbCB7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwp9CgptYWluIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogbm93cmFwOwogIGhlaWdodDogMTAwdmg7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwogIG1heC1oZWlnaHQ6IDEwMHZoOwogIG92ZXJmbG93LXg6IGF1dG87CiAgb3ZlcmZsb3cteTogaGlkZGVuOwp9CgouYi1leGFtcGxlLWRpdmlkZXIgewogIGZsZXgtc2hyaW5rOiAwOwogIHdpZHRoOiAxLjVyZW07CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4xKTsKICBib3JkZXI6IHNvbGlkIHJnYmEoMCwgMCwgMCwgLjE1KTsKICBib3JkZXItd2lkdGg6IDFweCAwOwogIGJveC1zaGFkb3c6IGluc2V0IDAgLjVlbSAxLjVlbSByZ2JhKDAsIDAsIDAsIC4xKSwgaW5zZXQgMCAuMTI1ZW0gLjVlbSByZ2JhKDAsIDAsIDAsIC4xNSk7Cn0KCi5iaSB7CiAgdmVydGljYWwtYWxpZ246IC0uMTI1ZW07CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgZmlsbDogY3VycmVudENvbG9yOwp9CgouZHJvcGRvd24tdG9nZ2xlIHsgb3V0bGluZTogMDsgfQoKLm5hdi1mbHVzaCAubmF2LWxpbmsgewogIGJvcmRlci1yYWRpdXM6IDA7Cn0KCi5idG4tdG9nZ2xlIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IC4yNXJlbSAuNXJlbTsKICBmb250LXdlaWdodDogNjAwOwogIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgYm9yZGVyOiAwOwp9Ci5idG4tdG9nZ2xlOmhvdmVyLAouYnRuLXRvZ2dsZTpmb2N1cyB7CiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjg1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJmNGVhOwp9CgouYnRuLXRvZ2dsZTo6YmVmb3JlIHsKICB3aWR0aDogMS4yNWVtOwogIGxpbmUtaGVpZ2h0OiAwOwogIGNvbnRlbnQ6IHVybCgiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxNicgaGVpZ2h0PScxNicgdmlld0JveD0nMCAwIDE2IDE2JyUzZSUzY3BhdGggZmlsbD0nbm9uZScgc3Ryb2tlPSdyZ2JhJTI4MCwwLDAsLjUlMjknIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNSAxNGw2LTYtNi02Jy8lM2UlM2Mvc3ZnJTNlIik7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zNXMgZWFzZTsKICB0cmFuc2Zvcm0tb3JpZ2luOiAuNWVtIDUwJTsKfQoKLmJ0bi10b2dnbGVbYXJpYS1leHBhbmRlZD0idHJ1ZSJdIHsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuODUpOwp9Ci5idG4tdG9nZ2xlW2FyaWEtZXhwYW5kZWQ9InRydWUiXTo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7Cn0KCi5idG4tdG9nZ2xlLW5hdiBhIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBwYWRkaW5nOiAuMTg3NXJlbSAuNXJlbTsKICBtYXJnaW4tdG9wOiAuMTI1cmVtOwogIG1hcmdpbi1sZWZ0OiAxLjI1cmVtOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouYnRuLXRvZ2dsZS1uYXYgYTpob3ZlciwKLmJ0bi10b2dnbGUtbmF2IGE6Zm9jdXMgewogIGJhY2tncm91bmQtY29sb3I6ICNkMmY0ZWE7Cn0KCi5zY3JvbGxhcmVhIHsKICBvdmVyZmxvdy15OiBhdXRvOwp9CgouZnctc2VtaWJvbGQgeyBmb250LXdlaWdodDogNjAwOyB9Ci5saC10aWdodCB7IGxpbmUtaGVpZ2h0OiAxLjI1OyB9Cg==",
        "summary": "89L | sidebars.css | .css | 1.9 KB"
      },
      {
        "path": "frontend\\src\\App.css",
        "type": ".css",
        "size_kb": 0.6,
        "lines": 42,
        "content": "I3Jvb3QgewogIG1heC13aWR0aDogMTI4MHB4OwogIG1hcmdpbjogMCBhdXRvOwogIHBhZGRpbmc6IDJyZW07CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoubG9nbyB7CiAgaGVpZ2h0OiA2ZW07CiAgcGFkZGluZzogMS41ZW07CiAgd2lsbC1jaGFuZ2U6IGZpbHRlcjsKICB0cmFuc2l0aW9uOiBmaWx0ZXIgMzAwbXM7Cn0KLmxvZ286aG92ZXIgewogIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDJlbSAjNjQ2Y2ZmYWEpOwp9Ci5sb2dvLnJlYWN0OmhvdmVyIHsKICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAyZW0gIzYxZGFmYmFhKTsKfQoKQGtleWZyYW1lcyBsb2dvLXNwaW4gewogIGZyb20gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7CiAgfQogIHRvIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7CiAgfQp9CgpAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IG5vLXByZWZlcmVuY2UpIHsKICBhOm50aC1vZi10eXBlKDIpIC5sb2dvIHsKICAgIGFuaW1hdGlvbjogbG9nby1zcGluIGluZmluaXRlIDIwcyBsaW5lYXI7CiAgfQp9CgouY2FyZCB7CiAgcGFkZGluZzogMmVtOwp9CgoucmVhZC10aGUtZG9jcyB7CiAgY29sb3I6ICM4ODg7Cn0K",
        "summary": "42L | App.css | .css | 0.6 KB"
      },
      {
        "path": "frontend\\src\\App.jsx",
        "type": ".jsx",
        "size_kb": 1.5,
        "lines": 43,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgUXVhbnRQcm92aWRlciB9IGZyb20gIi4vY29udGV4dC9RdWFudENvbnRleHQiOwppbXBvcnQgSGVhZGVyIGZyb20gIi4vY29tcG9uZW50cy9IZWFkZXIiOwppbXBvcnQgU2lkZWJhciBmcm9tICIuL2NvbXBvbmVudHMvU2lkZWJhciI7CmltcG9ydCBRdWFudFN1bW1hcnlQYW5lbCBmcm9tICIuL2NvbXBvbmVudHMvUXVhbnRTdW1tYXJ5UGFuZWwiOwppbXBvcnQgTWFya2V0IGZyb20gIi4vcGFnZXMvTWFya2V0IjsKaW1wb3J0IE1vbml0b3IgZnJvbSAiLi9wYWdlcy9Nb25pdG9yIjsKaW1wb3J0IEFsZXJ0cyBmcm9tICIuL3BhZ2VzL0FsZXJ0cyI7CmltcG9ydCBEaWFnbm9zdGljcyBmcm9tICIuL3BhZ2VzL0RpYWdub3N0aWNzIjsKaW1wb3J0ICIuL2luZGV4LmNzcyI7IC8vIFRhaWx3aW5kICsgVHJlbW9yIHN0eWxlcwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkgewogIGNvbnN0IFtyb3V0ZSwgc2V0Um91dGVdID0gUmVhY3QudXNlU3RhdGUoIm1hcmtldCIpOyAvLyBtYXJrZXQgfCBtb25pdG9yIHwgYWxlcnRzIHwgZGlhZ25vc3RpY3MKCiAgcmV0dXJuICgKICAgIDxRdWFudFByb3ZpZGVyPgogICAgICA8ZGl2IGNsYXNzTmFtZT0ibWluLWgtc2NyZWVuIGJnLXNsYXRlLTk1MCB0ZXh0LXRyZW1vci1jb250ZW50IGRhcms6dGV4dC1kYXJrLXRyZW1vci1jb250ZW50IGFudGlhbGlhc2VkIj4KICAgICAgICB7LyogTWFpbiBDb250YWluZXIgKi99CiAgICAgICAgPGRpdiBjbGFzc05hbWU9Im14LWF1dG8gbWF4LXctc2NyZWVuLTJ4bCBwLTQgbWQ6cC0xMCBzcGFjZS15LTYiPgogICAgICAgICAgCiAgICAgICAgICB7LyogSGVhZGVyICovfQogICAgICAgICAgPEhlYWRlciBvblJvdXRlQ2hhbmdlPXtzZXRSb3V0ZX0gY3VycmVudFJvdXRlPXtyb3V0ZX0gLz4KCiAgICAgICAgICB7LyogUXVhbnRTdW1tYXJ5UGFuZWwgKGxpdmUgc3RhdHMpICovfQogICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im10LTIiPgogICAgICAgICAgICA8UXVhbnRTdW1tYXJ5UGFuZWwgc29ja2V0PXt3aW5kb3c/LnF1YW50U29ja2V0fSAvPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgey8qIE1haW4gR3JpZCAqL30KICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGdhcC02Ij4KICAgICAgICAgICAgPFNpZGViYXIgY3VycmVudD17cm91dGV9IG9uQ2hhbmdlPXtzZXRSb3V0ZX0gLz4KICAgICAgICAgICAgPG1haW4gY2xhc3NOYW1lPSJmbGV4LTEgc3BhY2UteS02Ij4KICAgICAgICAgICAgICB7cm91dGUgPT09ICJtYXJrZXQiICYmIDxNYXJrZXQgLz59CiAgICAgICAgICAgICAge3JvdXRlID09PSAibW9uaXRvciIgJiYgPE1vbml0b3IgLz59CiAgICAgICAgICAgICAge3JvdXRlID09PSAiYWxlcnRzIiAmJiA8QWxlcnRzIC8+fQogICAgICAgICAgICAgIHtyb3V0ZSA9PT0gImRpYWdub3N0aWNzIiAmJiA8RGlhZ25vc3RpY3MgLz59CiAgICAgICAgICAgIDwvbWFpbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvUXVhbnRQcm92aWRlcj4KICApOwp9Cg==",
        "summary": "43L | App.jsx | .jsx | 1.5 KB"
      },
      {
        "path": "frontend\\src\\index.css",
        "type": ".css",
        "size_kb": 0.2,
        "lines": 13,
        "content": "QHRhaWx3aW5kIGJhc2U7CkB0YWlsd2luZCBjb21wb25lbnRzOwpAdGFpbHdpbmQgdXRpbGl0aWVzOwoKaHRtbCB7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKfQoKYm9keSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzBiMGYxMjsKICBjb2xvcjogI2U2ZWVmNjsKfQo=",
        "summary": "13L | index.css | .css | 0.2 KB"
      },
      {
        "path": "frontend\\src\\main.jsx",
        "type": ".jsx",
        "size_kb": 0.2,
        "lines": 10,
        "content": "aW1wb3J0IHsgU3RyaWN0TW9kZSB9IGZyb20gJ3JlYWN0JwppbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSAncmVhY3QtZG9tL2NsaWVudCcKaW1wb3J0ICcuL2luZGV4LmNzcycKaW1wb3J0IEFwcCBmcm9tICcuL0FwcC5qc3gnCgpjcmVhdGVSb290KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpLnJlbmRlcigKICA8U3RyaWN0TW9kZT4KICAgIDxBcHAgLz4KICA8L1N0cmljdE1vZGU+LAopCg==",
        "summary": "10L | main.jsx | .jsx | 0.2 KB"
      },
      {
        "path": "frontend\\src\\components\\Header.jsx",
        "type": ".jsx",
        "size_kb": 2.0,
        "lines": 51,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IEJlbGxJY29uLCBDbG91ZEljb24gfSBmcm9tICJsdWNpZGUtcmVhY3QiOwppbXBvcnQgeyBtb3Rpb24gfSBmcm9tICJmcmFtZXItbW90aW9uIjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlcih7IG9uUm91dGVDaGFuZ2UsIGN1cnJlbnRSb3V0ZSB9KSB7CiAgY29uc3QgeyB3c1N0YXR1cywgdXB0aW1lUGN0LCBhbGVydHMgfSA9IHVzZVF1YW50KCk7CiAgY29uc3Qgc3RhdHVzQ29sb3IgPSB3c1N0YXR1cyA9PT0gIm9wZW4iID8gImJnLWVtZXJhbGQtNTAwIiA6IHdzU3RhdHVzID09PSAiY29ubmVjdGluZyIgPyAiYmctYW1iZXItNDAwIiA6ICJiZy1yb3NlLTUwMCI7CgogIHJldHVybiAoCiAgICA8aGVhZGVyIGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHB4LTQgcHktMyBib3JkZXItYiBib3JkZXItZ3JheS04MDAgYmctZ3JheS05NTAiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQiPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGQiPlF1YW50IENvbW1hbmQgRGFzaGJvYXJkIHY0PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIHRleHQtc20iPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgaW5saW5lLWJsb2NrIHctMyBoLTMgcm91bmRlZC1mdWxsICR7c3RhdHVzQ29sb3J9YH0gdGl0bGU9e2BXUzogJHt3c1N0YXR1c31gfSAvPgogICAgICAgICAgPHNwYW4+V1M6IHt3c1N0YXR1c308L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9Im9wYWNpdHktNzAiPuKAojwvc3Bhbj4KICAgICAgICAgIDxDbG91ZEljb24gY2xhc3NOYW1lPSJ3LTQgaC00IGlubGluZSIgLz4KICAgICAgICAgIDxzcGFuPlVwdGltZSB7dXB0aW1lUGN0fSU8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGdhcC00Ij4KICAgICAgICA8bmF2IGNsYXNzTmFtZT0iZmxleCBnYXAtMiI+CiAgICAgICAgICB7WyJtYXJrZXQiLCAibW9uaXRvciIsICJhbGVydHMiLCAiZGlhZ25vc3RpY3MiXS5tYXAoKHIpID0+ICgKICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgIGtleT17cn0KICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblJvdXRlQ2hhbmdlKHIpfQogICAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSByb3VuZGVkIHRleHQtc20gJHtjdXJyZW50Um91dGUgPT09IHIgPyAiYmctZ3JheS04MDAiIDogImJnLXRyYW5zcGFyZW50IGhvdmVyOmJnLWdyYXktODAwIn1gfQogICAgICAgICAgICA+CiAgICAgICAgICAgICAge3IudG9VcHBlckNhc2UoKX0KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICApKX0KICAgICAgICA8L25hdj4KCiAgICAgICAgPGJ1dHRvbiB0aXRsZT17YCR7YWxlcnRzLmxlbmd0aH0gYWxlcnRzYH0gY2xhc3NOYW1lPSJyZWxhdGl2ZSI+CiAgICAgICAgICA8QmVsbEljb24gY2xhc3NOYW1lPSJ3LTUgaC01IiAvPgogICAgICAgICAge2FsZXJ0cy5sZW5ndGggPiAwICYmICgKICAgICAgICAgICAgPG1vdGlvbi5zcGFuCiAgICAgICAgICAgICAgaW5pdGlhbD17eyBzY2FsZTogMC43IH19CiAgICAgICAgICAgICAgYW5pbWF0ZT17eyBzY2FsZTogMSB9fQogICAgICAgICAgICAgIGNsYXNzTmFtZT0iYWJzb2x1dGUgLXRvcC0yIC1yaWdodC0yIGJnLXJvc2UtNTAwIHRleHQteHMgcm91bmRlZC1mdWxsIHB4LTEiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICB7YWxlcnRzLmxlbmd0aH0KICAgICAgICAgICAgPC9tb3Rpb24uc3Bhbj4KICAgICAgICAgICl9CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgKTsKfQo=",
        "summary": "51L | Header.jsx | .jsx | 2.0 KB"
      },
      {
        "path": "frontend\\src\\components\\QuantSummaryPanel.jsx",
        "type": ".jsx",
        "size_kb": 2.8,
        "lines": 91,
        "content": "CmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAicmVhY3QiOwppbXBvcnQgeyBDYXJkIH0gZnJvbSAiQHRyZW1vci9yZWFjdCI7CmltcG9ydCB7IG1vdGlvbiB9IGZyb20gImZyYW1lci1tb3Rpb24iOwppbXBvcnQgeyBBY3Rpdml0eSwgVHJlbmRpbmdVcCwgVHJlbmRpbmdEb3duIH0gZnJvbSAibHVjaWRlLXJlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFF1YW50U3VtbWFyeVBhbmVsKHsgc29ja2V0IH0pIHsKICBjb25zdCBbc3VtbWFyeSwgc2V0U3VtbWFyeV0gPSB1c2VTdGF0ZSh7CiAgICB0b3RhbE9JOiAwLAogICAgYXZnWjogMCwKICAgIHN0cm9uZ2VzdEJpYXM6ICItIiwKICAgIGJpYXNEaXI6ICJuZXV0cmFsIiwKICAgIHVwZGF0ZWQ6IG51bGwsCiAgfSk7CgogIGNvbnN0IFtwdWxzZSwgc2V0UHVsc2VdID0gdXNlU3RhdGUoZmFsc2UpOwoKICAvLyBSRVNUIGZhbGxiYWNrCiAgY29uc3QgZmV0Y2hTdW1tYXJ5ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goaW1wb3J0Lm1ldGEuZW52LlZJVEVfQVBJX0JBU0UgKyAiL3F1YW50X3N1bW1hcnkiKTsKICAgICAgaWYgKHJlcy5vaykgewogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpOwogICAgICAgIHVwZGF0ZVN1bW1hcnkoZGF0YSk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBjb25zb2xlLndhcm4oIlF1YW50U3VtbWFyeSBSRVNUIGZhaWxlZCIsIGVycik7CiAgICB9CiAgfTsKCiAgY29uc3QgdXBkYXRlU3VtbWFyeSA9IChkYXRhKSA9PiB7CiAgICBzZXRTdW1tYXJ5KHsKICAgICAgdG90YWxPSTogZGF0YS50b3RhbF9vaSA/PyAwLAogICAgICBhdmdaOiBkYXRhLmF2Z196ID8/IDAsCiAgICAgIHN0cm9uZ2VzdEJpYXM6IGRhdGEuc3Ryb25nZXN0X3N5bWJvbCA/PyAiLSIsCiAgICAgIGJpYXNEaXI6IGRhdGEuYmlhcyA/PyAibmV1dHJhbCIsCiAgICAgIHVwZGF0ZWQ6IG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCksCiAgICB9KTsKICAgIHNldFB1bHNlKHRydWUpOwogICAgc2V0VGltZW91dCgoKSA9PiBzZXRQdWxzZShmYWxzZSksIDQwMCk7CiAgfTsKCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGlmICghc29ja2V0KSByZXR1cm47CiAgICBzb2NrZXQub24oInF1YW50X3N1bW1hcnkiLCAoZGF0YSkgPT4gdXBkYXRlU3VtbWFyeShkYXRhKSk7CiAgICBmZXRjaFN1bW1hcnkoKTsKICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoZmV0Y2hTdW1tYXJ5LCAzMDAwMCk7CiAgICByZXR1cm4gKCkgPT4gewogICAgICBzb2NrZXQub2ZmKCJxdWFudF9zdW1tYXJ5Iik7CiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgfTsKICB9LCBbc29ja2V0XSk7CgogIGNvbnN0IGJpYXNDb2xvciA9CiAgICBzdW1tYXJ5LmJpYXNEaXIgPT09ICJsb25nIgogICAgICA/ICJ0ZXh0LWVtZXJhbGQtNDAwIgogICAgICA6IHN1bW1hcnkuYmlhc0RpciA9PT0gInNob3J0IgogICAgICA/ICJ0ZXh0LXJvc2UtNDAwIgogICAgICA6ICJ0ZXh0LWdyYXktNDAwIjsKCiAgcmV0dXJuICgKICAgIDxDYXJkIGNsYXNzTmFtZT0iYmctZ3JheS05NTAgYm9yZGVyLWdyYXktODAwIj4KICAgICAgPG1vdGlvbi5kaXYKICAgICAgICBhbmltYXRlPXtwdWxzZSA/IHsgc2NhbGU6IDEuMDMgfSA6IHsgc2NhbGU6IDEgfX0KICAgICAgICB0cmFuc2l0aW9uPXt7IGR1cmF0aW9uOiAwLjMgfX0KICAgICAgICBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiIKICAgICAgPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtY29sIj4KICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj5Ub3RhbCBPSTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1vbm8iPntzdW1tYXJ5LnRvdGFsT0kudG9Mb2NhbGVTdHJpbmcoKX08L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggZmxleC1jb2wiPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIG9wYWNpdHktNzAiPkF2ZyBaPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbW9ubyI+e3N1bW1hcnkuYXZnWi50b0ZpeGVkKDIpfTwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBmbGV4LWNvbCBpdGVtcy1lbmQiPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIG9wYWNpdHktNzAiPkJpYXM8L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGZsZXggaXRlbXMtY2VudGVyIGdhcC0xICR7Ymlhc0NvbG9yfWB9PgogICAgICAgICAgICB7c3VtbWFyeS5iaWFzRGlyID09PSAibG9uZyIgJiYgPFRyZW5kaW5nVXAgY2xhc3NOYW1lPSJ3LTQgaC00IiAvPn0KICAgICAgICAgICAge3N1bW1hcnkuYmlhc0RpciA9PT0gInNob3J0IiAmJiA8VHJlbmRpbmdEb3duIGNsYXNzTmFtZT0idy00IGgtNCIgLz59CiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0iZm9udC1tb25vIj57c3VtbWFyeS5zdHJvbmdlc3RCaWFzfTwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtY29sIGl0ZW1zLWVuZCB0ZXh0LXhzIG9wYWNpdHktNjAiPgogICAgICAgICAgPEFjdGl2aXR5IGNsYXNzTmFtZT0idy00IGgtNCIgLz4KICAgICAgICAgIDxzcGFuPntzdW1tYXJ5LnVwZGF0ZWR9PC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L21vdGlvbi5kaXY+CiAgICA8L0NhcmQ+CiAgKTsKfQo=",
        "summary": "91L | QuantSummaryPanel.jsx | .jsx | 2.8 KB"
      },
      {
        "path": "frontend\\src\\components\\Sidebar.jsx",
        "type": ".jsx",
        "size_kb": 1.0,
        "lines": 30,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgTGlzdCwgVHJlbmRpbmdVcCwgQmVsbCB9IGZyb20gImx1Y2lkZS1yZWFjdCI7Cgpjb25zdCBpdGVtcyA9IFsKICB7IGtleTogIm1hcmtldCIsIGxhYmVsOiAiTWFya2V0IiwgaWNvbjogPFRyZW5kaW5nVXAgLz4gfSwKICB7IGtleTogIm1vbml0b3IiLCBsYWJlbDogIk1vbml0b3IiLCBpY29uOiA8TGlzdCAvPiB9LAogIHsga2V5OiAiYWxlcnRzIiwgbGFiZWw6ICJBbGVydHMiLCBpY29uOiA8QmVsbCAvPiB9LAogIHsga2V5OiAiZGlhZ25vc3RpY3MiLCBsYWJlbDogIkRpYWdub3N0aWNzIiwgaWNvbjogPExpc3QgLz4gfSwKXTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNpZGViYXIoeyBjdXJyZW50LCBvbkNoYW5nZSB9KSB7CiAgcmV0dXJuICgKICAgIDxhc2lkZSBjbGFzc05hbWU9InctNzIgYm9yZGVyLXIgYm9yZGVyLWdyYXktODAwIHAtMyI+CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtYi00IHRleHQtc20gb3BhY2l0eS04MCI+TmF2aWdhdGlvbjwvZGl2PgogICAgICA8dWwgY2xhc3NOYW1lPSJzcGFjZS15LTIiPgogICAgICAgIHtpdGVtcy5tYXAoKGl0KSA9PiAoCiAgICAgICAgICA8bGkga2V5PXtpdC5rZXl9PgogICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25DaGFuZ2UoaXQua2V5KX0KICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTMgcHgtMyBweS0yIHJvdW5kZWQgJHtjdXJyZW50ID09PSBpdC5rZXkgPyAiYmctZ3JheS04MDAiIDogImhvdmVyOmJnLWdyYXktODAwIn1gfQogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ3LTUgaC01Ij57aXQuaWNvbn08L3NwYW4+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJmbGV4LTEgdGV4dC1sZWZ0Ij57aXQubGFiZWx9PC9zcGFuPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvbGk+CiAgICAgICAgKSl9CiAgICAgIDwvdWw+CiAgICA8L2FzaWRlPgogICk7Cn0K",
        "summary": "30L | Sidebar.jsx | .jsx | 1.0 KB"
      },
      {
        "path": "frontend\\src\\context\\QuantContext.jsx",
        "type": ".jsx",
        "size_kb": 5.0,
        "lines": 152,
        "content": "aW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gInJlYWN0IjsKaW1wb3J0IGlvIGZyb20gInNvY2tldC5pby1jbGllbnQiOyAvLyBzb2NrZXQuaW8tY2xpZW50CmltcG9ydCB7IG1vdGlvbiB9IGZyb20gImZyYW1lci1tb3Rpb24iOwoKY29uc3QgUXVhbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpOwpleHBvcnQgY29uc3QgdXNlUXVhbnQgPSAoKSA9PiB1c2VDb250ZXh0KFF1YW50Q29udGV4dCk7CgovKioKICogQ29uZmlnIG5vdGVzOgogKiAtIFNPQ0tFVF9VUkw6IHNldCBpbiAuZW52IChWaXRlOiBWSVRFX0FQSV9CQVNFKQogKiAtIFJFU1QgZmFsbGJhY2sgZXZlcnkgMzBzIGlmIG5vIFdTIG1lc3NhZ2VzIChhdXRvIHN3aXRjaGluZykKICogLSBFeHBvc2VzOiBtZXRyaWNzIChtYXApLCBzZWxlY3RlZFN5bWJvbCwgd3NTdGF0dXMsIHVwdGltZVBjdCwgYWxlcnRzW10sIHJlZnJlc2goKSBoZWxwZXIKICovCgpjb25zdCBTT0NLRVRfVVJMID0gaW1wb3J0Lm1ldGEuZW52LlZJVEVfV1NfVVJMIHx8ICJodHRwOi8vbG9jYWxob3N0OjUxNzMiOyAvLyByZXBsYWNlIHdpdGggeW91ciB3cyBob3N0CmNvbnN0IFJFU1RfQkFTRSA9IGltcG9ydC5tZXRhLmVudi5WSVRFX0FQSV9CQVNFIHx8ICIvYXBpIjsKCmV4cG9ydCBjb25zdCBRdWFudFByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4gewogIGNvbnN0IFttZXRyaWNzLCBzZXRNZXRyaWNzXSA9IHVzZVN0YXRlKHt9KTsgLy8ge1BBSVI6IHsuLi59fQogIGNvbnN0IFtzZWxlY3RlZFN5bWJvbCwgc2V0U2VsZWN0ZWRTeW1ib2xdID0gdXNlU3RhdGUobnVsbCk7CiAgY29uc3QgW3dzU3RhdHVzLCBzZXRXc1N0YXR1c10gPSB1c2VTdGF0ZSgiaWRsZSIpOyAvLyBjb25uZWN0aW5nIHwgb3BlbiB8IGNsb3NlZCB8IGVycm9yCiAgY29uc3QgW3VwdGltZVBjdCwgc2V0VXB0aW1lUGN0XSA9IHVzZVN0YXRlKDApOwogIGNvbnN0IFthbGVydHMsIHNldEFsZXJ0c10gPSB1c2VTdGF0ZShbXSk7CiAgY29uc3Qgc29ja2V0UmVmID0gdXNlUmVmKG51bGwpOwogIGNvbnN0IGxhc3RXc1RzUmVmID0gdXNlUmVmKERhdGUubm93KCkpOwogIGNvbnN0IGZhbGxiYWNrVGltZXJSZWYgPSB1c2VSZWYobnVsbCk7CgogIC8vIEhlbHBlciB0byBtZXJnZSBpbmNvbWluZyBtZXRyaWMgcm93cyAoZnJvbSBXUyBvciBSRVNUKQogIGNvbnN0IHVwc2VydE1ldHJpY3MgPSAocm93cyA9IFtdKSA9PiB7CiAgICBzZXRNZXRyaWNzKHByZXYgPT4gewogICAgICBjb25zdCBuZXh0ID0geyAuLi5wcmV2IH07CiAgICAgIHJvd3MuZm9yRWFjaChyID0+IHsKICAgICAgICBjb25zdCBzeW0gPSByLnN5bWJvbCB8fCByLnBhaXIgfHwgci5zeW07CiAgICAgICAgaWYgKCFzeW0pIHJldHVybjsKICAgICAgICBuZXh0W3N5bV0gPSB7IC4uLihuZXh0W3N5bV0gfHwge30pLCAuLi5yLCB1cGRhdGVkQXQ6IERhdGUubm93KCkgfTsKICAgICAgfSk7CiAgICAgIHJldHVybiBuZXh0OwogICAgfSk7CiAgfTsKCiAgLy8gQmFzaWMgYWxlcnQgZGV0ZWN0aW9uIChaID4gMi41IGV0Yy4pIOKAlCB0d2VhayB0byB5b3VyIHJ1bGVzCiAgY29uc3QgZXZhbHVhdGVBbGVydHMgPSAocm93cyA9IFtdKSA9PiB7CiAgICBjb25zdCBuZXdBbGVydHMgPSBbXTsKICAgIHJvd3MuZm9yRWFjaChyID0+IHsKICAgICAgaWYgKHIuWiAmJiByLlogPiAyLjUpIG5ld0FsZXJ0cy5wdXNoKHsgc3ltYm9sOiByLnN5bWJvbCwgcmVhc29uOiBgWj0ke3IuWn1gLCB0czogRGF0ZS5ub3coKSwgc2V2ZXJpdHk6ICJoaWdoIiB9KTsKICAgICAgaWYgKHIuTFMgJiYgci5MUyA+IDIpIG5ld0FsZXJ0cy5wdXNoKHsgc3ltYm9sOiByLnN5bWJvbCwgcmVhc29uOiBgTFM9JHtyLkxTfWAsIHRzOiBEYXRlLm5vdygpLCBzZXZlcml0eTogIm1lZGl1bSIgfSk7CiAgICAgIGlmIChyLmltYiAmJiBNYXRoLmFicyhyLmltYikgPiAwLjAzKSBuZXdBbGVydHMucHVzaCh7IHN5bWJvbDogci5zeW1ib2wsIHJlYXNvbjogYGltYj0keyhyLmltYioxMDApLnRvRml4ZWQoMil9JWAsIHRzOiBEYXRlLm5vdygpLCBzZXZlcml0eTogImxvdyIgfSk7CiAgICB9KTsKICAgIGlmIChuZXdBbGVydHMubGVuZ3RoKSBzZXRBbGVydHMocHJldiA9PiBbLi4ubmV3QWxlcnRzLCAuLi5wcmV2XS5zbGljZSgwLCAyMDApKTsKICB9OwoKICAvLyBSRVNUIGZldGNoIGZvciBhbGwgbWV0cmljcyAoZmFsbGJhY2sgb3IgYm9vdCkKICBjb25zdCBmZXRjaE1ldHJpY3NSZXN0ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7UkVTVF9CQVNFfS9tZXRyaWNzYCk7CiAgICAgIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoInJlc3QgbWV0cmljcyBmYWlsZWQiKTsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7CiAgICAgIC8vIGV4cGVjdGluZyBhcnJheSBvZiBtZXRyaWMgcm93cwogICAgICB1cHNlcnRNZXRyaWNzKGRhdGEpOwogICAgICBldmFsdWF0ZUFsZXJ0cyhkYXRhKTsKICAgICAgc2V0V3NTdGF0dXMocyA9PiAocyA9PT0gIm9wZW4iID8gcyA6ICJwb2xsaW5nIikpOwogICAgICBsYXN0V3NUc1JlZi5jdXJyZW50ID0gRGF0ZS5ub3coKTsKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIGNvbnNvbGUud2FybigiUkVTVCBtZXRyaWNzIGVycm9yIiwgZSk7CiAgICAgIHNldFdzU3RhdHVzKCJlcnJvciIpOwogICAgICByZXR1cm4gW107CiAgICB9CiAgfTsKCiAgLy8gU3RhcnQgc29ja2V0LCB3aXRoIGV2ZW50IGhhbmRsaW5nCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIHNldFdzU3RhdHVzKCJjb25uZWN0aW5nIik7CiAgICBjb25zdCBzb2NrZXQgPSBpbyhTT0NLRVRfVVJMLCB7IHRyYW5zcG9ydHM6IFsid2Vic29ja2V0Il0sIHBhdGg6ICIvc29ja2V0LmlvIiB9KTsKICAgIHNvY2tldFJlZi5jdXJyZW50ID0gc29ja2V0OwoKICAgIHNvY2tldC5vbigiY29ubmVjdCIsICgpID0+IHsKICAgICAgc2V0V3NTdGF0dXMoIm9wZW4iKTsKICAgICAgbGFzdFdzVHNSZWYuY3VycmVudCA9IERhdGUubm93KCk7CiAgICB9KTsKCiAgICBzb2NrZXQub24oIm1ldHJpY3NfdXBkYXRlIiwgKHBheWxvYWQpID0+IHsKICAgICAgLy8gcGF5bG9hZDogYXJyYXkgb3Igc2luZ2xlIG9iamVjdAogICAgICBsYXN0V3NUc1JlZi5jdXJyZW50ID0gRGF0ZS5ub3coKTsKICAgICAgc2V0V3NTdGF0dXMoIm9wZW4iKTsKICAgICAgY29uc3Qgcm93cyA9IEFycmF5LmlzQXJyYXkocGF5bG9hZCkgPyBwYXlsb2FkIDogW3BheWxvYWRdOwogICAgICB1cHNlcnRNZXRyaWNzKHJvd3MpOwogICAgICBldmFsdWF0ZUFsZXJ0cyhyb3dzKTsKICAgIH0pOwoKICAgIHNvY2tldC5vbigiY29ubmVjdF9lcnJvciIsIChlcnIpID0+IHsKICAgICAgY29uc29sZS53YXJuKCJXUyBjb25uZWN0X2Vycm9yIiwgZXJyKTsKICAgICAgc2V0V3NTdGF0dXMoImVycm9yIik7CiAgICB9KTsKCiAgICBzb2NrZXQub24oImRpc2Nvbm5lY3QiLCAocmVhc29uKSA9PiB7CiAgICAgIHNldFdzU3RhdHVzKCJjbG9zZWQiKTsKICAgICAgY29uc29sZS53YXJuKCJXUyBkaXNjb25uZWN0ZWQiLCByZWFzb24pOwogICAgfSk7CgogICAgLy8gb3B0aW9uYWw6IGhlYWx0aC91cHRpbWUgZXZlbnQKICAgIHNvY2tldC5vbigiaGVhbHRoIiwgKGgpID0+IHsKICAgICAgaWYgKHR5cGVvZiBoLnVwdGltZV9wY3QgPT09ICJudW1iZXIiKSBzZXRVcHRpbWVQY3QoaC51cHRpbWVfcGN0KTsKICAgIH0pOwoKICAgIHJldHVybiAoKSA9PiB7CiAgICAgIHNvY2tldC5kaXNjb25uZWN0KCk7CiAgICAgIHNvY2tldFJlZi5jdXJyZW50ID0gbnVsbDsKICAgIH07CiAgfSwgW10pOwoKICAvLyBGYWxsYmFjayBwb2xsIGxvb3A6IGlmIFdTIGlkbGUgZm9yID4zMHMsIGNhbGwgUkVTVCBldmVyeSAzMHMuCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGNvbnN0IHBvbGxJbnRlcnZhbCA9IDMwXzAwMDsKICAgIGNvbnN0IGNoZWNrID0gYXN5bmMgKCkgPT4gewogICAgICBjb25zdCBpZGxlTXMgPSBEYXRlLm5vdygpIC0gbGFzdFdzVHNSZWYuY3VycmVudDsKICAgICAgaWYgKCFzb2NrZXRSZWYuY3VycmVudCB8fCBzb2NrZXRSZWYuY3VycmVudC5kaXNjb25uZWN0ZWQgfHwgaWRsZU1zID4gcG9sbEludGVydmFsKSB7CiAgICAgICAgLy8gcGVyZm9ybSBmYWxsYmFjayBSRVNUIHBvbGwKICAgICAgICBhd2FpdCBmZXRjaE1ldHJpY3NSZXN0KCk7CiAgICAgIH0KICAgIH07CiAgICAvLyBpbW1lZGlhdGUgd2FybSBSRVNUIGZldGNoIChib290KQogICAgZmV0Y2hNZXRyaWNzUmVzdCgpOwogICAgZmFsbGJhY2tUaW1lclJlZi5jdXJyZW50ID0gc2V0SW50ZXJ2YWwoY2hlY2ssIHBvbGxJbnRlcnZhbCk7CiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChmYWxsYmFja1RpbWVyUmVmLmN1cnJlbnQpOwogIH0sIFtdKTsKCiAgLy8gU21hbGwgcHVibGljIEFQSQogIGNvbnN0IHJlZnJlc2ggPSAoKSA9PiBmZXRjaE1ldHJpY3NSZXN0KCk7CgogIC8vIERlcml2ZWQ6IG5pY2UgbGlnaHR3ZWlnaHQgbWV0cmljcyBsaXN0IChzb3J0ZWQpCiAgY29uc3QgcGFpcnNMaXN0ID0gUmVhY3QudXNlTWVtbygoKSA9PiB7CiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhtZXRyaWNzKS5zb3J0KChhLCBiKSA9PiAoYi5vaSB8fCAwKSAtIChhLm9pIHx8IDApKS5zbGljZSgwLCAxMDAwKTsKICB9LCBbbWV0cmljc10pOwoKICByZXR1cm4gKAogICAgPFF1YW50Q29udGV4dC5Qcm92aWRlcgogICAgICB2YWx1ZT17ewogICAgICAgIG1ldHJpY3MsCiAgICAgICAgcGFpcnNMaXN0LAogICAgICAgIHNlbGVjdGVkU3ltYm9sLAogICAgICAgIHNldFNlbGVjdGVkU3ltYm9sLAogICAgICAgIHdzU3RhdHVzLAogICAgICAgIHVwdGltZVBjdCwKICAgICAgICBhbGVydHMsCiAgICAgICAgcmVmcmVzaCwKICAgICAgfX0KICAgID4KICAgICAge2NoaWxkcmVufQogICAgPC9RdWFudENvbnRleHQuUHJvdmlkZXI+CiAgKTsKfTsK",
        "summary": "152L | QuantContext.jsx | .jsx | 5.0 KB"
      },
      {
        "path": "frontend\\src\\pages\\Alerts.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "lines": 26,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFsZXJ0cygpIHsKICBjb25zdCB7IGFsZXJ0cyB9ID0gdXNlUXVhbnQoKTsKICByZXR1cm4gKAogICAgPGRpdj4KICAgICAgPGgyIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1lZGl1bSI+QWxlcnRzPC9oMj4KICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTMgbXQtMyI+CiAgICAgICAge2FsZXJ0cy5sZW5ndGggPT09IDAgJiYgPENhcmQ+Tm8gYWxlcnRzIOKAlCBldmVyeXRoaW5nIGNhbG0uPC9DYXJkPn0KICAgICAgICB7YWxlcnRzLm1hcCgoYSwgaSkgPT4gKAogICAgICAgICAgPENhcmQga2V5PXtpfT4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LXNlbWlib2xkIj57YS5zeW1ib2x9PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj57YS5yZWFzb259PC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQtc20gb3BhY2l0eS02MCI+e25ldyBEYXRlKGEudHMpLnRvTG9jYWxlU3RyaW5nKCl9PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9DYXJkPgogICAgICAgICkpfQogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICk7Cn0K",
        "summary": "26L | Alerts.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\pages\\Diagnostics.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "lines": 28,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpYWdub3N0aWNzKCkgewogIGNvbnN0IHsgd3NTdGF0dXMsIHVwdGltZVBjdCwgcmVmcmVzaCB9ID0gdXNlUXVhbnQoKTsKICByZXR1cm4gKAogICAgPGRpdiBjbGFzc05hbWU9InNwYWNlLXktNCI+CiAgICAgIDxoMiBjbGFzc05hbWU9InRleHQtbGcgZm9udC1tZWRpdW0iPkRpYWdub3N0aWNzPC9oMj4KICAgICAgPENhcmQ+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTMgZ2FwLTMiPgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQteHMgb3BhY2l0eS03MCI+V1MgU3RhdHVzPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LW1vbm8iPnt3c1N0YXR1c308L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQteHMgb3BhY2l0eS03MCI+VXB0aW1lPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LW1vbm8iPnt1cHRpbWVQY3R9JTwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj4mbmJzcDs8L2Rpdj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9InB4LTMgcHktMSBiZy1ncmF5LTgwMCByb3VuZGVkIiBvbkNsaWNrPXtyZWZyZXNofT5Gb3JjZSByZWZyZXNoPC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9DYXJkPgogICAgPC9kaXY+CiAgKTsKfQo=",
        "summary": "28L | Diagnostics.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\pages\\Market.jsx",
        "type": ".jsx",
        "size_kb": 1.6,
        "lines": 42,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQsIFRhYmxlLCBUYWJsZUhlYWQsIFRhYmxlUm93LCBUYWJsZUNlbGwsIFRhYmxlQm9keSB9IGZyb20gIkB0cmVtb3IvcmVhY3QiOwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWFya2V0KCkgewogIGNvbnN0IHsgcGFpcnNMaXN0LCBzZXRTZWxlY3RlZFN5bWJvbCB9ID0gdXNlUXVhbnQoKTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIj4KICAgICAgICA8aDIgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbWVkaXVtIj5NYXJrZXQg4oCUIFBhaXJzPC9oMj4KICAgICAgPC9kaXY+CgogICAgICA8Q2FyZD4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ib3ZlcmZsb3ctYXV0byBtYXgtaC1bNjB2aF0iPgogICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT0idy1mdWxsIHRhYmxlLWZpeGVkIHRleHQtc20iPgogICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPSJ0ZXh0LWxlZnQgdGV4dC14cyBvcGFjaXR5LTcwIHVwcGVyY2FzZSI+CiAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0icC0yIj5TeW1ib2w8L3RoPgogICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0icC0yIj5PSTwvdGg+CiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJwLTIiPkxTPC90aD4KICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9InAtMiI+RnVuZGluZzwvdGg+CiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJwLTIiPlo8L3RoPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICB7cGFpcnNMaXN0Lm1hcCgocCkgPT4gKAogICAgICAgICAgICAgICAgPHRyIGtleT17cC5zeW1ib2x9IGNsYXNzTmFtZT0iaG92ZXI6YmctZ3JheS04NTAgY3Vyc29yLXBvaW50ZXIiIG9uQ2xpY2s9eygpID0+IHNldFNlbGVjdGVkU3ltYm9sKHAuc3ltYm9sKX0+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMiBmb250LW1lZGl1bSI+e3Auc3ltYm9sfTwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMiI+eyhwLm9pIHx8IDApLnRvTG9jYWxlU3RyaW5nKCl9PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0yIj57cC5MUz8udG9GaXhlZD8uKDIpID8/ICItIn08L3RkPgogICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPSJwLTIiPntwLmZ1bmRpbmc/LnRvRml4ZWQ/Lig0KSA/PyAiLSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0yIj57cC5aPy50b0ZpeGVkPy4oMikgPz8gIi0ifTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICkpfQogICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9DYXJkPgogICAgPC9kaXY+CiAgKTsKfQo=",
        "summary": "42L | Market.jsx | .jsx | 1.6 KB"
      },
      {
        "path": "frontend\\src\\pages\\Monitor.jsx",
        "type": ".jsx",
        "size_kb": 1.9,
        "lines": 51,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKaW1wb3J0IHsKICBSZXNwb25zaXZlQ29udGFpbmVyLAogIENvbXBvc2VkQ2hhcnQsCiAgWEF4aXMsCiAgWUF4aXMsCiAgVG9vbHRpcCwKICBBcmVhLAogIExpbmUsCiAgQmFyLAp9IGZyb20gInJlY2hhcnRzIjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vbml0b3IoKSB7CiAgY29uc3QgeyBzZWxlY3RlZFN5bWJvbCwgbWV0cmljcyB9ID0gdXNlUXVhbnQoKTsKICBjb25zdCBtZXRyaWMgPSBtZXRyaWNzW3NlbGVjdGVkU3ltYm9sXSB8fCBudWxsOwoKICAvLyBwbGFjZWhvbGRlciB0aW1lc2VyaWVzIGdlbmVyYXRvciBpZiBiYWNrZW5kIHByb3ZpZGVzIG5vIHNlcmllczogYWRhcHQgdG8geW91ciBwYXlsb2FkIHNoYXBlCiAgY29uc3QgbW9ja1RzID0gKG1ldHJpYykgPT4gewogICAgaWYgKCFtZXRyaWMgfHwgIW1ldHJpYy5oaXN0b3J5KSB7CiAgICAgIC8vIGNyZWF0ZSBzbWFsbCBtb2NrCiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7CiAgICAgIHJldHVybiBuZXcgQXJyYXkoMzApLmZpbGwoMCkubWFwKChfLCBpKSA9PiAoeyB0OiBub3cgLSAoMzAgLSBpKSAqIDYwXzAwMCwgcHJpY2U6IChtZXRyaWM/LnByaWNlIHx8IDEwMCkgKyBNYXRoLnNpbihpKSAqIDIsIG9pOiAobWV0cmljPy5vaSB8fCAwKSAqICgxICsgaSAvIDEwMCkgfSkpOwogICAgfQogICAgcmV0dXJuIG1ldHJpYy5oaXN0b3J5OwogIH07CgogIGNvbnN0IGRhdGEgPSBtb2NrVHMobWV0cmljKTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICA8aDIgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbWVkaXVtIj57c2VsZWN0ZWRTeW1ib2wgPyBgTW9uaXRvciDigJQgJHtzZWxlY3RlZFN5bWJvbH1gIDogIk1vbml0b3Ig4oCUIHNlbGVjdCBhIHN5bWJvbCJ9PC9oMj4KICAgICAgPENhcmQ+CiAgICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6IDQyMCB9fT4KICAgICAgICAgIDxSZXNwb25zaXZlQ29udGFpbmVyIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiPgogICAgICAgICAgICA8Q29tcG9zZWRDaGFydCBkYXRhPXtkYXRhfT4KICAgICAgICAgICAgICA8WEF4aXMgZGF0YUtleT0idCIgdGlja0Zvcm1hdHRlcj17KHRzKSA9PiBuZXcgRGF0ZSh0cykudG9Mb2NhbGVUaW1lU3RyaW5nKCl9IC8+CiAgICAgICAgICAgICAgPFlBeGlzIHlBeGlzSWQ9ImxlZnQiIGRvbWFpbj17WyJhdXRvIiwgImF1dG8iXX0gLz4KICAgICAgICAgICAgICA8WUF4aXMgeUF4aXNJZD0icmlnaHQiIG9yaWVudGF0aW9uPSJyaWdodCIgLz4KICAgICAgICAgICAgICA8VG9vbHRpcCBsYWJlbEZvcm1hdHRlcj17KHRzKSA9PiBuZXcgRGF0ZSh0cykudG9Mb2NhbGVTdHJpbmcoKX0gLz4KICAgICAgICAgICAgICA8QXJlYSB5QXhpc0lkPSJsZWZ0IiBkYXRhS2V5PSJvaSIgbmFtZT0iT3BlbiBJbnRlcmVzdCIgZmlsbE9wYWNpdHk9ezAuMDh9IHN0cm9rZVdpZHRoPXswfSAvPgogICAgICAgICAgICAgIDxMaW5lIHlBeGlzSWQ9ImxlZnQiIGRhdGFLZXk9InByaWNlIiBuYW1lPSJQcmljZSIgc3Ryb2tlV2lkdGg9ezJ9IGRvdD17ZmFsc2V9IC8+CiAgICAgICAgICAgICAgPEJhciB5QXhpc0lkPSJyaWdodCIgZGF0YUtleT0ibHNfZGVsdGEiIG5hbWU9IkxTIGRlbHRhIiBiYXJTaXplPXs4fSAvPgogICAgICAgICAgICA8L0NvbXBvc2VkQ2hhcnQ+CiAgICAgICAgICA8L1Jlc3BvbnNpdmVDb250YWluZXI+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvQ2FyZD4KICAgIDwvZGl2PgogICk7Cn0K",
        "summary": "51L | Monitor.jsx | .jsx | 1.9 KB"
      },
      {
        "path": "backend\\tests\\test_metrics.py",
        "type": ".py",
        "size_kb": 0.4,
        "lines": 11,
        "content": "aW1wb3J0IGFzeW5jaW8KZnJvbSBiYWNrZW5kLnNyYy5mdXR1cmVzYm9hcmQubWV0cmljcyBpbXBvcnQgZ2V0X2FsbF9tZXRyaWNzICAjIEFic29sdXRlIGZyb20gYmFja2VuZC90ZXN0cwoKZGVmIHRlc3Rfd2VpZ2h0ZWRfb2koKToKICAgIG1ldHJpY3MgPSBhc3luY2lvLnJ1bihnZXRfYWxsX21ldHJpY3MobGltaXQ9NSkpCiAgICBhc3NlcnQgbGVuKG1ldHJpY3MpID49IDQgICMgVG9wLXZvbCBqaXR0ZXIgOyA+PTQgc3RhYmxlIFAzCiAgICBhc3NlcnQgJ3dlaWdodGVkX29pX3VzZCcgaW4gbWV0cmljc1swXQogICAgYXNzZXJ0IG1ldHJpY3NbMF1bJ3dlaWdodGVkX29pX3VzZCddID4gMAoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHRlc3Rfd2VpZ2h0ZWRfb2koKQ==",
        "summary": "11L | test_metrics.py | .py | 0.4 KB"
      },
      {
        "path": "docs\\api_guide.md",
        "type": ".md",
        "size_kb": 1.2,
        "lines": 20,
        "content": "IyBBUEkgR3VpZGUgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpCYXNlOiBodHRwOi8vMTI3LjAuMC4xOjUwMDAgfCBBdXRoOiBOb25lIChSZWFkLU9ubHkpIHwgRm9ybWF0OiBKU09OIChDb250ZW50LVJhbmdlIHBhZykuCgojIyBFbmRwb2ludHMKCnwgUm91dGUgfCBNZXRob2QgfCBQYXJhbXMgfCBEZXNjIHwgRXhhbXBsZSBDdXJsIHwgUmVzcG9uc2UgVGVhc2UgfAp8LS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwKfCAvYXBpL21ldHJpY3MgfCBHRVQgfCA/dGY9MTVtJmxpbWl0PTIwIHwgUGFnaW5hdGVkIHF1YW50cyAoT0kvTFPOlC9aIGV0Yy4pIHwgYGN1cmwgImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0iIHwganEgJy5bXSB8IHtzeW0sIHpfc2NvcmV9J2AgfCAyMDAge2RhdGE6IFt7c3ltOiJFVEgiLCB6OjEuMjAsIGNvbmZsdWVuY2U6MC4zM31dLCByYW5nZTowLTE5LzIwfSB8CnwgL2hlYWx0aCB8IEdFVCB8IE5vbmUgfCBVcHRpbWUvcmF0ZS9lcnJvcnMgfCBgY3VybCBodHRwOi8vMTI3LjAuMC4xOjUwMDAvaGVhbHRoYCB8IDIwMCB7InVwdGltZSI6OTkuOSwgInJlcV9yYXRlIjozNTAsICJlcnJvcnMiOjB9IHwKfCAvYXBpL3JlcGxheSAoUDQpIHwgR0VUIHwgP3RmPTFoJnN0YXJ0X3RzPS4uLiB8IEJpc2VjdCB0cyBqb2lucyBzaW0gfCBgY3VybCAiL2FwaS9yZXBsYXk/dGY9MWgiIHwganEgJy5ldmVudHNbXSdgIHwgVGVhc2U6IHtldmVudHM6IFt7dHMsIHpfc3Bpa2U6dHJ1ZX1dfSB8CnwgV1MgL3NvY2tldC5pbyB8IFdTIHwgRW1pdDogbWV0cmljc191cGRhdGUgfCBCYXRjaCB0ZiBxdWFudHMgKyBhbGVydHMgfCBGcm9udGVuZDogc29ja2V0LmlvLWNsaWVudCBjb25uZWN0IHwgT246ICdhbGVydF90b2FzdCcge3N5bToiQlRDIiwgdHlwZToiWl9zcGlrZSIsIHZhbDoyLjZ9IHwKCiMjIFZhbGlkYXRpb24gKGNvZGVfZXhlY3V0aW9uIFRlYXNlKQpgYGBweXRob24KaW1wb3J0IHJlcXVlc3RzCnIgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0nKQpkYXRhID0gci5qc29uKCkKcHJpbnQobGVuKGRhdGFbJ2RhdGEnXSksICdwYWlyczsgWiBmaW5pdGU6JywgYWxsKGFicyhkWyd6X3Njb3JlJ10pIDwgMTAgZm9yIGQgaW4gZGF0YVsnZGF0YSddKSkKIyBPdXRwdXQ6IDIwIHBhaXJzOyBaIGZpbml0ZTogVHJ1ZQ==",
        "summary": "20L | api_guide.md | .md | 1.2 KB"
      },
      {
        "path": "docs\\architecture.md",
        "type": ".md",
        "size_kb": 25.9,
        "lines": 116,
        "content": "",
        "summary": "116L | architecture.md | .md | 25.9 KB"
      },
      {
        "path": "docs\\codegen_index.md",
        "type": ".md",
        "size_kb": 8.4,
        "lines": 92,
        "content": "",
        "summary": "92L | codegen_index.md | .md | 8.4 KB"
      },
      {
        "path": "docs\\continuity_log.json",
        "type": ".json",
        "size_kb": 10.7,
        "lines": 269,
        "content": "",
        "summary": "269L | continuity_log.json | .json | 10.7 KB"
      },
      {
        "path": "docs\\continuity_state.json",
        "type": ".json",
        "size_kb": 0.9,
        "lines": 22,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMzo1NDoyOCIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kIjogICJ1bmhlYWx0aHkiLAogICAgInVwdGltZVBjdCI6ICA0MCwKICAgICJmaWxlX2hhc2hlcyI6ICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtZXRyaWNzLnB5IjogICIxNzJFMzkxIiwKICAgICAgICAgICAgICAgICAgICAgICAgImJsdWVwcmludC5weSI6ICAiMkUzMEYwMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ1dGlscy5weSI6ICAiNTNDN0JBRSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJxdWFudF9lbmdpbmUucHkiOiAgIjk0OTA2Q0EiLAogICAgICAgICAgICAgICAgICAgICAgICAiYmluYW5jZV93c19jbGllbnQucHkiOiAgIjc3OTQ3RDkiLAogICAgICAgICAgICAgICAgICAgICAgICAid3NnaS5weSI6ICAiQUZFQTdGNiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJBcHAuanN4IjogICJGRTg3RDhCIiwKICAgICAgICAgICAgICAgICAgICAgICAgImFwcC5weSI6ICAiNTNFRjRFRSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJkYi5weSI6ICAiODMxQTBDOCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjbGkucHkiOiAgIjA0MEQ1MjQiLAogICAgICAgICAgICAgICAgICAgICAgICAic2NyYXBlci5weSI6ICAiRUJERDYzRiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb25maWcucHkiOiAgIjk3NEZDRUEiLAogICAgICAgICAgICAgICAgICAgICAgICAidmVyc2lvbi5weSI6ICAiQTI4NTQ4QiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2luaXRfXy5weSI6ICAiRDI4MzVCRiIKICAgICAgICAgICAgICAgICAgICB9Cn0=",
        "summary": "22L | continuity_state.json | .json | 0.9 KB"
      },
      {
        "path": "docs\\continuity_state.md",
        "type": ".md",
        "size_kb": 1.7,
        "lines": 36,
        "content": "IyBDb250aW51aXR5IFN0YXRlIC0gQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkCkxhc3QgU3luYzogMjAyNS0xMC0yMSAyMzo1NDoyOApQaGFzZTogUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUKCiMjIENvcmUgRmlsZSBWZXJzaW9ucwp8IG1ldHJpY3MucHkgfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwgMTcyRTM5MSB8CnwgYmx1ZXByaW50LnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDJFMzBGMDEgfAp8IHV0aWxzLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDUzQzdCQUUgfAp8IHF1YW50X2VuZ2luZS5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCA5NDkwNkNBIHwKfCBiaW5hbmNlX3dzX2NsaWVudC5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCA3Nzk0N0Q5IHwKfCB3c2dpLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEFGRUE3RjYgfAp8IEFwcC5qc3ggfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwgRkU4N0Q4QiB8CnwgYXBwLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDUzRUY0RUUgfAp8IGRiLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDgzMUEwQzggfAp8IGNsaS5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCAwNDBENTI0IHwKfCBzY3JhcGVyLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEVCREQ2M0YgfAp8IGNvbmZpZy5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCA5NzRGQ0VBIHwKfCB2ZXJzaW9uLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEEyODU0OEIgfAp8IF9faW5pdF9fLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEQyODM1QkYgfAoKIyMgQmFja2VuZCBIZWFsdGgKdW5oZWFsdGh5CiMjIFJlY2VudCBTbmFwc2hvdHMKfCBUaW1lc3RhbXAgfCBCYWNrZW5kIHwgUGhhc2UgfAp8LS0tLS0tLS0tLS0tfC0tLS0tLS0tLS18LS0tLS0tLXwKfCAyMDI1LTEwLTIxVDEyOjIwOjAwIHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE4OjA3IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE3OjA2IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjEyOjA2IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjEgMjM6NDk6NTcgfCB1bmhlYWx0aHkgfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgMjAyNS0xMC0yMSAyMzo0Njo0NCB8IHVuaGVhbHRoeSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKfCAyMDI1LTEwLTIxIDIzOjQyOjE1IHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjEgMjM6MzI6MDEgfCB1bmhlYWx0aHkgfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgMjAyNS0xMC0yMSAyMjozMjoxMCB8IHVuaGVhbHRoeSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKVXB0aW1lIChsYXN0IDEwKTogNC8xMCAtPiA0MCUK",
        "summary": "36L | continuity_state.md | .md | 1.7 KB"
      },
      {
        "path": "docs\\docs_rehaul_plan.md",
        "type": ".md",
        "size_kb": 5.9,
        "lines": 140,
        "content": "",
        "summary": "140L | docs_rehaul_plan.md | .md | 5.9 KB"
      },
      {
        "path": "docs\\index.md",
        "type": ".md",
        "size_kb": 1.6,
        "lines": 39,
        "content": "IyBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQg4oCTIERvY3VtZW50YXRpb24gSW5kZXgKCldlbGNvbWUgdG8gdGhlIHByb2plY3QgZG9jdW1lbnRhdGlvbiBodWIgZm9yIHRoZSAqKkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCoqLgoKVGhpcyByZXBvc2l0b3J5IGRvY3VtZW50cyBib3RoIHRoZSBsaXZlIHRyYWRpbmcgYmFja2VuZCAoYGZ1dHVyZXNib2FyZGApIGFuZCB0aGUKZnJvbnRlbmQgYW5hbHl0aWNzIGRhc2hib2FyZC4gIApFdmVyeSBkb2N1bWVudCBpbiBgL2RvY3NgIGlzIG1haW50YWluZWQgYnkgdGhlICoqQ29udGludWl0eSBGcmFtZXdvcmsqKiB0aHJvdWdoCmF1dG9tYXRlZCBzbmFwc2hvdHMsIHN5bmNzLCBhbmQgcGhhc2UgdHJhY2tpbmcuCgotLS0KCiMjIPCflJcgUXVpY2sgQWNjZXNzCgp8IEFyZWEgfCBEZXNjcmlwdGlvbiB8IEZpbGUgfAp8LS0tLS0tfC0tLS0tLS0tLS0tLS0tfC0tLS0tLXwKfCAqKkFyY2hpdGVjdHVyZSBPdmVydmlldyoqIHwgU3lzdGVtIGRlc2lnbiwgY29tcG9uZW50cywgYW5kIGRhdGEgZmxvdyB8IFthcmNoaXRlY3R1cmUubWRdKGFyY2hpdGVjdHVyZS5tZCkgfAp8ICoqRGV2ZWxvcGVyIEd1aWRlKiogfCBBUEkgcmVmZXJlbmNlLCBlbnZpcm9ubWVudCBzZXR1cCwgYW5kIHRlc3RpbmcgfCBbZGV2ZWxvcGVyX2d1aWRlLm1kXShkZXZlbG9wZXJfZ3VpZGUubWQpIHwKfCAqKlF1YW50IEJsdWVwcmludCoqIHwgUXVhbnRpdGF0aXZlIG1vZGVsIGRlc2lnbiBhbmQgcHJvZ3Jlc3MgdHJhY2tlciB8IFtxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kXShxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kKSB8CnwgKipDb250aW51aXR5IEZyYW1ld29yayoqIHwgU25hcHNob3QgYW5kIHN5bmMgYXV0b21hdGlvbiBkZXRhaWxzIHwgW2NvbnRpbnVpdHlfZGlhZ3JhbS5tZF0oY29udGludWl0eV9kaWFncmFtLm1kKSB8CnwgKipTdGF0dXMgUmVwb3J0cyoqIHwgQXV0by1nZW5lcmF0ZWQgYmFja2VuZCBoZWFsdGggc3VtbWFyaWVzIHwgW3N0YXR1c19yZXBvcnQubWRdKHN0YXR1c19yZXBvcnQubWQpIHwKCi0tLQoKIyMg8J+TmCBIb3cgRG9jcyBVcGRhdGUKCkFsbCBgLm1kYCBmaWxlcyBpbiB0aGlzIGRpcmVjdG9yeSBhcmUgdXBkYXRlZCBieSBQb3dlclNoZWxsIHByb2ZpbGUgZnVuY3Rpb25zOgoKfCBGdW5jdGlvbiB8IFB1cnBvc2UgfAp8LS0tLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgfCBDYXB0dXJlcyBiYWNrZW5kIHN0YXRlIGFuZCB1cHRpbWUgfAp8IGBJbnZva2UtU3RhdHVzUmVwb3J0YCB8IEdlbmVyYXRlcyB0aGlzIHBoYXNl4oCZcyBzeXN0ZW0gc3VtbWFyeSB8CnwgYEludm9rZS1QaGFzZVRyYWNrYCB8IFVwZGF0ZXMgcXVhbnQgcHJvZ3Jlc3MgdHJhY2tlciB8CnwgYFN5bmMtQ29udGludWl0eWAgfCBSdW5zIGZ1bGwgZG9jICsgYmFja3VwICsgY29tbWl0IGN5Y2xlIHwKClVzZSBgU3luYy1Db250aW51aXR5YCB0byBrZWVwIGRvY3VtZW50YXRpb24gYWxpZ25lZCB3aXRoIHRoZSBsaXZlIHByb2plY3QuCgotLS0KCl9MYXN0IHVwZGF0ZWQgYXV0b21hdGljYWxseSBieSB0aGUgQ29udGludWl0eSBGcmFtZXdvcmsuXwo=",
        "summary": "39L | index.md | .md | 1.6 KB"
      },
      {
        "path": "docs\\project_context_v3.json",
        "type": ".json",
        "size_kb": 0.5,
        "lines": 14,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMzo1NDoyOCIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kX2hlYWx0aCI6ICAidW5oZWFsdGh5IiwKICAgICJ1cHRpbWVfcGN0IjogIDQwLAogICAgImJhY2tlbmRfbmFtZSI6ICAiZnV0dXJlc2JvYXJkIiwKICAgICJkYl9wYXRoIjogICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIsCiAgICAic3lzdGVtIjogIHsKICAgICAgICAgICAgICAgICAgICJub2RlIjogICJ2MjIuMjAuMCIsCiAgICAgICAgICAgICAgICAgICAidXNlciI6ICAiTGlhbiIsCiAgICAgICAgICAgICAgICAgICAib3MiOiAgIk1pY3Jvc29mdCBXaW5kb3dzIDEwIFBybyIsCiAgICAgICAgICAgICAgICAgICAicHl0aG9uIjogICJQeXRob24gMy4xMy4xIgogICAgICAgICAgICAgICB9Cn0=",
        "summary": "14L | project_context_v3.json | .json | 0.5 KB"
      },
      {
        "path": "docs\\quant_blueprint.md",
        "type": ".md",
        "size_kb": 7.1,
        "lines": 93,
        "content": "",
        "summary": "93L | quant_blueprint.md | .md | 7.1 KB"
      },
      {
        "path": "docs\\quant_blueprint_synced.md",
        "type": ".md",
        "size_kb": 0.3,
        "lines": 9,
        "content": "IyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZCkKCiMjIEF1dG8tS1BJIFVwZGF0ZSAoMjAyNS0xMC0yMSAyMzo1MikKfCBNZXRyaWMgfCBWYWx1ZSB8CnwtLS0tLS0tLS18LS0tLS0tLXwKfCAqKldlaWdodGVkIE9JIChVU0QpKiogfCBcJDUuMTlCIHwKfCAqKlBoYXNlKiogfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgKipVcHRpbWUqKiB8IDQwLjAlIHwKfCAqKlN0YXR1cyoqIHwgV2VpZ2h0ZWQgT0kgZnJvbSA1MCBwYWlycyB8Cg==",
        "summary": "9L | quant_blueprint_synced.md | .md | 0.3 KB"
      },
      {
        "path": "docs\\quant_progress_tracker.md",
        "type": ".md",
        "size_kb": 8.5,
        "lines": 133,
        "content": "",
        "summary": "133L | quant_progress_tracker.md | .md | 8.5 KB"
      },
      {
        "path": "docs\\README.md",
        "type": ".md",
        "size_kb": 2.4,
        "lines": 71,
        "content": "IyDwn5OaIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCDigJMgRG9jdW1lbnRhdGlvbiBJbmRleAoKX1VwZGF0ZWQ6IDIwMjUtMTAtMjAgfCBWZXJzaW9uOiB2Mi4zIChQaGFzZSAzIOKAkyBXZWlnaHRlZCBPSSAmIEFsZXJ0cylfCgotLS0KCiMjIPCfp60gQ29yZSBPdmVydmlldwoKLSAqKlByb2plY3Q6KiogUmVhbC10aW1lIENyeXB0byBGdXR1cmVzIFF1YW50IERhc2hib2FyZCAgCi0gKipPd25lcjoqKiBMaWFuIElzYWFjICAKLSAqKkJhY2tlbmQ6KiogRmxhc2sgKyBTUUxBbGNoZW15ICsgU29ja2V0SU8gIAotICoqRnJvbnRlbmQ6KiogVml0ZSArIFRyZW1vciArIFJlY2hhcnRzICAKLSAqKlBoYXNlOioqIFAzIOKAkyBXZWlnaHRlZCBPSSwgVG9wIEwvUywgQWxlcnRzICAKLSAqKkdvYWw6KiogRGV0ZWN0IGRpcmVjdGlvbmFsIGJpYXMgKFo+Mi41LCBMUz4yLCBJbWI+MyUpIGFuZCBzaW11bGF0ZSBjb25mbHVlbmNlIOKGkiBQNCByZXBsYXkuCgotLS0KCiMjIPCflJcgRG9jdW1lbnRhdGlvbiBNYXAKCnwgRmlsZSB8IERlc2NyaXB0aW9uIHwgTGFzdCBVcGRhdGVkIHwKfC0tLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfAp8IFtjb250aW51aXR5X3N0YXRlLm1kXShjb250aW51aXR5X3N0YXRlLm1kKSB8IExpdmUgc3lzdGVtIHNuYXBzaG90IChhdXRvLXVwZGF0ZWQgYnkgUG93ZXJTaGVsbCkgfCBEeW5hbWljIHwKfCBbYXBpX2d1aWRlLm1kXShhcGlfZ3VpZGUubWQpIHwgUkVTVCArIFdTIGVuZHBvaW50cyByZWZlcmVuY2UgfCAyMDI1LTEwLTE4IHwKfCBbcXVhbnRfYmx1ZXByaW50Lm1kXShxdWFudF9ibHVlcHJpbnQubWQpIHwgQXJjaGl0ZWN0dXJlLCBtZXRyaWNzLCBhbmQgcXVhbnQgZW5naW5lZXJpbmcgYmx1ZXByaW50IHwgMjAyNS0xMC0xOCB8CnwgW3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWRdKHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQpIHwgUHJvZ3Jlc3MgYnkgcGhhc2UsIEtQSXMsIGFuZCBtZXRyaWNzIGV2b2x1dGlvbiB8IDIwMjUtMTAtMTggfAp8IFtyb2FkbWFwLm1kXShyb2FkbWFwLm1kKSB8IEV4ZWN1dGlvbiBtYXRyaXggYWNyb3NzIGJhY2tlbmQsIFVYLCBvcHMgfCAyMDI1LTEwLTE4IHwKfCBbdGVzdGluZ19oYXJuZXNzLm1kXSh0ZXN0aW5nX2hhcm5lc3MubWQpIHwgUHl0ZXN0IGFuZCBxdWFudCB2YWxpZGF0aW9uIGhhcm5lc3MgfCAyMDI1LTEwLTE4IHwKCi0tLQoKIyMg8J+nqSBBdXRvbWF0aW9uIFNjcmlwdHMKCnwgU2NyaXB0IHwgRnVuY3Rpb24gfCBDb21tYW5kIHwKfC0tLS0tLS0tLXwtLS0tLS0tLS0tLXwtLS0tLS0tLS0tfAp8IGBnZW5fYmx1ZXByaW50LnB5YCB8IFVwZGF0ZXMgYmx1ZXByaW50IEtQSXMgYW5kIGZvcm11bGFzIHwgYHB5dGhvbiBkb2NzL2dlbl9ibHVlcHJpbnQucHlgIHwKfCBgZ2VuX3RyYWNrZXIucHlgIHwgVXBkYXRlcyBwaGFzZSBwcm9ncmVzcyAmIEtQSXMgZnJvbSBEQiB8IGBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weWAgfAp8IGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCB8IFVwZGF0ZXMgc3lzdGVtIHNuYXBzaG90IGF1dG9tYXRpY2FsbHkgfCBQb3dlclNoZWxsIGZ1bmN0aW9uIHwKCi0tLQoKIyMg8J+nriBRdWFudCBNb2RlbCBTdW1tYXJ5Cgp8IE1ldHJpYyB8IFB1cnBvc2UgfCBQaGFzZSB8CnwtLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IFotU2NvcmUgfCBEZXZpYXRpb24vQW5vbWFseSBkZXRlY3Rpb24gfCBQMiB8CnwgTFMgUmF0aW8gfCBTZW50aW1lbnQgc2tldyB8IFAxIHwKfCBXZWlnaHRlZCBPSSB8IFZvbHVtZS13ZWlnaHRlZCBPSSBzdHJlbmd0aCB8IFAzIHwKfCBDb25mbHVlbmNlIHwgQ29tYmluZWQgYmlhcyB0cmlnZ2VyIChaL0xTL0ltYikgfCBQMyB8CnwgQ29yciBSZXBsYXkgfCBSb2xsaW5nIGNvcnJlbGF0aW9uIHJlcGxheSBzaW0gfCBQNCB8CgotLS0KCiMjIPCfp7EgUGhhc2UgU3VtbWFyeQoKfCBQaGFzZSB8IEZvY3VzIHwgU3RhdHVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tfAp8IDEuNSB8IFNjYWZmb2xkICsgV1MgRW1pdCB8IOKchSBDb21wbGV0ZSB8CnwgMiB8IENvcmUgVEYgKyBFeHBvcnRzIHwg4pyFIENvbXBsZXRlIHwKfCAzIHwgV2VpZ2h0ZWQgT0kgKyBBbGVydHMgfCDwn5SEIEluIFByb2dyZXNzIHwKfCA0IHwgUmVwbGF5ICsgQ29yciBTaW0gfCDij7MgUGxhbm5lZCB8CgotLS0KCiMjIPCfp6ogVGVzdGluZyBIb29rcwoKUnVuIHRoZSBmdWxsIHZhbGlkYXRpb24gaGFybmVzczoKCmBgYHBvd2Vyc2hlbGwKcHl0ZXN0IC1xCmN1cmwgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9tZXRyaWNzP3RmPTE1bSB8IGpxIGxlbmd0aApweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQo=",
        "summary": "71L | README.md | .md | 2.4 KB"
      },
      {
        "path": "docs\\roadmap.md",
        "type": ".md",
        "size_kb": 6.0,
        "lines": 43,
        "content": "",
        "summary": "43L | roadmap.md | .md | 6.0 KB"
      },
      {
        "path": "docs\\status_report.md",
        "type": ".md",
        "size_kb": 2.6,
        "lines": 103,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIDIwMjUtMTAtMjEgMjM6NTI6MTMgIAoqKlBoYXNlOioqIFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlICAKKipCYWNrZW5kOioqIGZ1dHVyZXNib2FyZCAgCioqTWFpbnRhaW5lcjoqKiBMaWFuIElzYWFjICAKCi0tLQoKIyMgT3ZlcnZpZXcKCnwgRmllbGQgfCBWYWx1ZSB8CnwtLS0tLS0tfC0tLS0tLS18CnwgKipQaGFzZSoqIHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHVuaGVhbHRoeSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwgNDAuMCAlIHwKfCAqKlN5c3RlbSoqIHwgTWljcm9zb2Z0IFdpbmRvd3MgMTAgUHJvIHwKfCAqKkRhdGFiYXNlIFBhdGgqKiB8IGJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIHwKCi0tLQoKIyMgQmFja2VuZCBTdW1tYXJ5CgoqKkxhc3QgU25hcHNob3Q6KiogMjAyNS0xMC0yMSAyMzo1MjoxMyAgCioqSGVhbHRoIENoZWNrOioqIHVuaGVhbHRoeSAgCgojIyMgS2V5IENvbXBvbmVudHMKfCBGaWxlIHwgSGFzaCB8IExhc3QgVXBkYXRlZCB8CnwtLS0tLS18LS0tLS0tfC0tLS0tLS0tLS0tLS0tLXwKfCBtZXRyaWNzLnB5IHwge3toYXNoX21ldHJpY3N9fSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfAp8IGRiLnB5IHwge3toYXNoX2RifX0gfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwKfCBhcHAucHkgfCB7e2hhc2hfYXBwfX0gfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwKfCBzY3JhcGVyLnB5IHwge3toYXNoX3NjcmFwZXJ9fSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfAp8IEFwcC5qc3ggfCB7e2hhc2hfYXBwanN4fX0gfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwKCi0tLQoKIyMgUXVhbnQgUHJvZ3Jlc3MgU25hcHNob3QKCnwgUGhhc2UgfCAlIENvbXBsZXRlIHwgU3RhdHVzIHwgTm90ZXMgfAp8LS0tLS0tLS18LS0tLS0tLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwKfCAxLjUgU2NhZmZvbGQgfCB7e3BoYXNlXzE1fX0gfCBEb25lIHwgU2VlZCArIFdTIFN0YWJsZSB8CnwgMiBDb3JlIHwge3twaGFzZV8yfX0gfCBEb25lIHwgVEYgU3dpdGNoICsgRXhwb3J0cyB8CnwgMyBBZHYgfCB7e3BoYXNlXzN9fSB8IEluIFByb2dyZXNzIHwgV2VpZ2h0ZWQgT0kgLyBDb25mbHVlbmNlIHwKfCA0IEdyYW5kIHwge3twaGFzZV80fX0gfCBQbGFubmVkIHwgUmVwbGF5IFNpbSBQbGFubmVkIHwKCiMjIyBRdWFudCBLUElzCnwgS1BJIHwgQ3VycmVudCB8IFRhcmdldCB8IFRyZW5kIHwKfC0tLS0tLXwtLS0tLS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLXwKfCBEQiBSb3dzIHwge3tkYl9yb3dzfX0gfCA+NTAwIHwge3tkYl90cmVuZH19IHwKfCBBdmcgWi1TY29yZSB8IHt7YXZnX3p9fSB8IDwyLjAgfCB7e3pfdHJlbmR9fSB8CnwgQWxlcnQgQWNjdXJhY3kgfCB7e2FsZXJ0X2FjY319IHwgPjk1JSB8IHt7YWxlcnRfdHJlbmR9fSB8CnwgQ29uZmx1ZW5jZSBIaXRzIHwge3tjb25mbHVlbmNlX2hpdHN9fSB8ID4wLjY2IHwge3tjb25mbHVlbmNlX3RyZW5kfX0gfAp8IFdTIFVwdGltZSB8IHt7d3NfdXB0aW1lfX0gfCA5OS45JSB8IHt7d3NfdHJlbmR9fSB8CgotLS0KCiMjIFN5c3RlbSBDb250ZXh0CgoqKlB5dGhvbjoqKiBQeXRob24gMy4xMy4xICAKKipOb2RlOioqIHYyMi4yMC4wICAKKipPUzoqKiBNaWNyb3NvZnQgV2luZG93cyAxMCBQcm8gIAoqKlVzZXI6KiogTGlhbiAgCgoqKlJlcG8gU3VtbWFyeToqKiAgCmBgYHRleHQKCmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB1bmhlYWx0aHkgIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6KiogQ2hlY2sgL2hlYWx0aCByb3V0ZSBhbmQgYmFja2VuZCBsb2dzICAKLSAqKkxhc3QgS25vd24gSGVhbHRoeSBTbmFwc2hvdDoqKiAyMDI1LTEwLTIxIDIzOjUyOjE5ICAKCi0tLQoKIyMgUmVjb21tZW5kYXRpb25zCgoxLiBWZXJpZnkgYC9oZWFsdGhgIGVuZHBvaW50IHJlc3BvbnNlLiAgCjIuIENoZWNrIGBiYWNrZW5kL2xvZ3MvYXBwLmxvZ2AgZm9yIFVURi04IGVuY29kaW5nIGVycm9ycy4gIAozLiBSZS1ydW4gYEludm9rZS1Db250aW51aXR5U25hcHNob3RgIGFmdGVyIGNvbmZpcm1pbmcgYmFja2VuZCBmaXguICAKNC4gQ29tbWl0IHdpdGggYEludm9rZS1QaGFzZVRyYWNrIC1wIFAzLjcgLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCgotLS0KQmFja2VuZCBIZWFsdGh5IC0gMjAyNS0xMC0yMSAyMzo1MjoxOQ==",
        "summary": "103L | status_report.md | .md | 2.6 KB"
      },
      {
        "path": "docs\\status_report_template.md",
        "type": ".md",
        "size_kb": 2.5,
        "lines": 100,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIHt7dGltZXN0YW1wfX0gIAoqKlBoYXNlOioqIHt7cGhhc2V9fSAgCioqQmFja2VuZDoqKiB7e2JhY2tlbmRfbmFtZX19ICAKKipNYWludGFpbmVyOioqIExpYW4gSXNhYWMgIAoKLS0tCgojIyBPdmVydmlldwoKfCBGaWVsZCB8IFZhbHVlIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAqKlBoYXNlKiogfCB7e3BoYXNlfX0gfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHt7YmFja2VuZF9oZWFsdGh9fSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwge3t1cHRpbWVfcGN0fX0gJSB8CnwgKipTeXN0ZW0qKiB8IHt7c3lzdGVtX2luZm99fSB8CnwgKipEYXRhYmFzZSBQYXRoKiogfCB7e2RiX3BhdGh9fSB8CgotLS0KCiMjIEJhY2tlbmQgU3VtbWFyeQoKKipMYXN0IFNuYXBzaG90OioqIHt7dGltZXN0YW1wfX0gIAoqKkhlYWx0aCBDaGVjazoqKiB7e2hlYWx0aF9tZXNzYWdlfX0gIAoKIyMjIEtleSBDb21wb25lbnRzCnwgRmlsZSB8IEhhc2ggfCBMYXN0IFVwZGF0ZWQgfAp8LS0tLS0tfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS18CnwgbWV0cmljcy5weSB8IHt7aGFzaF9tZXRyaWNzfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBkYi5weSB8IHt7aGFzaF9kYn19IHwge3t0aW1lc3RhbXB9fSB8CnwgYXBwLnB5IHwge3toYXNoX2FwcH19IHwge3t0aW1lc3RhbXB9fSB8Cnwgc2NyYXBlci5weSB8IHt7aGFzaF9zY3JhcGVyfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBBcHAuanN4IHwge3toYXNoX2FwcGpzeH19IHwge3t0aW1lc3RhbXB9fSB8CgotLS0KCiMjIFF1YW50IFByb2dyZXNzIFNuYXBzaG90Cgp8IFBoYXNlIHwgJSBDb21wbGV0ZSB8IFN0YXR1cyB8IE5vdGVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tLS0tLS18LS0tLS0tLS18LS0tLS0tLS18CnwgMS41IFNjYWZmb2xkIHwge3twaGFzZV8xNX19IHwgRG9uZSB8IFNlZWQgKyBXUyBTdGFibGUgfAp8IDIgQ29yZSB8IHt7cGhhc2VfMn19IHwgRG9uZSB8IFRGIFN3aXRjaCArIEV4cG9ydHMgfAp8IDMgQWR2IHwge3twaGFzZV8zfX0gfCBJbiBQcm9ncmVzcyB8IFdlaWdodGVkIE9JIC8gQ29uZmx1ZW5jZSB8CnwgNCBHcmFuZCB8IHt7cGhhc2VfNH19IHwgUGxhbm5lZCB8IFJlcGxheSBTaW0gUGxhbm5lZCB8CgojIyMgUXVhbnQgS1BJcwp8IEtQSSB8IEN1cnJlbnQgfCBUYXJnZXQgfCBUcmVuZCB8CnwtLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS18CnwgREIgUm93cyB8IHt7ZGJfcm93c319IHwgPjUwMCB8IHt7ZGJfdHJlbmR9fSB8CnwgQXZnIFotU2NvcmUgfCB7e2F2Z196fX0gfCA8Mi4wIHwge3t6X3RyZW5kfX0gfAp8IEFsZXJ0IEFjY3VyYWN5IHwge3thbGVydF9hY2N9fSB8ID45NSUgfCB7e2FsZXJ0X3RyZW5kfX0gfAp8IENvbmZsdWVuY2UgSGl0cyB8IHt7Y29uZmx1ZW5jZV9oaXRzfX0gfCA+MC42NiB8IHt7Y29uZmx1ZW5jZV90cmVuZH19IHwKfCBXUyBVcHRpbWUgfCB7e3dzX3VwdGltZX19IHwgOTkuOSUgfCB7e3dzX3RyZW5kfX0gfAoKLS0tCgojIyBTeXN0ZW0gQ29udGV4dAoKKipQeXRob246Kioge3tweXRob25fdmVyc2lvbn19ICAKKipOb2RlOioqIHt7bm9kZV92ZXJzaW9ufX0gIAoqKk9TOioqIHt7b3NfdmVyc2lvbn19ICAKKipVc2VyOioqIHt7dXNlcn19ICAKCioqUmVwbyBTdW1tYXJ5OioqICAKYGBgdGV4dAp7e3JlcG9fc3VtbWFyeX19CmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB7e2JhY2tlbmRfaGVhbHRofX0gIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6Kioge3tkaWFnbm9zdGljX2hpbnR9fSAgCi0gKipMYXN0IEtub3duIEhlYWx0aHkgU25hcHNob3Q6Kioge3tsYXN0X2hlYWx0aHlfdGltZXN0YW1wfX0gIAoKLS0tCgojIyBSZWNvbW1lbmRhdGlvbnMKCjEuIFZlcmlmeSBgL2hlYWx0aGAgZW5kcG9pbnQgcmVzcG9uc2UuICAKMi4gQ2hlY2sgYGJhY2tlbmQvbG9ncy9hcHAubG9nYCBmb3IgVVRGLTggZW5jb2RpbmcgZXJyb3JzLiAgCjMuIFJlLXJ1biBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgYWZ0ZXIgY29uZmlybWluZyBiYWNrZW5kIGZpeC4gIAo0LiBDb21taXQgd2l0aCBgSW52b2tlLVBoYXNlVHJhY2sgLXAge3tuZXh0X3BoYXNlfX0gLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCg==",
        "summary": "100L | status_report_template.md | .md | 2.5 KB"
      },
      {
        "path": "docs\\testing_harness.md",
        "type": ".md",
        "size_kb": 1.3,
        "lines": 21,
        "content": "IyBUZXN0aW5nIEhhcm5lc3MgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpGb2N1czogU21va2UgKDw1cyksIEJlbmNoICg8MTBzLzUwIHBhaXJzKSwgUXVhbnQgVmFsIChaIGZpbml0ZS9mYWxzZS1wb3MpLiBSdW46IHB5dGVzdCAtcSA7IGNvZGVfZXhlY3V0aW9uIHNuaXBwZXRzLgoKIyMgUHl0ZXN0IFN1aXRlIChweXRlc3QuaW5pICsgRmlsZXMpCi0gdGVzdF9tZXRyaWNzLnB5OiBgZGVmIHRlc3RfZ2V0X2FsbCgpOiBtZXRyaWNzID0gZ2V0X2FsbF9tZXRyaWNzKHRmPScxNW0nKTsgYXNzZXJ0IGxlbihtZXRyaWNzKSA9PSAyMDsgYXNzZXJ0IGFsbChucC5pc2Zpbml0ZShtWyd6X3Njb3JlJ10pIGZvciBtIGluIG1ldHJpY3MpYAotIHRlc3Rfd3MucHk6IGBkZWYgdGVzdF9lbWl0KCk6IC4uLiBhc3NlcnQgJ21ldHJpY3NfdXBkYXRlJyBpbiBzb2NrZXRpby5ldmVudHNgCi0gQmVuY2g6IGBweXRlc3QgLS1iZW5jaG1hcmstb25seWAgKFRhcmdldDogPDVzIGxvYWQsIG5vIGJsYW5rcykuCgojIyBUb29sIFNuaXBwZXRzIChjb2RlX2V4ZWN1dGlvbikKfCBUZXN0IHwgU25pcHBldCB8IEV4cGVjdGVkIHwKfC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBaIEZpbml0ZSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IHogPSBucC5yYW5kb20ubm9ybWFsKDAsMSwyMCk7IGFzc2VydCBucC5hbGwobnAuaXNmaW5pdGUoeikpICYgKG5wLmFicyh6KSA8IDEwKWAgfCBUcnVlIHwKfCBXZWlnaHRlZCBPSSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IG9pID0gbnAuYXJyYXkoWzFlOSwyZTldKTsgdm9scyA9IG5wLmFycmF5KFsxZTksMmU5XSk7IHcgPSBucC5hdmVyYWdlKG9pLCB3ZWlnaHRzPXZvbHMvdm9scy5zdW0oKSk7IHByaW50KHcpYCB8IDEuNjY2ZTkgfAp8IENvbmZsdWVuY2UgfCBgZGVmIGNhbGMoeixscyxpbWIpOiByZXR1cm4gc3VtKFt6PjIuNSwgbHM+MiwgYWJzKGltYik+M10pLzM7IHByaW50KGNhbGMoMi42LDIuMSwtMy4xKSlgIHwgMS4wIHwKfCBEQiBSb3dzIHwgQXMgZ2VuX3RyYWNrZXIucHkgfCA+NTgxIHwKCiMjIDI0aCBIYXJuZXNzIChQUyBDaGFpbikKYGBgcG93ZXJzaGVsbApweXRlc3QgLXEgOyBjdXJsIC9hcGkvbWV0cmljcz90Zj0xNW0gfCBqcSAnbGVuZ3RoJyA7IEdldC1Db250ZW50IGJhY2tlbmQvbG9ncy9hcHAubG9nIC1UYWlsIDEwIHwgU2VsZWN0LVN0cmluZyAiZW1pdHxlcnJvciIgOyBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQojIE91dHB1dDogLi4uLi4uLi4gMjAgOyBFbWl0dGVkMjAgKG5vIGVycm9yKQ==",
        "summary": "21L | testing_harness.md | .md | 1.3 KB"
      },
      {
        "path": "docs\\z_history.json",
        "type": ".json",
        "size_kb": 0.1,
        "lines": 1,
        "content": "Wy0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1LCAtMC4wMDQzMDczMTg3MTYwNDYxOTUsIC0wLjAwNDMwNzMxODcxNjA0NjE5NV0=",
        "summary": "1L | z_history.json | .json | 0.1 KB"
      },
      {
        "path": "docs\\autogen\\codegen_v1.py",
        "type": ".py",
        "size_kb": 5.9,
        "lines": 173,
        "content": "",
        "summary": "173L | codegen_v1.py | .py | 5.9 KB"
      },
      {
        "path": "docs\\autogen\\gen_blueprint_v2.py",
        "type": ".py",
        "size_kb": 2.8,
        "lines": 82,
        "content": "IyBnZW5fYmx1ZXByaW50X3YyLnB5IOKAkyBEUi1QMiBJbnRlZ3JhdGlvbiAoQ29udGV4dC1Bd2FyZSwgQXV0b0RvY3MgUmVhZHkpCiMgVXNhZ2U6IGNkIGRvY3MvYXV0b2dlbiA7IHB5dGhvbiBnZW5fYmx1ZXByaW50X3YyLnB5CmltcG9ydCBzcWxpdGUzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBvcwppbXBvcnQgcmUKaW1wb3J0IHRlbXBmaWxlCmltcG9ydCBzaHV0aWwKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgpDT05URVhUX1BBVEggPSBQYXRoKHIiRTpcVHJhZGluZ1xjcnlwdG8tZnV0dXJlcy1kYXNoYm9hcmRcZG9jc1xwcm9qZWN0X2NvbnRleHRfdjMuanNvbiIpCk9VVFBVVF9QQVRIID0gUGF0aChyIkU6XFRyYWRpbmdcY3J5cHRvLWZ1dHVyZXMtZGFzaGJvYXJkXGRvY3NccXVhbnRfYmx1ZXByaW50X3N5bmNlZC5tZCIpCgpkZWYgY2xlYW5fb2xkX2twaShjb250ZW50OiBzdHIpIC0+IHN0cjoKICAgIHBhdHRlcm4gPSByIiMjIEF1dG8tS1BJIFVwZGF0ZS4qPyg/PVxuIyMgfFxaKSIKICAgIHJldHVybiByZS5zdWIocGF0dGVybiwgIiIsIGNvbnRlbnQsIGZsYWdzPXJlLkRPVEFMTCkKCmRlZiBzYWZlX3dyaXRlKHBhdGg6IFBhdGgsIGRhdGE6IHN0cik6CiAgICBkaXJfcGF0aCA9IHBhdGgucGFyZW50CiAgICB3aXRoIHRlbXBmaWxlLk5hbWVkVGVtcG9yYXJ5RmlsZShtb2RlPSJ3IiwgZGVsZXRlPUZhbHNlLCBlbmNvZGluZz0idXRmLTgiLCBzdWZmaXg9Ii5tZCIsIGRpcj1kaXJfcGF0aCkgYXMgdG1wOgogICAgICAgIHRtcC53cml0ZShkYXRhKQogICAgICAgIHRtcF9wYXRoID0gdG1wLm5hbWUKICAgIHNodXRpbC5tb3ZlKHRtcF9wYXRoLCBwYXRoKQoKZGVmIGxvYWRfY29udGV4dCgpOgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX1BBVEgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgcmV0dXJuIGpzb24ubG9hZChmKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gQ29udGV4dCBsb2FkIGZhaWxlZDoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgZGJfcGF0aCA9IGN0eC5nZXQoImRhdGFiYXNlX3BhdGgiLCAiYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2Z1dHVyZXMuZGIiKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHVwdGltZSA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwKQoKICAgIGRiX2FicyA9IFBhdGgociJFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZCIpIC8gUGF0aChkYl9wYXRoKQogICAgcHJpbnQoZiJbaV0gREI6IHtkYl9hYnN9IHwgT1VUOiB7T1VUUFVUX1BBVEh9IikKCiAgICB0cnk6CiAgICAgICAgd2l0aCBzcWxpdGUzLmNvbm5lY3QoZGJfYWJzKSBhcyBjb246CiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwoIlNFTEVDVCBvaV9hYnNfdXNkLCB2b2xfdXNkIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA1MCIsIGNvbikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlvinJddIERCIGVycm9yOiB7ZX0iKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKCkKCiAgICBpZiBkZi5lbXB0eSBvciBkZlsndm9sX3VzZCddLmZpbGxuYSgwKS5zdW0oKSA9PSAwOgogICAgICAgIHdlaWdodGVkX29pID0gMC4wCiAgICAgICAgc3RhdHVzID0gIk5vIHZhbGlkIE9JL1ZvbCBkYXRhIgogICAgZWxzZToKICAgICAgICB3ZWlnaHRzID0gZGZbJ3ZvbF91c2QnXSAvIGRmWyd2b2xfdXNkJ10uc3VtKCkKICAgICAgICB3ZWlnaHRlZF9vaSA9IG5wLmF2ZXJhZ2UoZGZbJ29pX2Fic191c2QnXSwgd2VpZ2h0cz13ZWlnaHRzKQogICAgICAgIHN0YXR1cyA9IGYiV2VpZ2h0ZWQgT0kgZnJvbSB7bGVuKGRmKX0gcGFpcnMiCgogICAga3BpX21kID0gKAogICAgICAgICIjIyBBdXRvLUtQSSBVcGRhdGUgKCIgKyBkYXRldGltZS5ub3coKS5zdHJmdGltZSgiJVktJW0tJWQgJUg6JU0iKSArICIpXG4iCiAgICAgICAgInwgTWV0cmljIHwgVmFsdWUgfFxuIgogICAgICAgICJ8LS0tLS0tLS0tfC0tLS0tLS18XG4iCiAgICAgICAgZiJ8ICoqV2VpZ2h0ZWQgT0kgKFVTRCkqKiB8IFxcJHt3ZWlnaHRlZF9vaS8xZTk6LjJmfUIgfFxuIgogICAgICAgIGYifCAqKlBoYXNlKiogfCB7cGhhc2V9IHxcbiIKICAgICAgICBmInwgKipVcHRpbWUqKiB8IHt1cHRpbWU6LjFmfSUgfFxuIgogICAgICAgIGYifCAqKlN0YXR1cyoqIHwge3N0YXR1c30gfFxuIgogICAgKQoKICAgIHRyeToKICAgICAgICBpZiBPVVRQVVRfUEFUSC5leGlzdHMoKToKICAgICAgICAgICAgY29udGVudCA9IGNsZWFuX29sZF9rcGkoT1VUUFVUX1BBVEgucmVhZF90ZXh0KGVuY29kaW5nPSJ1dGYtOCIpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRlbnQgPSAiIyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZClcbiIKICAgICAgICB1cGRhdGVkID0gY29udGVudC5zdHJpcCgpICsgIlxuXG4iICsga3BpX21kCiAgICAgICAgc2FmZV93cml0ZShPVVRQVVRfUEFUSCwgdXBkYXRlZCkKICAgICAgICBwcmludChmIlvinJNdIFVwZGF0ZWQ6IHtPVVRQVVRfUEFUSC5uYW1lfSAoe3dlaWdodGVkX29pLzFlOTouMmZ9QikiKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gV3JpdGUgZXJyb3I6IHtlfSIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCg==",
        "summary": "82L | gen_blueprint_v2.py | .py | 2.8 KB"
      },
      {
        "path": "docs\\autogen\\gen_tracker_v2.py",
        "type": ".py",
        "size_kb": 4.2,
        "lines": 114,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKZ2VuX3RyYWNrZXJfdjIucHkg4oCUIFF1YW50IFByb2dyZXNzIFRyYWNrZXIgKFAzIFdlaWdodGVkIE9JIFRlYXNlKQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KUHVsbHMgR2l0IGRpZmZzLCBjb250ZXh0LCBEQiBtZXRyaWNzIOKGkiBhcHBlbmRzIHRvIHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgKyBwbG90cyBaLXRyZW5kLgpGaXg6IERlZmluZSAncCcgdmlhIFBhdGggKEw3KTsgdXRmLTgtc2lnIGZvciBCT007IGZpbml0ZSBaIGd1YXJkLgpVc2FnZTogcHl0aG9uIGRvY3MvYXV0b2dlbi9nZW5fdHJhY2tlcl92Mi5weQpPdXRwdXRzOiBkb2NzL3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgfCBkb2NzL3Bsb3RzL3pfdHJlbmQucG5nCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IG9zCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aCAgIyBGaXhlZDogSW1wb3J0IGZvciAncCcgZGVmIChMNyB1c2UpCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBzcWxhbGNoZW15IGltcG9ydCBjcmVhdGVfZW5naW5lLCB0ZXh0CgojID09PSBDT05GSUcgPT09ClJFUE9fUk9PVCA9IFBhdGgoX19maWxlX18pLnJlc29sdmUoKS5wYXJlbnQucGFyZW50LnBhcmVudApET0NTX0RJUiA9IFJFUE9fUk9PVCAvICJkb2NzIgpQTE9UU19ESVIgPSBET0NTX0RJUiAvICJwbG90cyIKVFJBQ0tFUl9NRCA9IERPQ1NfRElSIC8gInF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQiCkNPTlRFWFRfSlNPTiA9IERPQ1NfRElSIC8gInByb2plY3RfY29udGV4dF92My5qc29uIgpEQl9QQVRIID0gUkVQT19ST09UIC8gImJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIgoKUExPVFNfRElSLm1rZGlyKGV4aXN0X29rPVRydWUpCgpkZWYgbG9hZF9jb250ZXh0KCk6CiAgICAiIiJMb2FkIHByb2plY3QgY29udGV4dCAodXRmLTgtc2lnIGZvciBCT00pLiIiIgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX0pTT04sICdyJywgZW5jb2Rpbmc9J3V0Zi04LXNpZycpIGFzIGY6CiAgICAgICAgICAgIHJldHVybiBqc29uLmxvYWQoZikKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIHsicGhhc2UiOiAiVW5rbm93biIsICJ1cHRpbWVfcGN0IjogMC4wfQoKZGVmIGdldF9naXRfZGlmZnMoKToKICAgICIiIlJ1biBnaXQgZGlmZiDihpIgY291bnQgZmlsZXMvY2hhbmdlcy4iIiIKICAgIHRyeToKICAgICAgICByZXN1bHQgPSBzdWJwcm9jZXNzLnJ1bihbJ2dpdCcsICdkaWZmJywgJy0tbmFtZS1vbmx5JywgJ0hFQUR+MSddLCBjd2Q9UkVQT19ST09ULCBjYXB0dXJlX291dHB1dD1UcnVlLCB0ZXh0PVRydWUpCiAgICAgICAgZmlsZXNfY2hhbmdlZCA9IFtsaW5lLnN0cmlwKCkgZm9yIGxpbmUgaW4gcmVzdWx0LnN0ZG91dC5zcGxpdGxpbmVzKCkgaWYgbGluZS5zdHJpcCgpXQogICAgICAgIHJldHVybiBsZW4oZmlsZXNfY2hhbmdlZCksIGZpbGVzX2NoYW5nZWQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAsIFtdCgpkZWYgcXVlcnlfZGJfel90cmVuZCgpOgogICAgIiIiUXVlcnkgbWV0cmljcyBEQiBmb3IgYXZnIFogKGZpbml0ZSBvbmx5LCBsYXN0IDEwMCByb3dzKS4iIiIKICAgIGVuZ2luZSA9IGNyZWF0ZV9lbmdpbmUoZidzcWxpdGU6Ly8ve0RCX1BBVEh9JykKICAgIHRyeToKICAgICAgICB3aXRoIGVuZ2luZS5jb25uZWN0KCkgYXMgY29ubjoKICAgICAgICAgICAgcXVlcnkgPSB0ZXh0KCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196IEZST00gbWV0cmljcyBXSEVSRSB6X3Njb3JlIElTIE5PVCBOVUxMIE9SREVSIEJZIHRpbWVzdGFtcCBERVNDIExJTUlUIDEwMCIpCiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwocXVlcnksIGNvbm4pCiAgICAgICAgICAgIGF2Z196ID0gbnAubWVhbihkZlsnYXZnX3onXS5kcm9wbmEoKSkgaWYgbm90IGRmLmVtcHR5IGVsc2UgMC4wCiAgICAgICAgICAgIGNvdW50ID0gbGVuKGRmKQogICAgICAgIHJldHVybiBhdmdfeiwgY291bnQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAuMCwgMAoKZGVmIHVwZGF0ZV90cmFja2VyX21kKHBoYXNlLCBwcm9ncmVzc19wY3QsIGF2Z196LCBmaWxlc19jaGFuZ2VkLCB0cyk6CiAgICAiIiJBcHBlbmQgcm93IHRvIE1EIHRhYmxlLiIiIgogICAgcm93ID0gZiJ8IHtwaGFzZX0gfCB7cHJvZ3Jlc3NfcGN0Oi4xZn0lIHwge2F2Z196Oi4yZn0gfCB7ZmlsZXNfY2hhbmdlZH0gZmlsZXMgfCB7dHN9IHwiCiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKFRSQUNLRVJfTUQsICdhJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZi53cml0ZShmIlxue3Jvd30iKQogICAgICAgIHByaW50KGYiW+Kck10gVHJhY2tlciB1cGRhdGVkOiB7cm93fSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJb4pyXXSBNRCBhcHBlbmQgZmFpbGVkOiB7ZX0iKQoKZGVmIHBsb3Rfel90cmVuZChhdmdfel9oaXN0b3J5KToKICAgICIiIlNpbXBsZSBaLXRyZW5kIHBsb3QgKG1vY2sgaGlzdG9yeSBpZiBlbXB0eSkuIiIiCiAgICBpZiBub3QgYXZnX3pfaGlzdG9yeToKICAgICAgICBhdmdfel9oaXN0b3J5ID0gWzAuMF0gKiA1ICAjIE1vY2sgYmFzZWxpbmUKICAgIHBsdC5maWd1cmUoZmlnc2l6ZT0oOCwgNCkpCiAgICBwbHQucGxvdChyYW5nZShsZW4oYXZnX3pfaGlzdG9yeSkpLCBhdmdfel9oaXN0b3J5LCBtYXJrZXI9J28nLCBjb2xvcj0nYicpCiAgICBwbHQudGl0bGUoJ1otU2NvcmUgVHJlbmQgT3ZlciBQaGFzZXMnKQogICAgcGx0LnhsYWJlbCgnUGhhc2UgU25hcHNob3RzJykKICAgIHBsdC55bGFiZWwoJ0F2ZyBaJykKICAgIHBsdC5ncmlkKFRydWUpCiAgICBwbHQuc2F2ZWZpZyhQTE9UU19ESVIgLyAnel90cmVuZC5wbmcnLCBkcGk9MTAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgcGx0LmNsb3NlKCkKICAgIHByaW50KGYiW+Kck10gUGxvdCBzYXZlZDoge1BMT1RTX0RJUiAvICd6X3RyZW5kLnBuZyd9IikKCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHByb2dyZXNzX3BjdCA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwLjApICAjIFRlYXNlIFAzIHByb2dyZXNzCiAgICB0cyA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTSIpCgogICAgZmlsZXNfY2hhbmdlZCwgXyA9IGdldF9naXRfZGlmZnMoKQogICAgYXZnX3osIHpfY291bnQgPSBxdWVyeV9kYl96X3RyZW5kKCkKCiAgICAjIEZpeGVkIEw3KzogVXNlIFBhdGggZm9yIGFueSBmaWxlIHJlZnMgKGUuZy4sIGlmIHA9UGF0aChUUkFDS0VSX01EKSkKICAgIHAgPSBQYXRoKFRSQUNLRVJfTUQpICAjIERlZiAncCcgaGVyZSBpZiB1c2VkIGRvd25zdHJlYW0gKGUuZy4sIHAuZXhpc3RzKCkpCiAgICBpZiBwLmV4aXN0cygpIG9yIFRydWU6ICAjIEd1YXJkCiAgICAgICAgdXBkYXRlX3RyYWNrZXJfbWQocGhhc2UsIHByb2dyZXNzX3BjdCwgYXZnX3osIGZpbGVzX2NoYW5nZWQsIHRzKQoKICAgICMgTW9jayBoaXN0b3J5IGZvciBwbG90IChhcHBlbmQgcmVhbCBhdmdfeikKICAgIGhpc3RvcnlfZmlsZSA9IERPQ1NfRElSIC8gInpfaGlzdG9yeS5qc29uIgogICAgaGlzdG9yeSA9IFtdCiAgICBpZiBoaXN0b3J5X2ZpbGUuZXhpc3RzKCk6CiAgICAgICAgd2l0aCBvcGVuKGhpc3RvcnlfZmlsZSwgJ3InLCBlbmNvZGluZz0ndXRmLTgtc2lnJykgYXMgZjoKICAgICAgICAgICAgaGlzdG9yeSA9IGpzb24ubG9hZChmKQogICAgaGlzdG9yeS5hcHBlbmQoYXZnX3opCiAgICB3aXRoIG9wZW4oaGlzdG9yeV9maWxlLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAganNvbi5kdW1wKGhpc3RvcnlbLTEwOl0sIGYpICAjIExhc3QgMTAKICAgIHBsb3Rfel90cmVuZChoaXN0b3J5Wy0xMDpdKQoKICAgIHByaW50KGYiW2ldIERCOiB7REJfUEFUSH0gfCBPVVQ6IHtUUkFDS0VSX01EfSIpCiAgICBwcmludChmIlvinJNdIFRyYWNrZXIgdXBkYXRlZDogfCB7cGhhc2V9IHwge3Byb2dyZXNzX3BjdDouMWZ9JSB8IEF2Z1oge2F2Z196Oi4yZn0gKHt6X2NvdW50fSBmaWxlcywge3RzfSkgfCIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigp",
        "summary": "114L | gen_tracker_v2.py | .py | 4.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\api_guide.md",
        "type": ".md",
        "size_kb": 1.2,
        "lines": 20,
        "content": "IyBBUEkgR3VpZGUgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpCYXNlOiBodHRwOi8vMTI3LjAuMC4xOjUwMDAgfCBBdXRoOiBOb25lIChSZWFkLU9ubHkpIHwgRm9ybWF0OiBKU09OIChDb250ZW50LVJhbmdlIHBhZykuCgojIyBFbmRwb2ludHMKCnwgUm91dGUgfCBNZXRob2QgfCBQYXJhbXMgfCBEZXNjIHwgRXhhbXBsZSBDdXJsIHwgUmVzcG9uc2UgVGVhc2UgfAp8LS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwKfCAvYXBpL21ldHJpY3MgfCBHRVQgfCA/dGY9MTVtJmxpbWl0PTIwIHwgUGFnaW5hdGVkIHF1YW50cyAoT0kvTFPOlC9aIGV0Yy4pIHwgYGN1cmwgImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0iIHwganEgJy5bXSB8IHtzeW0sIHpfc2NvcmV9J2AgfCAyMDAge2RhdGE6IFt7c3ltOiJFVEgiLCB6OjEuMjAsIGNvbmZsdWVuY2U6MC4zM31dLCByYW5nZTowLTE5LzIwfSB8CnwgL2hlYWx0aCB8IEdFVCB8IE5vbmUgfCBVcHRpbWUvcmF0ZS9lcnJvcnMgfCBgY3VybCBodHRwOi8vMTI3LjAuMC4xOjUwMDAvaGVhbHRoYCB8IDIwMCB7InVwdGltZSI6OTkuOSwgInJlcV9yYXRlIjozNTAsICJlcnJvcnMiOjB9IHwKfCAvYXBpL3JlcGxheSAoUDQpIHwgR0VUIHwgP3RmPTFoJnN0YXJ0X3RzPS4uLiB8IEJpc2VjdCB0cyBqb2lucyBzaW0gfCBgY3VybCAiL2FwaS9yZXBsYXk/dGY9MWgiIHwganEgJy5ldmVudHNbXSdgIHwgVGVhc2U6IHtldmVudHM6IFt7dHMsIHpfc3Bpa2U6dHJ1ZX1dfSB8CnwgV1MgL3NvY2tldC5pbyB8IFdTIHwgRW1pdDogbWV0cmljc191cGRhdGUgfCBCYXRjaCB0ZiBxdWFudHMgKyBhbGVydHMgfCBGcm9udGVuZDogc29ja2V0LmlvLWNsaWVudCBjb25uZWN0IHwgT246ICdhbGVydF90b2FzdCcge3N5bToiQlRDIiwgdHlwZToiWl9zcGlrZSIsIHZhbDoyLjZ9IHwKCiMjIFZhbGlkYXRpb24gKGNvZGVfZXhlY3V0aW9uIFRlYXNlKQpgYGBweXRob24KaW1wb3J0IHJlcXVlc3RzCnIgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0nKQpkYXRhID0gci5qc29uKCkKcHJpbnQobGVuKGRhdGFbJ2RhdGEnXSksICdwYWlyczsgWiBmaW5pdGU6JywgYWxsKGFicyhkWyd6X3Njb3JlJ10pIDwgMTAgZm9yIGQgaW4gZGF0YVsnZGF0YSddKSkKIyBPdXRwdXQ6IDIwIHBhaXJzOyBaIGZpbml0ZTogVHJ1ZQ==",
        "summary": "20L | api_guide.md | .md | 1.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\architecture.md",
        "type": ".md",
        "size_kb": 13.3,
        "lines": 116,
        "content": "",
        "summary": "116L | architecture.md | .md | 13.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\codegen.py",
        "type": ".py",
        "size_kb": 3.2,
        "lines": 92,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKRnVsbCBDb250aW51aXR5IEV4cG9ydCAodjAuNCkKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClNjYW5zIHByb2plY3QgZGlyZWN0b3JpZXMgYW5kIGV4cG9ydHMgYWxsIHNvdXJjZSBmaWxlcyAoUHl0aG9uLCBKUywgUmVhY3QsIENTUywgSFRNTCwgY29uZmlncywgZG9jcykKaW50byBhIHNpbmdsZSBKU09OIGZpbGUgd2l0aCBiYXNlNjQtZW5jb2RlZCBjb250ZW50LgoKT3V0cHV0OiBkb2NzL3Byb2plY3RfZGF0YS5qc29uCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IGJhc2U2NAppbXBvcnQgb3MKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgojID09PSBDT05GSUcgPT09ClBST0pFQ1RfUk9PVCA9IFBhdGgob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguZGlybmFtZShfX2ZpbGVfXykpKS5yZXNvbHZlKCkKSlNPTl9QQVRIID0gUFJPSkVDVF9ST09UIC8gJ2RvY3MnIC8gJ3Byb2plY3RfZGF0YS5qc29uJwoKIyBEaXJlY3RvcmllcyB0byBpbmNsdWRlCkNPREVfRElSUyA9IFsKICAgICdiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQnLAogICAgJ2Zyb250ZW5kL3NyYycsCiAgICAnYmFja2VuZC90ZXN0cycsCiAgICAnZnJvbnRlbmQvcHVibGljJywKICAgICdkb2NzJwpdCgojIEZpbGUgdHlwZXMgdG8gaW5jbHVkZQpBTExPV0VEX0VYVFMgPSBbCiAgICAnLnB5JywgJy5qcycsICcuanN4JywgJy50cycsICcudHN4JywgJy5qc29uJywgJy5tZCcsCiAgICAnLmNzcycsICcuc2NzcycsICcuaHRtbCcsICcueW1sJywgJy55YW1sJywgJy50b21sJywgJy50eHQnLCAnLmluaScKXQoKIyBNYXggZmlsZSBzaXplIChpbiBieXRlcykg4oCUIGluY3JlYXNlIGZvciBmdWxsIHByb2plY3QKTUFYX0ZJTEVfU0laRSA9IDEwMDBfMDAwICAjIH4yNTAgS0IKCiMgPT09IExPR0lDID09PQpkZWYgZ2VuX2NvZGVfc2VjdGlvbigpOgogICAgZmlsZXMgPSBbXQogICAgZm9yIGRpcl9yZWwgaW4gQ09ERV9ESVJTOgogICAgICAgIGRpcl9wYXRoID0gUFJPSkVDVF9ST09UIC8gZGlyX3JlbAogICAgICAgIGlmIG5vdCBkaXJfcGF0aC5leGlzdHMoKToKICAgICAgICAgICAgcHJpbnQoZiLimqDvuI8gIE1pc3NpbmcgZGlyZWN0b3J5OiB7ZGlyX3BhdGh9IikKICAgICAgICAgICAgY29udGludWUKICAgICAgICBmb3IgZmlsZV9wYXRoIGluIGRpcl9wYXRoLnJnbG9iKCcqJyk6CiAgICAgICAgICAgIGlmIG5vdCBmaWxlX3BhdGguaXNfZmlsZSgpOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgc3VmZml4ID0gZmlsZV9wYXRoLnN1ZmZpeC5sb3dlcigpCiAgICAgICAgICAgIGlmIHN1ZmZpeCBpbiBBTExPV0VEX0VYVFMgYW5kIGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSA8IE1BWF9GSUxFX1NJWkU6CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwgJ3InLCBlbmNvZGluZz0ndXRmLTgnLCBlcnJvcnM9J2lnbm9yZScpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQogICAgICAgICAgICAgICAgICAgIGI2NCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoKSkuZGVjb2RlKCkKICAgICAgICAgICAgICAgICAgICBzdW1tYXJ5ID0gZiJ7bGVuKGNvbnRlbnQuc3BsaXRsaW5lcygpKX1MIHwge2ZpbGVfcGF0aC5uYW1lfSB8IHtzdWZmaXh9IHwge3JvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpfSBLQiIKICAgICAgICAgICAgICAgICAgICBmaWxlcy5hcHBlbmQoewogICAgICAgICAgICAgICAgICAgICAgICAicGF0aCI6IHN0cihmaWxlX3BhdGgucmVsYXRpdmVfdG8oUFJPSkVDVF9ST09UKSksCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogc3VmZml4LAogICAgICAgICAgICAgICAgICAgICAgICAic2l6ZV9rYiI6IHJvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpLAogICAgICAgICAgICAgICAgICAgICAgICAiY29udGVudCI6IGI2NCwKICAgICAgICAgICAgICAgICAgICAgICAgInN1bW1hcnkiOiBzdW1tYXJ5CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKchSB7ZmlsZV9wYXRoLm5hbWU6NDB9IHwge3N1bW1hcnl9IikKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKdjCBSZWFkIGZhaWxlZCB7ZmlsZV9wYXRofToge2V9IikKICAgIHJldHVybiB7ImZpbGVzIjogZmlsZXN9CgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgIyBMb2FkIGV4aXN0aW5nIGRhdGEgaWYgcHJlc2VudAogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihKU09OX1BBVEgsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZGF0YSA9IGpzb24ubG9hZChmKQogICAgICAgIHByaW50KCJNZXJnaW5nIGludG8gZXhpc3RpbmcgcHJvamVjdF9kYXRhLmpzb24g4oCmIikKICAgIGV4Y2VwdCAoRmlsZU5vdEZvdW5kRXJyb3IsIGpzb24uSlNPTkRlY29kZUVycm9yKToKICAgICAgICBkYXRhID0geyJwcm9qZWN0IjogeyJuYW1lIjogIkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCIsICJ2ZXJzaW9uIjogInYwLjQifX0KICAgICAgICBwcmludCgiSW5pdGlhbGl6aW5nIG5ldyBKU09OIOKApiIpCgogICAgIyBHZW5lcmF0ZSBjb2RlIHNlY3Rpb24KICAgIGNvZGVfZGF0YSA9IGdlbl9jb2RlX3NlY3Rpb24oKQogICAgZGF0YVsiY29kZSJdID0gY29kZV9kYXRhCiAgICBkYXRhWyJtZXRhZGF0YSJdID0gewogICAgICAgICJ1cGRhdGVkIjogZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVZLSVtLSVkICVIOiVNOiVTIiksCiAgICAgICAgInRvdGFsX2ZpbGVzIjogbGVuKGNvZGVfZGF0YVsiZmlsZXMiXSksCiAgICAgICAgIm1heF9maWxlX3NpemVfa2IiOiByb3VuZChNQVhfRklMRV9TSVpFIC8gMTAyNCwgMSkKICAgIH0KCiAgICAjIFdyaXRlIEpTT04KICAgIHdpdGggb3BlbihKU09OX1BBVEgsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICBqc29uLmR1bXAoZGF0YSwgZiwgaW5kZW50PTIsIGVuc3VyZV9hc2NpaT1GYWxzZSkKCiAgICBwcmludChmIlxu8J+foiBFeHBvcnQgQ29tcGxldGU6IHtsZW4oY29kZV9kYXRhWydmaWxlcyddKX0gZmlsZXMgc2F2ZWQg4oaSIHtKU09OX1BBVEh9IikK",
        "summary": "92L | codegen.py | .py | 3.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\codegen_index.md",
        "type": ".md",
        "size_kb": 8.4,
        "lines": 92,
        "content": "",
        "summary": "92L | codegen_index.md | .md | 8.4 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\continuity_log.json",
        "type": ".json",
        "size_kb": 9.8,
        "lines": 248,
        "content": "",
        "summary": "248L | continuity_log.json | .json | 9.8 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\continuity_state.json",
        "type": ".json",
        "size_kb": 0.9,
        "lines": 22,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMzo1MjoxMyIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kIjogICJ1bmhlYWx0aHkiLAogICAgInVwdGltZVBjdCI6ICA0MCwKICAgICJmaWxlX2hhc2hlcyI6ICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtZXRyaWNzLnB5IjogICIxNzJFMzkxIiwKICAgICAgICAgICAgICAgICAgICAgICAgImJsdWVwcmludC5weSI6ICAiMkUzMEYwMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ1dGlscy5weSI6ICAiNTNDN0JBRSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJxdWFudF9lbmdpbmUucHkiOiAgIjk0OTA2Q0EiLAogICAgICAgICAgICAgICAgICAgICAgICAiYmluYW5jZV93c19jbGllbnQucHkiOiAgIjc3OTQ3RDkiLAogICAgICAgICAgICAgICAgICAgICAgICAid3NnaS5weSI6ICAiQUZFQTdGNiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJBcHAuanN4IjogICJGRTg3RDhCIiwKICAgICAgICAgICAgICAgICAgICAgICAgImFwcC5weSI6ICAiNTNFRjRFRSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJkYi5weSI6ICAiODMxQTBDOCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjbGkucHkiOiAgIjA0MEQ1MjQiLAogICAgICAgICAgICAgICAgICAgICAgICAic2NyYXBlci5weSI6ICAiRUJERDYzRiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb25maWcucHkiOiAgIjk3NEZDRUEiLAogICAgICAgICAgICAgICAgICAgICAgICAidmVyc2lvbi5weSI6ICAiQTI4NTQ4QiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2luaXRfXy5weSI6ICAiRDI4MzVCRiIKICAgICAgICAgICAgICAgICAgICB9Cn0=",
        "summary": "22L | continuity_state.json | .json | 0.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\continuity_state.md",
        "type": ".md",
        "size_kb": 1.7,
        "lines": 36,
        "content": "IyBDb250aW51aXR5IFN0YXRlIC0gQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkCkxhc3QgU3luYzogMjAyNS0xMC0yMSAyMzo1MjoxMwpQaGFzZTogUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUKCiMjIENvcmUgRmlsZSBWZXJzaW9ucwp8IG1ldHJpY3MucHkgfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwgMTcyRTM5MSB8CnwgYmx1ZXByaW50LnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IDJFMzBGMDEgfAp8IHV0aWxzLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IDUzQzdCQUUgfAp8IHF1YW50X2VuZ2luZS5weSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfCA5NDkwNkNBIHwKfCBiaW5hbmNlX3dzX2NsaWVudC5weSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfCA3Nzk0N0Q5IHwKfCB3c2dpLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IEFGRUE3RjYgfAp8IEFwcC5qc3ggfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwgRkU4N0Q4QiB8CnwgYXBwLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IDUzRUY0RUUgfAp8IGRiLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IDgzMUEwQzggfAp8IGNsaS5weSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfCAwNDBENTI0IHwKfCBzY3JhcGVyLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IEVCREQ2M0YgfAp8IGNvbmZpZy5weSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfCA5NzRGQ0VBIHwKfCB2ZXJzaW9uLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IEEyODU0OEIgfAp8IF9faW5pdF9fLnB5IHwgMjAyNS0xMC0yMSAyMzo1MjoxMyB8IEQyODM1QkYgfAoKIyMgQmFja2VuZCBIZWFsdGgKdW5oZWFsdGh5CiMjIFJlY2VudCBTbmFwc2hvdHMKfCBUaW1lc3RhbXAgfCBCYWNrZW5kIHwgUGhhc2UgfAp8LS0tLS0tLS0tLS0tfC0tLS0tLS0tLS18LS0tLS0tLXwKfCAyMDI1LTEwLTIxVDEyOjIwOjAwIHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE4OjA3IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE3OjA2IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjEyOjA2IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxIDIzOjQ5OjU3IHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjEgMjM6NDY6NDQgfCB1bmhlYWx0aHkgfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgMjAyNS0xMC0yMSAyMzo0MjoxNSB8IHVuaGVhbHRoeSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKfCAyMDI1LTEwLTIxIDIzOjMyOjAxIHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjEgMjI6MzI6MTAgfCB1bmhlYWx0aHkgfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgMjAyNS0xMC0yMSAyMjoxMjo1NiB8IHVuaGVhbHRoeSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKVXB0aW1lIChsYXN0IDEwKTogNC8xMCAtPiA0MCUK",
        "summary": "36L | continuity_state.md | .md | 1.7 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\docs_rehaul_plan.md",
        "type": ".md",
        "size_kb": 5.9,
        "lines": 140,
        "content": "",
        "summary": "140L | docs_rehaul_plan.md | .md | 5.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\index.md",
        "type": ".md",
        "size_kb": 1.6,
        "lines": 39,
        "content": "IyBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQg4oCTIERvY3VtZW50YXRpb24gSW5kZXgKCldlbGNvbWUgdG8gdGhlIHByb2plY3QgZG9jdW1lbnRhdGlvbiBodWIgZm9yIHRoZSAqKkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCoqLgoKVGhpcyByZXBvc2l0b3J5IGRvY3VtZW50cyBib3RoIHRoZSBsaXZlIHRyYWRpbmcgYmFja2VuZCAoYGZ1dHVyZXNib2FyZGApIGFuZCB0aGUKZnJvbnRlbmQgYW5hbHl0aWNzIGRhc2hib2FyZC4gIApFdmVyeSBkb2N1bWVudCBpbiBgL2RvY3NgIGlzIG1haW50YWluZWQgYnkgdGhlICoqQ29udGludWl0eSBGcmFtZXdvcmsqKiB0aHJvdWdoCmF1dG9tYXRlZCBzbmFwc2hvdHMsIHN5bmNzLCBhbmQgcGhhc2UgdHJhY2tpbmcuCgotLS0KCiMjIPCflJcgUXVpY2sgQWNjZXNzCgp8IEFyZWEgfCBEZXNjcmlwdGlvbiB8IEZpbGUgfAp8LS0tLS0tfC0tLS0tLS0tLS0tLS0tfC0tLS0tLXwKfCAqKkFyY2hpdGVjdHVyZSBPdmVydmlldyoqIHwgU3lzdGVtIGRlc2lnbiwgY29tcG9uZW50cywgYW5kIGRhdGEgZmxvdyB8IFthcmNoaXRlY3R1cmUubWRdKGFyY2hpdGVjdHVyZS5tZCkgfAp8ICoqRGV2ZWxvcGVyIEd1aWRlKiogfCBBUEkgcmVmZXJlbmNlLCBlbnZpcm9ubWVudCBzZXR1cCwgYW5kIHRlc3RpbmcgfCBbZGV2ZWxvcGVyX2d1aWRlLm1kXShkZXZlbG9wZXJfZ3VpZGUubWQpIHwKfCAqKlF1YW50IEJsdWVwcmludCoqIHwgUXVhbnRpdGF0aXZlIG1vZGVsIGRlc2lnbiBhbmQgcHJvZ3Jlc3MgdHJhY2tlciB8IFtxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kXShxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kKSB8CnwgKipDb250aW51aXR5IEZyYW1ld29yayoqIHwgU25hcHNob3QgYW5kIHN5bmMgYXV0b21hdGlvbiBkZXRhaWxzIHwgW2NvbnRpbnVpdHlfZGlhZ3JhbS5tZF0oY29udGludWl0eV9kaWFncmFtLm1kKSB8CnwgKipTdGF0dXMgUmVwb3J0cyoqIHwgQXV0by1nZW5lcmF0ZWQgYmFja2VuZCBoZWFsdGggc3VtbWFyaWVzIHwgW3N0YXR1c19yZXBvcnQubWRdKHN0YXR1c19yZXBvcnQubWQpIHwKCi0tLQoKIyMg8J+TmCBIb3cgRG9jcyBVcGRhdGUKCkFsbCBgLm1kYCBmaWxlcyBpbiB0aGlzIGRpcmVjdG9yeSBhcmUgdXBkYXRlZCBieSBQb3dlclNoZWxsIHByb2ZpbGUgZnVuY3Rpb25zOgoKfCBGdW5jdGlvbiB8IFB1cnBvc2UgfAp8LS0tLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgfCBDYXB0dXJlcyBiYWNrZW5kIHN0YXRlIGFuZCB1cHRpbWUgfAp8IGBJbnZva2UtU3RhdHVzUmVwb3J0YCB8IEdlbmVyYXRlcyB0aGlzIHBoYXNl4oCZcyBzeXN0ZW0gc3VtbWFyeSB8CnwgYEludm9rZS1QaGFzZVRyYWNrYCB8IFVwZGF0ZXMgcXVhbnQgcHJvZ3Jlc3MgdHJhY2tlciB8CnwgYFN5bmMtQ29udGludWl0eWAgfCBSdW5zIGZ1bGwgZG9jICsgYmFja3VwICsgY29tbWl0IGN5Y2xlIHwKClVzZSBgU3luYy1Db250aW51aXR5YCB0byBrZWVwIGRvY3VtZW50YXRpb24gYWxpZ25lZCB3aXRoIHRoZSBsaXZlIHByb2plY3QuCgotLS0KCl9MYXN0IHVwZGF0ZWQgYXV0b21hdGljYWxseSBieSB0aGUgQ29udGludWl0eSBGcmFtZXdvcmsuXwo=",
        "summary": "39L | index.md | .md | 1.6 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\project_context_v3.json",
        "type": ".json",
        "size_kb": 0.5,
        "lines": 14,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMzo1MjoxMyIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kX2hlYWx0aCI6ICAidW5oZWFsdGh5IiwKICAgICJ1cHRpbWVfcGN0IjogIDQwLAogICAgImJhY2tlbmRfbmFtZSI6ICAiZnV0dXJlc2JvYXJkIiwKICAgICJkYl9wYXRoIjogICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIsCiAgICAic3lzdGVtIjogIHsKICAgICAgICAgICAgICAgICAgICJub2RlIjogICJ2MjIuMjAuMCIsCiAgICAgICAgICAgICAgICAgICAidXNlciI6ICAiTGlhbiIsCiAgICAgICAgICAgICAgICAgICAib3MiOiAgIk1pY3Jvc29mdCBXaW5kb3dzIDEwIFBybyIsCiAgICAgICAgICAgICAgICAgICAicHl0aG9uIjogICJQeXRob24gMy4xMy4xIgogICAgICAgICAgICAgICB9Cn0=",
        "summary": "14L | project_context_v3.json | .json | 0.5 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\quant_blueprint.md",
        "type": ".md",
        "size_kb": 7.1,
        "lines": 93,
        "content": "",
        "summary": "93L | quant_blueprint.md | .md | 7.1 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\quant_blueprint_synced.md",
        "type": ".md",
        "size_kb": 0.3,
        "lines": 9,
        "content": "IyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZCkKCiMjIEF1dG8tS1BJIFVwZGF0ZSAoMjAyNS0xMC0yMSAyMzo1MikKfCBNZXRyaWMgfCBWYWx1ZSB8CnwtLS0tLS0tLS18LS0tLS0tLXwKfCAqKldlaWdodGVkIE9JIChVU0QpKiogfCBcJDUuMTlCIHwKfCAqKlBoYXNlKiogfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgKipVcHRpbWUqKiB8IDQwLjAlIHwKfCAqKlN0YXR1cyoqIHwgV2VpZ2h0ZWQgT0kgZnJvbSA1MCBwYWlycyB8Cg==",
        "summary": "9L | quant_blueprint_synced.md | .md | 0.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\quant_progress_tracker.md",
        "type": ".md",
        "size_kb": 8.5,
        "lines": 133,
        "content": "",
        "summary": "133L | quant_progress_tracker.md | .md | 8.5 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\README.md",
        "type": ".md",
        "size_kb": 2.4,
        "lines": 71,
        "content": "IyDwn5OaIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCDigJMgRG9jdW1lbnRhdGlvbiBJbmRleAoKX1VwZGF0ZWQ6IDIwMjUtMTAtMjAgfCBWZXJzaW9uOiB2Mi4zIChQaGFzZSAzIOKAkyBXZWlnaHRlZCBPSSAmIEFsZXJ0cylfCgotLS0KCiMjIPCfp60gQ29yZSBPdmVydmlldwoKLSAqKlByb2plY3Q6KiogUmVhbC10aW1lIENyeXB0byBGdXR1cmVzIFF1YW50IERhc2hib2FyZCAgCi0gKipPd25lcjoqKiBMaWFuIElzYWFjICAKLSAqKkJhY2tlbmQ6KiogRmxhc2sgKyBTUUxBbGNoZW15ICsgU29ja2V0SU8gIAotICoqRnJvbnRlbmQ6KiogVml0ZSArIFRyZW1vciArIFJlY2hhcnRzICAKLSAqKlBoYXNlOioqIFAzIOKAkyBXZWlnaHRlZCBPSSwgVG9wIEwvUywgQWxlcnRzICAKLSAqKkdvYWw6KiogRGV0ZWN0IGRpcmVjdGlvbmFsIGJpYXMgKFo+Mi41LCBMUz4yLCBJbWI+MyUpIGFuZCBzaW11bGF0ZSBjb25mbHVlbmNlIOKGkiBQNCByZXBsYXkuCgotLS0KCiMjIPCflJcgRG9jdW1lbnRhdGlvbiBNYXAKCnwgRmlsZSB8IERlc2NyaXB0aW9uIHwgTGFzdCBVcGRhdGVkIHwKfC0tLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfAp8IFtjb250aW51aXR5X3N0YXRlLm1kXShjb250aW51aXR5X3N0YXRlLm1kKSB8IExpdmUgc3lzdGVtIHNuYXBzaG90IChhdXRvLXVwZGF0ZWQgYnkgUG93ZXJTaGVsbCkgfCBEeW5hbWljIHwKfCBbYXBpX2d1aWRlLm1kXShhcGlfZ3VpZGUubWQpIHwgUkVTVCArIFdTIGVuZHBvaW50cyByZWZlcmVuY2UgfCAyMDI1LTEwLTE4IHwKfCBbcXVhbnRfYmx1ZXByaW50Lm1kXShxdWFudF9ibHVlcHJpbnQubWQpIHwgQXJjaGl0ZWN0dXJlLCBtZXRyaWNzLCBhbmQgcXVhbnQgZW5naW5lZXJpbmcgYmx1ZXByaW50IHwgMjAyNS0xMC0xOCB8CnwgW3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWRdKHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQpIHwgUHJvZ3Jlc3MgYnkgcGhhc2UsIEtQSXMsIGFuZCBtZXRyaWNzIGV2b2x1dGlvbiB8IDIwMjUtMTAtMTggfAp8IFtyb2FkbWFwLm1kXShyb2FkbWFwLm1kKSB8IEV4ZWN1dGlvbiBtYXRyaXggYWNyb3NzIGJhY2tlbmQsIFVYLCBvcHMgfCAyMDI1LTEwLTE4IHwKfCBbdGVzdGluZ19oYXJuZXNzLm1kXSh0ZXN0aW5nX2hhcm5lc3MubWQpIHwgUHl0ZXN0IGFuZCBxdWFudCB2YWxpZGF0aW9uIGhhcm5lc3MgfCAyMDI1LTEwLTE4IHwKCi0tLQoKIyMg8J+nqSBBdXRvbWF0aW9uIFNjcmlwdHMKCnwgU2NyaXB0IHwgRnVuY3Rpb24gfCBDb21tYW5kIHwKfC0tLS0tLS0tLXwtLS0tLS0tLS0tLXwtLS0tLS0tLS0tfAp8IGBnZW5fYmx1ZXByaW50LnB5YCB8IFVwZGF0ZXMgYmx1ZXByaW50IEtQSXMgYW5kIGZvcm11bGFzIHwgYHB5dGhvbiBkb2NzL2dlbl9ibHVlcHJpbnQucHlgIHwKfCBgZ2VuX3RyYWNrZXIucHlgIHwgVXBkYXRlcyBwaGFzZSBwcm9ncmVzcyAmIEtQSXMgZnJvbSBEQiB8IGBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weWAgfAp8IGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCB8IFVwZGF0ZXMgc3lzdGVtIHNuYXBzaG90IGF1dG9tYXRpY2FsbHkgfCBQb3dlclNoZWxsIGZ1bmN0aW9uIHwKCi0tLQoKIyMg8J+nriBRdWFudCBNb2RlbCBTdW1tYXJ5Cgp8IE1ldHJpYyB8IFB1cnBvc2UgfCBQaGFzZSB8CnwtLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IFotU2NvcmUgfCBEZXZpYXRpb24vQW5vbWFseSBkZXRlY3Rpb24gfCBQMiB8CnwgTFMgUmF0aW8gfCBTZW50aW1lbnQgc2tldyB8IFAxIHwKfCBXZWlnaHRlZCBPSSB8IFZvbHVtZS13ZWlnaHRlZCBPSSBzdHJlbmd0aCB8IFAzIHwKfCBDb25mbHVlbmNlIHwgQ29tYmluZWQgYmlhcyB0cmlnZ2VyIChaL0xTL0ltYikgfCBQMyB8CnwgQ29yciBSZXBsYXkgfCBSb2xsaW5nIGNvcnJlbGF0aW9uIHJlcGxheSBzaW0gfCBQNCB8CgotLS0KCiMjIPCfp7EgUGhhc2UgU3VtbWFyeQoKfCBQaGFzZSB8IEZvY3VzIHwgU3RhdHVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tfAp8IDEuNSB8IFNjYWZmb2xkICsgV1MgRW1pdCB8IOKchSBDb21wbGV0ZSB8CnwgMiB8IENvcmUgVEYgKyBFeHBvcnRzIHwg4pyFIENvbXBsZXRlIHwKfCAzIHwgV2VpZ2h0ZWQgT0kgKyBBbGVydHMgfCDwn5SEIEluIFByb2dyZXNzIHwKfCA0IHwgUmVwbGF5ICsgQ29yciBTaW0gfCDij7MgUGxhbm5lZCB8CgotLS0KCiMjIPCfp6ogVGVzdGluZyBIb29rcwoKUnVuIHRoZSBmdWxsIHZhbGlkYXRpb24gaGFybmVzczoKCmBgYHBvd2Vyc2hlbGwKcHl0ZXN0IC1xCmN1cmwgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9tZXRyaWNzP3RmPTE1bSB8IGpxIGxlbmd0aApweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQo=",
        "summary": "71L | README.md | .md | 2.4 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\roadmap.md",
        "type": ".md",
        "size_kb": 6.0,
        "lines": 43,
        "content": "",
        "summary": "43L | roadmap.md | .md | 6.0 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\status_report.md",
        "type": ".md",
        "size_kb": 2.6,
        "lines": 103,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIDIwMjUtMTAtMjEgMjM6NTI6MTMgIAoqKlBoYXNlOioqIFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlICAKKipCYWNrZW5kOioqIGZ1dHVyZXNib2FyZCAgCioqTWFpbnRhaW5lcjoqKiBMaWFuIElzYWFjICAKCi0tLQoKIyMgT3ZlcnZpZXcKCnwgRmllbGQgfCBWYWx1ZSB8CnwtLS0tLS0tfC0tLS0tLS18CnwgKipQaGFzZSoqIHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHVuaGVhbHRoeSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwgNDAuMCAlIHwKfCAqKlN5c3RlbSoqIHwgTWljcm9zb2Z0IFdpbmRvd3MgMTAgUHJvIHwKfCAqKkRhdGFiYXNlIFBhdGgqKiB8IGJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIHwKCi0tLQoKIyMgQmFja2VuZCBTdW1tYXJ5CgoqKkxhc3QgU25hcHNob3Q6KiogMjAyNS0xMC0yMSAyMzo1MjoxMyAgCioqSGVhbHRoIENoZWNrOioqIHVuaGVhbHRoeSAgCgojIyMgS2V5IENvbXBvbmVudHMKfCBGaWxlIHwgSGFzaCB8IExhc3QgVXBkYXRlZCB8CnwtLS0tLS18LS0tLS0tfC0tLS0tLS0tLS0tLS0tLXwKfCBtZXRyaWNzLnB5IHwge3toYXNoX21ldHJpY3N9fSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfAp8IGRiLnB5IHwge3toYXNoX2RifX0gfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwKfCBhcHAucHkgfCB7e2hhc2hfYXBwfX0gfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwKfCBzY3JhcGVyLnB5IHwge3toYXNoX3NjcmFwZXJ9fSB8IDIwMjUtMTAtMjEgMjM6NTI6MTMgfAp8IEFwcC5qc3ggfCB7e2hhc2hfYXBwanN4fX0gfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwKCi0tLQoKIyMgUXVhbnQgUHJvZ3Jlc3MgU25hcHNob3QKCnwgUGhhc2UgfCAlIENvbXBsZXRlIHwgU3RhdHVzIHwgTm90ZXMgfAp8LS0tLS0tLS18LS0tLS0tLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwKfCAxLjUgU2NhZmZvbGQgfCB7e3BoYXNlXzE1fX0gfCBEb25lIHwgU2VlZCArIFdTIFN0YWJsZSB8CnwgMiBDb3JlIHwge3twaGFzZV8yfX0gfCBEb25lIHwgVEYgU3dpdGNoICsgRXhwb3J0cyB8CnwgMyBBZHYgfCB7e3BoYXNlXzN9fSB8IEluIFByb2dyZXNzIHwgV2VpZ2h0ZWQgT0kgLyBDb25mbHVlbmNlIHwKfCA0IEdyYW5kIHwge3twaGFzZV80fX0gfCBQbGFubmVkIHwgUmVwbGF5IFNpbSBQbGFubmVkIHwKCiMjIyBRdWFudCBLUElzCnwgS1BJIHwgQ3VycmVudCB8IFRhcmdldCB8IFRyZW5kIHwKfC0tLS0tLXwtLS0tLS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLXwKfCBEQiBSb3dzIHwge3tkYl9yb3dzfX0gfCA+NTAwIHwge3tkYl90cmVuZH19IHwKfCBBdmcgWi1TY29yZSB8IHt7YXZnX3p9fSB8IDwyLjAgfCB7e3pfdHJlbmR9fSB8CnwgQWxlcnQgQWNjdXJhY3kgfCB7e2FsZXJ0X2FjY319IHwgPjk1JSB8IHt7YWxlcnRfdHJlbmR9fSB8CnwgQ29uZmx1ZW5jZSBIaXRzIHwge3tjb25mbHVlbmNlX2hpdHN9fSB8ID4wLjY2IHwge3tjb25mbHVlbmNlX3RyZW5kfX0gfAp8IFdTIFVwdGltZSB8IHt7d3NfdXB0aW1lfX0gfCA5OS45JSB8IHt7d3NfdHJlbmR9fSB8CgotLS0KCiMjIFN5c3RlbSBDb250ZXh0CgoqKlB5dGhvbjoqKiBQeXRob24gMy4xMy4xICAKKipOb2RlOioqIHYyMi4yMC4wICAKKipPUzoqKiBNaWNyb3NvZnQgV2luZG93cyAxMCBQcm8gIAoqKlVzZXI6KiogTGlhbiAgCgoqKlJlcG8gU3VtbWFyeToqKiAgCmBgYHRleHQKCmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB1bmhlYWx0aHkgIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6KiogQ2hlY2sgL2hlYWx0aCByb3V0ZSBhbmQgYmFja2VuZCBsb2dzICAKLSAqKkxhc3QgS25vd24gSGVhbHRoeSBTbmFwc2hvdDoqKiAyMDI1LTEwLTIxIDIzOjUyOjE5ICAKCi0tLQoKIyMgUmVjb21tZW5kYXRpb25zCgoxLiBWZXJpZnkgYC9oZWFsdGhgIGVuZHBvaW50IHJlc3BvbnNlLiAgCjIuIENoZWNrIGBiYWNrZW5kL2xvZ3MvYXBwLmxvZ2AgZm9yIFVURi04IGVuY29kaW5nIGVycm9ycy4gIAozLiBSZS1ydW4gYEludm9rZS1Db250aW51aXR5U25hcHNob3RgIGFmdGVyIGNvbmZpcm1pbmcgYmFja2VuZCBmaXguICAKNC4gQ29tbWl0IHdpdGggYEludm9rZS1QaGFzZVRyYWNrIC1wIFAzLjcgLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCgotLS0KQmFja2VuZCBIZWFsdGh5IC0gMjAyNS0xMC0yMSAyMzo1MjoxOQ==",
        "summary": "103L | status_report.md | .md | 2.6 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\status_report_template.md",
        "type": ".md",
        "size_kb": 2.5,
        "lines": 100,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIHt7dGltZXN0YW1wfX0gIAoqKlBoYXNlOioqIHt7cGhhc2V9fSAgCioqQmFja2VuZDoqKiB7e2JhY2tlbmRfbmFtZX19ICAKKipNYWludGFpbmVyOioqIExpYW4gSXNhYWMgIAoKLS0tCgojIyBPdmVydmlldwoKfCBGaWVsZCB8IFZhbHVlIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAqKlBoYXNlKiogfCB7e3BoYXNlfX0gfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHt7YmFja2VuZF9oZWFsdGh9fSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwge3t1cHRpbWVfcGN0fX0gJSB8CnwgKipTeXN0ZW0qKiB8IHt7c3lzdGVtX2luZm99fSB8CnwgKipEYXRhYmFzZSBQYXRoKiogfCB7e2RiX3BhdGh9fSB8CgotLS0KCiMjIEJhY2tlbmQgU3VtbWFyeQoKKipMYXN0IFNuYXBzaG90OioqIHt7dGltZXN0YW1wfX0gIAoqKkhlYWx0aCBDaGVjazoqKiB7e2hlYWx0aF9tZXNzYWdlfX0gIAoKIyMjIEtleSBDb21wb25lbnRzCnwgRmlsZSB8IEhhc2ggfCBMYXN0IFVwZGF0ZWQgfAp8LS0tLS0tfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS18CnwgbWV0cmljcy5weSB8IHt7aGFzaF9tZXRyaWNzfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBkYi5weSB8IHt7aGFzaF9kYn19IHwge3t0aW1lc3RhbXB9fSB8CnwgYXBwLnB5IHwge3toYXNoX2FwcH19IHwge3t0aW1lc3RhbXB9fSB8Cnwgc2NyYXBlci5weSB8IHt7aGFzaF9zY3JhcGVyfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBBcHAuanN4IHwge3toYXNoX2FwcGpzeH19IHwge3t0aW1lc3RhbXB9fSB8CgotLS0KCiMjIFF1YW50IFByb2dyZXNzIFNuYXBzaG90Cgp8IFBoYXNlIHwgJSBDb21wbGV0ZSB8IFN0YXR1cyB8IE5vdGVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tLS0tLS18LS0tLS0tLS18LS0tLS0tLS18CnwgMS41IFNjYWZmb2xkIHwge3twaGFzZV8xNX19IHwgRG9uZSB8IFNlZWQgKyBXUyBTdGFibGUgfAp8IDIgQ29yZSB8IHt7cGhhc2VfMn19IHwgRG9uZSB8IFRGIFN3aXRjaCArIEV4cG9ydHMgfAp8IDMgQWR2IHwge3twaGFzZV8zfX0gfCBJbiBQcm9ncmVzcyB8IFdlaWdodGVkIE9JIC8gQ29uZmx1ZW5jZSB8CnwgNCBHcmFuZCB8IHt7cGhhc2VfNH19IHwgUGxhbm5lZCB8IFJlcGxheSBTaW0gUGxhbm5lZCB8CgojIyMgUXVhbnQgS1BJcwp8IEtQSSB8IEN1cnJlbnQgfCBUYXJnZXQgfCBUcmVuZCB8CnwtLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS18CnwgREIgUm93cyB8IHt7ZGJfcm93c319IHwgPjUwMCB8IHt7ZGJfdHJlbmR9fSB8CnwgQXZnIFotU2NvcmUgfCB7e2F2Z196fX0gfCA8Mi4wIHwge3t6X3RyZW5kfX0gfAp8IEFsZXJ0IEFjY3VyYWN5IHwge3thbGVydF9hY2N9fSB8ID45NSUgfCB7e2FsZXJ0X3RyZW5kfX0gfAp8IENvbmZsdWVuY2UgSGl0cyB8IHt7Y29uZmx1ZW5jZV9oaXRzfX0gfCA+MC42NiB8IHt7Y29uZmx1ZW5jZV90cmVuZH19IHwKfCBXUyBVcHRpbWUgfCB7e3dzX3VwdGltZX19IHwgOTkuOSUgfCB7e3dzX3RyZW5kfX0gfAoKLS0tCgojIyBTeXN0ZW0gQ29udGV4dAoKKipQeXRob246Kioge3tweXRob25fdmVyc2lvbn19ICAKKipOb2RlOioqIHt7bm9kZV92ZXJzaW9ufX0gIAoqKk9TOioqIHt7b3NfdmVyc2lvbn19ICAKKipVc2VyOioqIHt7dXNlcn19ICAKCioqUmVwbyBTdW1tYXJ5OioqICAKYGBgdGV4dAp7e3JlcG9fc3VtbWFyeX19CmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB7e2JhY2tlbmRfaGVhbHRofX0gIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6Kioge3tkaWFnbm9zdGljX2hpbnR9fSAgCi0gKipMYXN0IEtub3duIEhlYWx0aHkgU25hcHNob3Q6Kioge3tsYXN0X2hlYWx0aHlfdGltZXN0YW1wfX0gIAoKLS0tCgojIyBSZWNvbW1lbmRhdGlvbnMKCjEuIFZlcmlmeSBgL2hlYWx0aGAgZW5kcG9pbnQgcmVzcG9uc2UuICAKMi4gQ2hlY2sgYGJhY2tlbmQvbG9ncy9hcHAubG9nYCBmb3IgVVRGLTggZW5jb2RpbmcgZXJyb3JzLiAgCjMuIFJlLXJ1biBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgYWZ0ZXIgY29uZmlybWluZyBiYWNrZW5kIGZpeC4gIAo0LiBDb21taXQgd2l0aCBgSW52b2tlLVBoYXNlVHJhY2sgLXAge3tuZXh0X3BoYXNlfX0gLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCg==",
        "summary": "100L | status_report_template.md | .md | 2.5 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\testing_harness.md",
        "type": ".md",
        "size_kb": 1.3,
        "lines": 21,
        "content": "IyBUZXN0aW5nIEhhcm5lc3MgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpGb2N1czogU21va2UgKDw1cyksIEJlbmNoICg8MTBzLzUwIHBhaXJzKSwgUXVhbnQgVmFsIChaIGZpbml0ZS9mYWxzZS1wb3MpLiBSdW46IHB5dGVzdCAtcSA7IGNvZGVfZXhlY3V0aW9uIHNuaXBwZXRzLgoKIyMgUHl0ZXN0IFN1aXRlIChweXRlc3QuaW5pICsgRmlsZXMpCi0gdGVzdF9tZXRyaWNzLnB5OiBgZGVmIHRlc3RfZ2V0X2FsbCgpOiBtZXRyaWNzID0gZ2V0X2FsbF9tZXRyaWNzKHRmPScxNW0nKTsgYXNzZXJ0IGxlbihtZXRyaWNzKSA9PSAyMDsgYXNzZXJ0IGFsbChucC5pc2Zpbml0ZShtWyd6X3Njb3JlJ10pIGZvciBtIGluIG1ldHJpY3MpYAotIHRlc3Rfd3MucHk6IGBkZWYgdGVzdF9lbWl0KCk6IC4uLiBhc3NlcnQgJ21ldHJpY3NfdXBkYXRlJyBpbiBzb2NrZXRpby5ldmVudHNgCi0gQmVuY2g6IGBweXRlc3QgLS1iZW5jaG1hcmstb25seWAgKFRhcmdldDogPDVzIGxvYWQsIG5vIGJsYW5rcykuCgojIyBUb29sIFNuaXBwZXRzIChjb2RlX2V4ZWN1dGlvbikKfCBUZXN0IHwgU25pcHBldCB8IEV4cGVjdGVkIHwKfC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBaIEZpbml0ZSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IHogPSBucC5yYW5kb20ubm9ybWFsKDAsMSwyMCk7IGFzc2VydCBucC5hbGwobnAuaXNmaW5pdGUoeikpICYgKG5wLmFicyh6KSA8IDEwKWAgfCBUcnVlIHwKfCBXZWlnaHRlZCBPSSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IG9pID0gbnAuYXJyYXkoWzFlOSwyZTldKTsgdm9scyA9IG5wLmFycmF5KFsxZTksMmU5XSk7IHcgPSBucC5hdmVyYWdlKG9pLCB3ZWlnaHRzPXZvbHMvdm9scy5zdW0oKSk7IHByaW50KHcpYCB8IDEuNjY2ZTkgfAp8IENvbmZsdWVuY2UgfCBgZGVmIGNhbGMoeixscyxpbWIpOiByZXR1cm4gc3VtKFt6PjIuNSwgbHM+MiwgYWJzKGltYik+M10pLzM7IHByaW50KGNhbGMoMi42LDIuMSwtMy4xKSlgIHwgMS4wIHwKfCBEQiBSb3dzIHwgQXMgZ2VuX3RyYWNrZXIucHkgfCA+NTgxIHwKCiMjIDI0aCBIYXJuZXNzIChQUyBDaGFpbikKYGBgcG93ZXJzaGVsbApweXRlc3QgLXEgOyBjdXJsIC9hcGkvbWV0cmljcz90Zj0xNW0gfCBqcSAnbGVuZ3RoJyA7IEdldC1Db250ZW50IGJhY2tlbmQvbG9ncy9hcHAubG9nIC1UYWlsIDEwIHwgU2VsZWN0LVN0cmluZyAiZW1pdHxlcnJvciIgOyBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQojIE91dHB1dDogLi4uLi4uLi4gMjAgOyBFbWl0dGVkMjAgKG5vIGVycm9yKQ==",
        "summary": "21L | testing_harness.md | .md | 1.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\z_history.json",
        "type": ".json",
        "size_kb": 0.1,
        "lines": 1,
        "content": "Wy0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1LCAtMC4wMDQzMDczMTg3MTYwNDYxOTUsIC0wLjAwNDMwNzMxODcxNjA0NjE5NV0=",
        "summary": "1L | z_history.json | .json | 0.1 KB"
      },
      {
        "path": "docs\\docs\\codegen_index.md",
        "type": ".md",
        "size_kb": 0.4,
        "lines": 10,
        "content": "IyBDb2RlIEV4cG9ydCBJbmRleCAtIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCAodjEuMCkKCl9MYXN0IHVwZGF0ZWQ6IDIwMjUtMTAtMjEgMjM6NDY6NDhfCgp8IEZpbGUgfCBUeXBlIHwgTGluZXMgfCBTaXplIChLQikgfCBQYXRoIHwKfC0tLS0tLXwtLS0tLS18LS0tLS0tLTp8LS0tLS0tLS0tOnwtLS0tLS18CnwgZG9jc1xjb2RlZ2VuX2luZGV4Lm1kIHwgLm1kIHwgMTAgfCAwLjQgfCBkb2NzXGNvZGVnZW5faW5kZXgubWQgfAp8IGRvY3NccHJvamVjdF9kYXRhLmpzb24gfCAuanNvbiB8IDM1IHwgMS41IHwgZG9jc1xwcm9qZWN0X2RhdGEuanNvbiB8CgpfVG90YWwgRmlsZXM6IDIgfCBQaGFzZTogVW5rbm93biB8IFVwdGltZTogTi9BXw==",
        "summary": "10L | codegen_index.md | .md | 0.4 KB"
      },
      {
        "path": "docs\\docs\\project_data.json",
        "type": ".json",
        "size_kb": 3.3,
        "lines": 35,
        "content": "ewogICJwcm9qZWN0IjogewogICAgIm5hbWUiOiAiQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkIiwKICAgICJ2ZXJzaW9uIjogInYxLjAiLAogICAgInBoYXNlIjogIlVua25vd24iLAogICAgInVwdGltZV9wY3QiOiAiTi9BIiwKICAgICJiYWNrZW5kX3N0YXR1cyI6ICJ1bmtub3duIiwKICAgICJsYXN0X3N5bmMiOiAiMjAyNS0xMC0yMSAyMzo0Njo0OCIKICB9LAogICJjb2RlIjogewogICAgImZpbGVzIjogWwogICAgICB7CiAgICAgICAgInBhdGgiOiAiZG9jc1xcY29kZWdlbl9pbmRleC5tZCIsCiAgICAgICAgInR5cGUiOiAiLm1kIiwKICAgICAgICAic2l6ZV9rYiI6IDAuNCwKICAgICAgICAibGluZXMiOiAxMCwKICAgICAgICAiY29udGVudCI6ICJJeUJEYjJSbElFVjRjRzl5ZENCSmJtUmxlQ0F0SUVOeWVYQjBieUJHZFhSMWNtVnpJRVJoYzJoaWIyRnlaQ0FvZGpFdU1Da0tDbDlNWVhOMElIVndaR0YwWldRNklESXdNalV0TVRBdE1qRWdNak02TkRRNk1EaGZDZ3A4SUVacGJHVWdmQ0JVZVhCbElId2dUR2x1WlhNZ2ZDQlRhWHBsSUNoTFFpa2dmQ0JRWVhSb0lId0tmQzB0TFMwdExYd3RMUzB0TFMxOExTMHRMUzB0TFRwOExTMHRMUzB0TFMwdE9ud3RMUzB0TFMxOENud2daRzlqYzF4amIyUmxaMlZ1WDJsdVpHVjRMbTFrSUh3Z0xtMWtJSHdnT0NCOElEQXVNaUI4SUdSdlkzTmNZMjlrWldkbGJsOXBibVJsZUM1dFpDQjhDbndnWkc5amMxeHdjbTlxWldOMFgyUmhkR0V1YW5OdmJpQjhJQzVxYzI5dUlId2dNVGdnZkNBd0xqUWdmQ0JrYjJOelhIQnliMnBsWTNSZlpHRjBZUzVxYzI5dUlId0tDbDlVYjNSaGJDQkdhV3hsY3pvZ01pQjhJRkJvWVhObE9pQlZibXR1YjNkdUlId2dWWEIwYVcxbE9pQk9MMEZmIiwKICAgICAgICAic3VtbWFyeSI6ICIxMEwgfCBjb2RlZ2VuX2luZGV4Lm1kIHwgLm1kIHwgMC40IEtCIgogICAgICB9LAogICAgICB7CiAgICAgICAgInBhdGgiOiAiZG9jc1xccHJvamVjdF9kYXRhLmpzb24iLAogICAgICAgICJ0eXBlIjogIi5qc29uIiwKICAgICAgICAic2l6ZV9rYiI6IDEuNSwKICAgICAgICAibGluZXMiOiAzNSwKICAgICAgICAiY29udGVudCI6ICJld29nSUNKd2NtOXFaV04wSWpvZ2V3b2dJQ0FnSW01aGJXVWlPaUFpUTNKNWNIUnZJRVoxZEhWeVpYTWdSR0Z6YUdKdllYSmtJaXdLSUNBZ0lDSjJaWEp6YVc5dUlqb2dJbll4TGpBaUxBb2dJQ0FnSW5Cb1lYTmxJam9nSWxWdWEyNXZkMjRpTEFvZ0lDQWdJblZ3ZEdsdFpWOXdZM1FpT2lBaVRpOUJJaXdLSUNBZ0lDSmlZV05yWlc1a1gzTjBZWFIxY3lJNklDSjFibXR1YjNkdUlpd0tJQ0FnSUNKc1lYTjBYM041Ym1NaU9pQWlNakF5TlMweE1DMHlNU0F5TXpvME5Eb3dPQ0lLSUNCOUxBb2dJQ0pqYjJSbElqb2dld29nSUNBZ0ltWnBiR1Z6SWpvZ1d3b2dJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0luQmhkR2dpT2lBaVpHOWpjMXhjWTI5a1pXZGxibDlwYm1SbGVDNXRaQ0lzQ2lBZ0lDQWdJQ0FnSW5SNWNHVWlPaUFpTG0xa0lpd0tJQ0FnSUNBZ0lDQWljMmw2WlY5cllpSTZJREF1TWl3S0lDQWdJQ0FnSUNBaWJHbHVaWE1pT2lBNExBb2dJQ0FnSUNBZ0lDSmpiMjUwWlc1MElqb2dJa2w1UWtSaU1sSnNTVVZXTkdOSE9YbGtRMEpLWW0xU2JHVkRRWFJKUlU1NVpWaENNR0o1UWtka1dGSXhZMjFXZWtsRlVtaGpNbWhwWWpKR2VWcERRVzlrYWtWMVRVTnJTME5zT1UxWldFNHdTVWhXZDFwSFJqQmFWMUUyU1VSSmQwMXFWWFJOVkVGMFRXcEZaMDFxVFRaT1JFazJUVlJzWmtObmNEaEpSVnB3WWtkVloyWkRRbFZsV0VKc1NVaDNaMVJIYkhWYVdFMW5aa05DVkdGWWNHeEpRMmhNVVdscloyWkRRbEZaV0ZKdlNVaDNTMlpETUhSTVV6QjBURmgzZEV4VE1IUk1VekU0VEZNd2RFeFRNSFJNVkhBNFRGTXdkRXhUTUhSTVV6QjBUMjUzZEV4VE1IUk1VekU0UTJkd1psWkhPVEJaVjNkblVtMXNjMXBZVFRaSlJFRm5aa05DVVdGSFJucGFWRzluVmxjMWNtSnRPVE5pYVVJNFNVWldkMlJIYkhSYVZHOW5WR2s1UWxoM1BUMGlMQW9nSUNBZ0lDQWdJQ0p6ZFcxdFlYSjVJam9nSWpoTUlId2dZMjlrWldkbGJsOXBibVJsZUM1dFpDQjhJQzV0WkNCOElEQXVNaUJMUWlJS0lDQWdJQ0FnZlN3S0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNKd1lYUm9Jam9nSW1SdlkzTmNYSEJ5YjJwbFkzUmZaR0YwWVM1cWMyOXVJaXdLSUNBZ0lDQWdJQ0FpZEhsd1pTSTZJQ0l1YW5OdmJpSXNDaUFnSUNBZ0lDQWdJbk5wZW1WZmEySWlPaUF3TGpRc0NpQWdJQ0FnSUNBZ0lteHBibVZ6SWpvZ01UZ3NDaUFnSUNBZ0lDQWdJbU52Ym5SbGJuUWlPaUFpWlhkdlowbERTbmRqYlRseFdsZE9NRWxxYjJkbGQyOW5TVU5CWjBsdE5XaGlWMVZwVDJsQmFWRXpTalZqU0ZKMlNVVmFNV1JJVm5sYVdFMW5Va2RHZW1GSFNuWlpXRXByU1dsM1MwbERRV2RKUTBveVdsaEtlbUZYT1hWSmFtOW5TVzVaZUV4cVFXbE1RVzluU1VOQlowbHVRbTlaV0U1c1NXcHZaMGxzVm5WaE1qVjJaREkwYVV4QmIyZEpRMEZuU1c1V2QyUkhiSFJhVmpsM1dUTlJhVTlwUVdsVWFUbENTV2wzUzBsRFFXZEpRMHBwV1ZkT2NscFhOV3RZTTA0d1dWaFNNV041U1RaSlEwb3hZbTEwZFdJelpIVkphWGRMU1VOQlowbERTbk5aV0U0d1dETk9OV0p0VFdsUGFVRnBUV3BCZVU1VE1IaE5RekI1VFZOQmVVMTZiekJOYW05NFQxTkpTMGxEUWpsTVFXOW5TVU5LYW1JeVVteEphbTluWlhkdlowbERRV2RKYlZwd1lrZFdla2xxYjJkWE1UQkxTVU5DT1V4QmIyZEpRMHAwV2xoU2FGcEhSakJaVTBrMlNVaHpTMGxEUVdkSlEwb3hZMGRTYUdSSFZtdEphbTluU1dwSmQwMXFWWFJOVkVGMFRXcEZaMDFxVFRaT1JFazJUVlJyYVV4QmIyZEpRMEZuU1c1U2RtUkhSbk5ZTWxwd1lrZFdla2xxYjJkTlEzZExTVU5CWjBsRFNuUlpXR2htV20xc2MxcFdPWHBoV0hCc1dESjBhVWxxYjJkUFZHTXlUR3BaUzBsRFFqbERiakE5SWl3S0lDQWdJQ0FnSUNBaWMzVnRiV0Z5ZVNJNklDSXhPRXdnZkNCd2NtOXFaV04wWDJSaGRHRXVhbk52YmlCOElDNXFjMjl1SUh3Z01DNDBJRXRDSWdvZ0lDQWdJQ0I5Q2lBZ0lDQmRDaUFnZlN3S0lDQWliV1YwWVdSaGRHRWlPaUI3Q2lBZ0lDQWlkWEJrWVhSbFpDSTZJQ0l5TURJMUxURXdMVEl4SURJek9qUTBPakE0SWl3S0lDQWdJQ0owYjNSaGJGOW1hV3hsY3lJNklESXNDaUFnSUNBaWJXRjRYMlpwYkdWZmMybDZaVjlyWWlJNklEazNOaTQyQ2lBZ2ZRcDkiLAogICAgICAgICJzdW1tYXJ5IjogIjM1TCB8IHByb2plY3RfZGF0YS5qc29uIHwgLmpzb24gfCAxLjUgS0IiCiAgICAgIH0KICAgIF0KICB9LAogICJtZXRhZGF0YSI6IHsKICAgICJ1cGRhdGVkIjogIjIwMjUtMTAtMjEgMjM6NDY6NDgiLAogICAgInRvdGFsX2ZpbGVzIjogMiwKICAgICJtYXhfZmlsZV9zaXplX2tiIjogOTc2LjYKICB9Cn0=",
        "summary": "35L | project_data.json | .json | 3.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\autogen\\codegen_v1.py",
        "type": ".py",
        "size_kb": 5.9,
        "lines": 173,
        "content": "",
        "summary": "173L | codegen_v1.py | .py | 5.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\autogen\\gen_blueprint_v2.py",
        "type": ".py",
        "size_kb": 2.8,
        "lines": 82,
        "content": "IyBnZW5fYmx1ZXByaW50X3YyLnB5IOKAkyBEUi1QMiBJbnRlZ3JhdGlvbiAoQ29udGV4dC1Bd2FyZSwgQXV0b0RvY3MgUmVhZHkpCiMgVXNhZ2U6IGNkIGRvY3MvYXV0b2dlbiA7IHB5dGhvbiBnZW5fYmx1ZXByaW50X3YyLnB5CmltcG9ydCBzcWxpdGUzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBvcwppbXBvcnQgcmUKaW1wb3J0IHRlbXBmaWxlCmltcG9ydCBzaHV0aWwKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgpDT05URVhUX1BBVEggPSBQYXRoKHIiRTpcVHJhZGluZ1xjcnlwdG8tZnV0dXJlcy1kYXNoYm9hcmRcZG9jc1xwcm9qZWN0X2NvbnRleHRfdjMuanNvbiIpCk9VVFBVVF9QQVRIID0gUGF0aChyIkU6XFRyYWRpbmdcY3J5cHRvLWZ1dHVyZXMtZGFzaGJvYXJkXGRvY3NccXVhbnRfYmx1ZXByaW50X3N5bmNlZC5tZCIpCgpkZWYgY2xlYW5fb2xkX2twaShjb250ZW50OiBzdHIpIC0+IHN0cjoKICAgIHBhdHRlcm4gPSByIiMjIEF1dG8tS1BJIFVwZGF0ZS4qPyg/PVxuIyMgfFxaKSIKICAgIHJldHVybiByZS5zdWIocGF0dGVybiwgIiIsIGNvbnRlbnQsIGZsYWdzPXJlLkRPVEFMTCkKCmRlZiBzYWZlX3dyaXRlKHBhdGg6IFBhdGgsIGRhdGE6IHN0cik6CiAgICBkaXJfcGF0aCA9IHBhdGgucGFyZW50CiAgICB3aXRoIHRlbXBmaWxlLk5hbWVkVGVtcG9yYXJ5RmlsZShtb2RlPSJ3IiwgZGVsZXRlPUZhbHNlLCBlbmNvZGluZz0idXRmLTgiLCBzdWZmaXg9Ii5tZCIsIGRpcj1kaXJfcGF0aCkgYXMgdG1wOgogICAgICAgIHRtcC53cml0ZShkYXRhKQogICAgICAgIHRtcF9wYXRoID0gdG1wLm5hbWUKICAgIHNodXRpbC5tb3ZlKHRtcF9wYXRoLCBwYXRoKQoKZGVmIGxvYWRfY29udGV4dCgpOgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX1BBVEgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgcmV0dXJuIGpzb24ubG9hZChmKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gQ29udGV4dCBsb2FkIGZhaWxlZDoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgZGJfcGF0aCA9IGN0eC5nZXQoImRhdGFiYXNlX3BhdGgiLCAiYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2Z1dHVyZXMuZGIiKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHVwdGltZSA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwKQoKICAgIGRiX2FicyA9IFBhdGgociJFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZCIpIC8gUGF0aChkYl9wYXRoKQogICAgcHJpbnQoZiJbaV0gREI6IHtkYl9hYnN9IHwgT1VUOiB7T1VUUFVUX1BBVEh9IikKCiAgICB0cnk6CiAgICAgICAgd2l0aCBzcWxpdGUzLmNvbm5lY3QoZGJfYWJzKSBhcyBjb246CiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwoIlNFTEVDVCBvaV9hYnNfdXNkLCB2b2xfdXNkIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA1MCIsIGNvbikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlvinJddIERCIGVycm9yOiB7ZX0iKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKCkKCiAgICBpZiBkZi5lbXB0eSBvciBkZlsndm9sX3VzZCddLmZpbGxuYSgwKS5zdW0oKSA9PSAwOgogICAgICAgIHdlaWdodGVkX29pID0gMC4wCiAgICAgICAgc3RhdHVzID0gIk5vIHZhbGlkIE9JL1ZvbCBkYXRhIgogICAgZWxzZToKICAgICAgICB3ZWlnaHRzID0gZGZbJ3ZvbF91c2QnXSAvIGRmWyd2b2xfdXNkJ10uc3VtKCkKICAgICAgICB3ZWlnaHRlZF9vaSA9IG5wLmF2ZXJhZ2UoZGZbJ29pX2Fic191c2QnXSwgd2VpZ2h0cz13ZWlnaHRzKQogICAgICAgIHN0YXR1cyA9IGYiV2VpZ2h0ZWQgT0kgZnJvbSB7bGVuKGRmKX0gcGFpcnMiCgogICAga3BpX21kID0gKAogICAgICAgICIjIyBBdXRvLUtQSSBVcGRhdGUgKCIgKyBkYXRldGltZS5ub3coKS5zdHJmdGltZSgiJVktJW0tJWQgJUg6JU0iKSArICIpXG4iCiAgICAgICAgInwgTWV0cmljIHwgVmFsdWUgfFxuIgogICAgICAgICJ8LS0tLS0tLS0tfC0tLS0tLS18XG4iCiAgICAgICAgZiJ8ICoqV2VpZ2h0ZWQgT0kgKFVTRCkqKiB8IFxcJHt3ZWlnaHRlZF9vaS8xZTk6LjJmfUIgfFxuIgogICAgICAgIGYifCAqKlBoYXNlKiogfCB7cGhhc2V9IHxcbiIKICAgICAgICBmInwgKipVcHRpbWUqKiB8IHt1cHRpbWU6LjFmfSUgfFxuIgogICAgICAgIGYifCAqKlN0YXR1cyoqIHwge3N0YXR1c30gfFxuIgogICAgKQoKICAgIHRyeToKICAgICAgICBpZiBPVVRQVVRfUEFUSC5leGlzdHMoKToKICAgICAgICAgICAgY29udGVudCA9IGNsZWFuX29sZF9rcGkoT1VUUFVUX1BBVEgucmVhZF90ZXh0KGVuY29kaW5nPSJ1dGYtOCIpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRlbnQgPSAiIyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZClcbiIKICAgICAgICB1cGRhdGVkID0gY29udGVudC5zdHJpcCgpICsgIlxuXG4iICsga3BpX21kCiAgICAgICAgc2FmZV93cml0ZShPVVRQVVRfUEFUSCwgdXBkYXRlZCkKICAgICAgICBwcmludChmIlvinJNdIFVwZGF0ZWQ6IHtPVVRQVVRfUEFUSC5uYW1lfSAoe3dlaWdodGVkX29pLzFlOTouMmZ9QikiKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gV3JpdGUgZXJyb3I6IHtlfSIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCg==",
        "summary": "82L | gen_blueprint_v2.py | .py | 2.8 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\autogen\\gen_tracker_v2.py",
        "type": ".py",
        "size_kb": 4.2,
        "lines": 114,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKZ2VuX3RyYWNrZXJfdjIucHkg4oCUIFF1YW50IFByb2dyZXNzIFRyYWNrZXIgKFAzIFdlaWdodGVkIE9JIFRlYXNlKQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KUHVsbHMgR2l0IGRpZmZzLCBjb250ZXh0LCBEQiBtZXRyaWNzIOKGkiBhcHBlbmRzIHRvIHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgKyBwbG90cyBaLXRyZW5kLgpGaXg6IERlZmluZSAncCcgdmlhIFBhdGggKEw3KTsgdXRmLTgtc2lnIGZvciBCT007IGZpbml0ZSBaIGd1YXJkLgpVc2FnZTogcHl0aG9uIGRvY3MvYXV0b2dlbi9nZW5fdHJhY2tlcl92Mi5weQpPdXRwdXRzOiBkb2NzL3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgfCBkb2NzL3Bsb3RzL3pfdHJlbmQucG5nCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IG9zCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aCAgIyBGaXhlZDogSW1wb3J0IGZvciAncCcgZGVmIChMNyB1c2UpCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBzcWxhbGNoZW15IGltcG9ydCBjcmVhdGVfZW5naW5lLCB0ZXh0CgojID09PSBDT05GSUcgPT09ClJFUE9fUk9PVCA9IFBhdGgoX19maWxlX18pLnJlc29sdmUoKS5wYXJlbnQucGFyZW50LnBhcmVudApET0NTX0RJUiA9IFJFUE9fUk9PVCAvICJkb2NzIgpQTE9UU19ESVIgPSBET0NTX0RJUiAvICJwbG90cyIKVFJBQ0tFUl9NRCA9IERPQ1NfRElSIC8gInF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQiCkNPTlRFWFRfSlNPTiA9IERPQ1NfRElSIC8gInByb2plY3RfY29udGV4dF92My5qc29uIgpEQl9QQVRIID0gUkVQT19ST09UIC8gImJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIgoKUExPVFNfRElSLm1rZGlyKGV4aXN0X29rPVRydWUpCgpkZWYgbG9hZF9jb250ZXh0KCk6CiAgICAiIiJMb2FkIHByb2plY3QgY29udGV4dCAodXRmLTgtc2lnIGZvciBCT00pLiIiIgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX0pTT04sICdyJywgZW5jb2Rpbmc9J3V0Zi04LXNpZycpIGFzIGY6CiAgICAgICAgICAgIHJldHVybiBqc29uLmxvYWQoZikKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIHsicGhhc2UiOiAiVW5rbm93biIsICJ1cHRpbWVfcGN0IjogMC4wfQoKZGVmIGdldF9naXRfZGlmZnMoKToKICAgICIiIlJ1biBnaXQgZGlmZiDihpIgY291bnQgZmlsZXMvY2hhbmdlcy4iIiIKICAgIHRyeToKICAgICAgICByZXN1bHQgPSBzdWJwcm9jZXNzLnJ1bihbJ2dpdCcsICdkaWZmJywgJy0tbmFtZS1vbmx5JywgJ0hFQUR+MSddLCBjd2Q9UkVQT19ST09ULCBjYXB0dXJlX291dHB1dD1UcnVlLCB0ZXh0PVRydWUpCiAgICAgICAgZmlsZXNfY2hhbmdlZCA9IFtsaW5lLnN0cmlwKCkgZm9yIGxpbmUgaW4gcmVzdWx0LnN0ZG91dC5zcGxpdGxpbmVzKCkgaWYgbGluZS5zdHJpcCgpXQogICAgICAgIHJldHVybiBsZW4oZmlsZXNfY2hhbmdlZCksIGZpbGVzX2NoYW5nZWQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAsIFtdCgpkZWYgcXVlcnlfZGJfel90cmVuZCgpOgogICAgIiIiUXVlcnkgbWV0cmljcyBEQiBmb3IgYXZnIFogKGZpbml0ZSBvbmx5LCBsYXN0IDEwMCByb3dzKS4iIiIKICAgIGVuZ2luZSA9IGNyZWF0ZV9lbmdpbmUoZidzcWxpdGU6Ly8ve0RCX1BBVEh9JykKICAgIHRyeToKICAgICAgICB3aXRoIGVuZ2luZS5jb25uZWN0KCkgYXMgY29ubjoKICAgICAgICAgICAgcXVlcnkgPSB0ZXh0KCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196IEZST00gbWV0cmljcyBXSEVSRSB6X3Njb3JlIElTIE5PVCBOVUxMIE9SREVSIEJZIHRpbWVzdGFtcCBERVNDIExJTUlUIDEwMCIpCiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwocXVlcnksIGNvbm4pCiAgICAgICAgICAgIGF2Z196ID0gbnAubWVhbihkZlsnYXZnX3onXS5kcm9wbmEoKSkgaWYgbm90IGRmLmVtcHR5IGVsc2UgMC4wCiAgICAgICAgICAgIGNvdW50ID0gbGVuKGRmKQogICAgICAgIHJldHVybiBhdmdfeiwgY291bnQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAuMCwgMAoKZGVmIHVwZGF0ZV90cmFja2VyX21kKHBoYXNlLCBwcm9ncmVzc19wY3QsIGF2Z196LCBmaWxlc19jaGFuZ2VkLCB0cyk6CiAgICAiIiJBcHBlbmQgcm93IHRvIE1EIHRhYmxlLiIiIgogICAgcm93ID0gZiJ8IHtwaGFzZX0gfCB7cHJvZ3Jlc3NfcGN0Oi4xZn0lIHwge2F2Z196Oi4yZn0gfCB7ZmlsZXNfY2hhbmdlZH0gZmlsZXMgfCB7dHN9IHwiCiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKFRSQUNLRVJfTUQsICdhJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZi53cml0ZShmIlxue3Jvd30iKQogICAgICAgIHByaW50KGYiW+Kck10gVHJhY2tlciB1cGRhdGVkOiB7cm93fSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJb4pyXXSBNRCBhcHBlbmQgZmFpbGVkOiB7ZX0iKQoKZGVmIHBsb3Rfel90cmVuZChhdmdfel9oaXN0b3J5KToKICAgICIiIlNpbXBsZSBaLXRyZW5kIHBsb3QgKG1vY2sgaGlzdG9yeSBpZiBlbXB0eSkuIiIiCiAgICBpZiBub3QgYXZnX3pfaGlzdG9yeToKICAgICAgICBhdmdfel9oaXN0b3J5ID0gWzAuMF0gKiA1ICAjIE1vY2sgYmFzZWxpbmUKICAgIHBsdC5maWd1cmUoZmlnc2l6ZT0oOCwgNCkpCiAgICBwbHQucGxvdChyYW5nZShsZW4oYXZnX3pfaGlzdG9yeSkpLCBhdmdfel9oaXN0b3J5LCBtYXJrZXI9J28nLCBjb2xvcj0nYicpCiAgICBwbHQudGl0bGUoJ1otU2NvcmUgVHJlbmQgT3ZlciBQaGFzZXMnKQogICAgcGx0LnhsYWJlbCgnUGhhc2UgU25hcHNob3RzJykKICAgIHBsdC55bGFiZWwoJ0F2ZyBaJykKICAgIHBsdC5ncmlkKFRydWUpCiAgICBwbHQuc2F2ZWZpZyhQTE9UU19ESVIgLyAnel90cmVuZC5wbmcnLCBkcGk9MTAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgcGx0LmNsb3NlKCkKICAgIHByaW50KGYiW+Kck10gUGxvdCBzYXZlZDoge1BMT1RTX0RJUiAvICd6X3RyZW5kLnBuZyd9IikKCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHByb2dyZXNzX3BjdCA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwLjApICAjIFRlYXNlIFAzIHByb2dyZXNzCiAgICB0cyA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTSIpCgogICAgZmlsZXNfY2hhbmdlZCwgXyA9IGdldF9naXRfZGlmZnMoKQogICAgYXZnX3osIHpfY291bnQgPSBxdWVyeV9kYl96X3RyZW5kKCkKCiAgICAjIEZpeGVkIEw3KzogVXNlIFBhdGggZm9yIGFueSBmaWxlIHJlZnMgKGUuZy4sIGlmIHA9UGF0aChUUkFDS0VSX01EKSkKICAgIHAgPSBQYXRoKFRSQUNLRVJfTUQpICAjIERlZiAncCcgaGVyZSBpZiB1c2VkIGRvd25zdHJlYW0gKGUuZy4sIHAuZXhpc3RzKCkpCiAgICBpZiBwLmV4aXN0cygpIG9yIFRydWU6ICAjIEd1YXJkCiAgICAgICAgdXBkYXRlX3RyYWNrZXJfbWQocGhhc2UsIHByb2dyZXNzX3BjdCwgYXZnX3osIGZpbGVzX2NoYW5nZWQsIHRzKQoKICAgICMgTW9jayBoaXN0b3J5IGZvciBwbG90IChhcHBlbmQgcmVhbCBhdmdfeikKICAgIGhpc3RvcnlfZmlsZSA9IERPQ1NfRElSIC8gInpfaGlzdG9yeS5qc29uIgogICAgaGlzdG9yeSA9IFtdCiAgICBpZiBoaXN0b3J5X2ZpbGUuZXhpc3RzKCk6CiAgICAgICAgd2l0aCBvcGVuKGhpc3RvcnlfZmlsZSwgJ3InLCBlbmNvZGluZz0ndXRmLTgtc2lnJykgYXMgZjoKICAgICAgICAgICAgaGlzdG9yeSA9IGpzb24ubG9hZChmKQogICAgaGlzdG9yeS5hcHBlbmQoYXZnX3opCiAgICB3aXRoIG9wZW4oaGlzdG9yeV9maWxlLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAganNvbi5kdW1wKGhpc3RvcnlbLTEwOl0sIGYpICAjIExhc3QgMTAKICAgIHBsb3Rfel90cmVuZChoaXN0b3J5Wy0xMDpdKQoKICAgIHByaW50KGYiW2ldIERCOiB7REJfUEFUSH0gfCBPVVQ6IHtUUkFDS0VSX01EfSIpCiAgICBwcmludChmIlvinJNdIFRyYWNrZXIgdXBkYXRlZDogfCB7cGhhc2V9IHwge3Byb2dyZXNzX3BjdDouMWZ9JSB8IEF2Z1oge2F2Z196Oi4yZn0gKHt6X2NvdW50fSBmaWxlcywge3RzfSkgfCIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigp",
        "summary": "114L | gen_tracker_v2.py | .py | 4.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\docs\\codegen_index.md",
        "type": ".md",
        "size_kb": 0.4,
        "lines": 10,
        "content": "IyBDb2RlIEV4cG9ydCBJbmRleCAtIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCAodjEuMCkKCl9MYXN0IHVwZGF0ZWQ6IDIwMjUtMTAtMjEgMjM6NDY6NDhfCgp8IEZpbGUgfCBUeXBlIHwgTGluZXMgfCBTaXplIChLQikgfCBQYXRoIHwKfC0tLS0tLXwtLS0tLS18LS0tLS0tLTp8LS0tLS0tLS0tOnwtLS0tLS18CnwgZG9jc1xjb2RlZ2VuX2luZGV4Lm1kIHwgLm1kIHwgMTAgfCAwLjQgfCBkb2NzXGNvZGVnZW5faW5kZXgubWQgfAp8IGRvY3NccHJvamVjdF9kYXRhLmpzb24gfCAuanNvbiB8IDM1IHwgMS41IHwgZG9jc1xwcm9qZWN0X2RhdGEuanNvbiB8CgpfVG90YWwgRmlsZXM6IDIgfCBQaGFzZTogVW5rbm93biB8IFVwdGltZTogTi9BXw==",
        "summary": "10L | codegen_index.md | .md | 0.4 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\docs\\project_data.json",
        "type": ".json",
        "size_kb": 3.3,
        "lines": 35,
        "content": "ewogICJwcm9qZWN0IjogewogICAgIm5hbWUiOiAiQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkIiwKICAgICJ2ZXJzaW9uIjogInYxLjAiLAogICAgInBoYXNlIjogIlVua25vd24iLAogICAgInVwdGltZV9wY3QiOiAiTi9BIiwKICAgICJiYWNrZW5kX3N0YXR1cyI6ICJ1bmtub3duIiwKICAgICJsYXN0X3N5bmMiOiAiMjAyNS0xMC0yMSAyMzo0Njo0OCIKICB9LAogICJjb2RlIjogewogICAgImZpbGVzIjogWwogICAgICB7CiAgICAgICAgInBhdGgiOiAiZG9jc1xcY29kZWdlbl9pbmRleC5tZCIsCiAgICAgICAgInR5cGUiOiAiLm1kIiwKICAgICAgICAic2l6ZV9rYiI6IDAuNCwKICAgICAgICAibGluZXMiOiAxMCwKICAgICAgICAiY29udGVudCI6ICJJeUJEYjJSbElFVjRjRzl5ZENCSmJtUmxlQ0F0SUVOeWVYQjBieUJHZFhSMWNtVnpJRVJoYzJoaWIyRnlaQ0FvZGpFdU1Da0tDbDlNWVhOMElIVndaR0YwWldRNklESXdNalV0TVRBdE1qRWdNak02TkRRNk1EaGZDZ3A4SUVacGJHVWdmQ0JVZVhCbElId2dUR2x1WlhNZ2ZDQlRhWHBsSUNoTFFpa2dmQ0JRWVhSb0lId0tmQzB0TFMwdExYd3RMUzB0TFMxOExTMHRMUzB0TFRwOExTMHRMUzB0TFMwdE9ud3RMUzB0TFMxOENud2daRzlqYzF4amIyUmxaMlZ1WDJsdVpHVjRMbTFrSUh3Z0xtMWtJSHdnT0NCOElEQXVNaUI4SUdSdlkzTmNZMjlrWldkbGJsOXBibVJsZUM1dFpDQjhDbndnWkc5amMxeHdjbTlxWldOMFgyUmhkR0V1YW5OdmJpQjhJQzVxYzI5dUlId2dNVGdnZkNBd0xqUWdmQ0JrYjJOelhIQnliMnBsWTNSZlpHRjBZUzVxYzI5dUlId0tDbDlVYjNSaGJDQkdhV3hsY3pvZ01pQjhJRkJvWVhObE9pQlZibXR1YjNkdUlId2dWWEIwYVcxbE9pQk9MMEZmIiwKICAgICAgICAic3VtbWFyeSI6ICIxMEwgfCBjb2RlZ2VuX2luZGV4Lm1kIHwgLm1kIHwgMC40IEtCIgogICAgICB9LAogICAgICB7CiAgICAgICAgInBhdGgiOiAiZG9jc1xccHJvamVjdF9kYXRhLmpzb24iLAogICAgICAgICJ0eXBlIjogIi5qc29uIiwKICAgICAgICAic2l6ZV9rYiI6IDEuNSwKICAgICAgICAibGluZXMiOiAzNSwKICAgICAgICAiY29udGVudCI6ICJld29nSUNKd2NtOXFaV04wSWpvZ2V3b2dJQ0FnSW01aGJXVWlPaUFpUTNKNWNIUnZJRVoxZEhWeVpYTWdSR0Z6YUdKdllYSmtJaXdLSUNBZ0lDSjJaWEp6YVc5dUlqb2dJbll4TGpBaUxBb2dJQ0FnSW5Cb1lYTmxJam9nSWxWdWEyNXZkMjRpTEFvZ0lDQWdJblZ3ZEdsdFpWOXdZM1FpT2lBaVRpOUJJaXdLSUNBZ0lDSmlZV05yWlc1a1gzTjBZWFIxY3lJNklDSjFibXR1YjNkdUlpd0tJQ0FnSUNKc1lYTjBYM041Ym1NaU9pQWlNakF5TlMweE1DMHlNU0F5TXpvME5Eb3dPQ0lLSUNCOUxBb2dJQ0pqYjJSbElqb2dld29nSUNBZ0ltWnBiR1Z6SWpvZ1d3b2dJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0luQmhkR2dpT2lBaVpHOWpjMXhjWTI5a1pXZGxibDlwYm1SbGVDNXRaQ0lzQ2lBZ0lDQWdJQ0FnSW5SNWNHVWlPaUFpTG0xa0lpd0tJQ0FnSUNBZ0lDQWljMmw2WlY5cllpSTZJREF1TWl3S0lDQWdJQ0FnSUNBaWJHbHVaWE1pT2lBNExBb2dJQ0FnSUNBZ0lDSmpiMjUwWlc1MElqb2dJa2w1UWtSaU1sSnNTVVZXTkdOSE9YbGtRMEpLWW0xU2JHVkRRWFJKUlU1NVpWaENNR0o1UWtka1dGSXhZMjFXZWtsRlVtaGpNbWhwWWpKR2VWcERRVzlrYWtWMVRVTnJTME5zT1UxWldFNHdTVWhXZDFwSFJqQmFWMUUyU1VSSmQwMXFWWFJOVkVGMFRXcEZaMDFxVFRaT1JFazJUVlJzWmtObmNEaEpSVnB3WWtkVloyWkRRbFZsV0VKc1NVaDNaMVJIYkhWYVdFMW5aa05DVkdGWWNHeEpRMmhNVVdscloyWkRRbEZaV0ZKdlNVaDNTMlpETUhSTVV6QjBURmgzZEV4VE1IUk1VekU0VEZNd2RFeFRNSFJNVkhBNFRGTXdkRXhUTUhSTVV6QjBUMjUzZEV4VE1IUk1VekU0UTJkd1psWkhPVEJaVjNkblVtMXNjMXBZVFRaSlJFRm5aa05DVVdGSFJucGFWRzluVmxjMWNtSnRPVE5pYVVJNFNVWldkMlJIYkhSYVZHOW5WR2s1UWxoM1BUMGlMQW9nSUNBZ0lDQWdJQ0p6ZFcxdFlYSjVJam9nSWpoTUlId2dZMjlrWldkbGJsOXBibVJsZUM1dFpDQjhJQzV0WkNCOElEQXVNaUJMUWlJS0lDQWdJQ0FnZlN3S0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNKd1lYUm9Jam9nSW1SdlkzTmNYSEJ5YjJwbFkzUmZaR0YwWVM1cWMyOXVJaXdLSUNBZ0lDQWdJQ0FpZEhsd1pTSTZJQ0l1YW5OdmJpSXNDaUFnSUNBZ0lDQWdJbk5wZW1WZmEySWlPaUF3TGpRc0NpQWdJQ0FnSUNBZ0lteHBibVZ6SWpvZ01UZ3NDaUFnSUNBZ0lDQWdJbU52Ym5SbGJuUWlPaUFpWlhkdlowbERTbmRqYlRseFdsZE9NRWxxYjJkbGQyOW5TVU5CWjBsdE5XaGlWMVZwVDJsQmFWRXpTalZqU0ZKMlNVVmFNV1JJVm5sYVdFMW5Va2RHZW1GSFNuWlpXRXByU1dsM1MwbERRV2RKUTBveVdsaEtlbUZYT1hWSmFtOW5TVzVaZUV4cVFXbE1RVzluU1VOQlowbHVRbTlaV0U1c1NXcHZaMGxzVm5WaE1qVjJaREkwYVV4QmIyZEpRMEZuU1c1V2QyUkhiSFJhVmpsM1dUTlJhVTlwUVdsVWFUbENTV2wzUzBsRFFXZEpRMHBwV1ZkT2NscFhOV3RZTTA0d1dWaFNNV041U1RaSlEwb3hZbTEwZFdJelpIVkphWGRMU1VOQlowbERTbk5aV0U0d1dETk9OV0p0VFdsUGFVRnBUV3BCZVU1VE1IaE5RekI1VFZOQmVVMTZiekJOYW05NFQxTkpTMGxEUWpsTVFXOW5TVU5LYW1JeVVteEphbTluWlhkdlowbERRV2RKYlZwd1lrZFdla2xxYjJkWE1UQkxTVU5DT1V4QmIyZEpRMHAwV2xoU2FGcEhSakJaVTBrMlNVaHpTMGxEUVdkSlEwb3hZMGRTYUdSSFZtdEphbTluU1dwSmQwMXFWWFJOVkVGMFRXcEZaMDFxVFRaT1JFazJUVlJyYVV4QmIyZEpRMEZuU1c1U2RtUkhSbk5ZTWxwd1lrZFdla2xxYjJkTlEzZExTVU5CWjBsRFNuUlpXR2htV20xc2MxcFdPWHBoV0hCc1dESjBhVWxxYjJkUFZHTXlUR3BaUzBsRFFqbERiakE5SWl3S0lDQWdJQ0FnSUNBaWMzVnRiV0Z5ZVNJNklDSXhPRXdnZkNCd2NtOXFaV04wWDJSaGRHRXVhbk52YmlCOElDNXFjMjl1SUh3Z01DNDBJRXRDSWdvZ0lDQWdJQ0I5Q2lBZ0lDQmRDaUFnZlN3S0lDQWliV1YwWVdSaGRHRWlPaUI3Q2lBZ0lDQWlkWEJrWVhSbFpDSTZJQ0l5TURJMUxURXdMVEl4SURJek9qUTBPakE0SWl3S0lDQWdJQ0owYjNSaGJGOW1hV3hsY3lJNklESXNDaUFnSUNBaWJXRjRYMlpwYkdWZmMybDZaVjlyWWlJNklEazNOaTQyQ2lBZ2ZRcDkiLAogICAgICAgICJzdW1tYXJ5IjogIjM1TCB8IHByb2plY3RfZGF0YS5qc29uIHwgLmpzb24gfCAxLjUgS0IiCiAgICAgIH0KICAgIF0KICB9LAogICJtZXRhZGF0YSI6IHsKICAgICJ1cGRhdGVkIjogIjIwMjUtMTAtMjEgMjM6NDY6NDgiLAogICAgInRvdGFsX2ZpbGVzIjogMiwKICAgICJtYXhfZmlsZV9zaXplX2tiIjogOTc2LjYKICB9Cn0=",
        "summary": "35L | project_data.json | .json | 3.3 KB"
      }
    ]
  },
  "metadata": {
    "updated": "2025-10-21 23:54:32",
    "total_files": 84,
    "max_file_size_kb": 976.6
  }
}