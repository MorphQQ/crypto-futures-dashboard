{
  "project": {
    "name": "Crypto Futures Dashboard",
    "progress": {
      "P2": "95%",
      "P3": "20%"
    }
  },
  "code": {
    "files": [
      {
        "path": "backend\\src\\futuresboard\\app.py",
        "type": ".py",
        "size_kb": 14.5,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvYXBwLnB5CmZyb20gX19mdXR1cmVfXyBpbXBvcnQgYW5ub3RhdGlvbnMKCmltcG9ydCBqc29uCmltcG9ydCBsb2dnaW5nCmltcG9ydCBwYXRobGliCmltcG9ydCBvcwppbXBvcnQgYXJncGFyc2UKaW1wb3J0IHRpbWUKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBsb2dnaW5nLmhhbmRsZXJzIGltcG9ydCBSb3RhdGluZ0ZpbGVIYW5kbGVyCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudgppbXBvcnQgc3lzCgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBMb2FkIGVudiBlYXJseQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KbG9hZF9kb3RlbnYoKQoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMgRm9yY2UgVVRGLTggZm9yIGNvbnNvbGUgKyBmaWxlIGxvZ2dpbmcgKFdpbmRvd3MgZml4KQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KaWYgc3lzLnN0ZG91dCBhbmQgaGFzYXR0cihzeXMuc3Rkb3V0LCAicmVjb25maWd1cmUiKToKICAgIHN5cy5zdGRvdXQucmVjb25maWd1cmUoZW5jb2Rpbmc9InV0Zi04IikKaWYgc3lzLnN0ZGVyciBhbmQgaGFzYXR0cihzeXMuc3RkZXJyLCAicmVjb25maWd1cmUiKToKICAgIHN5cy5zdGRlcnIucmVjb25maWd1cmUoZW5jb2Rpbmc9InV0Zi04IikKCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQojIFBhdGhzICYgY29uc3RhbnRzCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpSRVBPX1JPT1QgPSBwYXRobGliLlBhdGgoX19maWxlX18pLnJlc29sdmUoKS5wYXJlbnRzWzJdCkxPR19ESVIgPSAoUkVQT19ST09UIC8gImxvZ3MiKS5yZXNvbHZlKCkKTE9HX0RJUi5ta2RpcihwYXJlbnRzPVRydWUsIGV4aXN0X29rPVRydWUpCgpEQl9QQVRIID0gb3MuZ2V0ZW52KCJEQl9QQVRIIiwgc3RyKFJFUE9fUk9PVCAvICJiYWNrZW5kIiAvICJzcmMiIC8gImZ1dHVyZXNib2FyZCIgLyAiZnV0dXJlcy5kYiIpKQpDT05USU5VSVRZX0RPQ1MgPSBvcy5nZXRlbnYoIkNPTlRJTlVJVFlfRE9DUyIsIHN0cihSRVBPX1JPT1QgLyAiZG9jcyIgLyAiY29udGludWl0eV9zdGF0ZS5qc29uIikpClBIQVNFID0gb3MuZ2V0ZW52KCJQSEFTRSIsICJQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyIpCkFVVE9fU0NSQVBFX0lOVEVSVkFMID0gaW50KG9zLmdldGVudigiSU5URVJWQUwiLCBvcy5nZXRlbnYoIkFVVE9fU0NSQVBFX0lOVEVSVkFMIiwgIjMwIikpKQoKIyBFbnN1cmUgYmFja2VuZC9zcmMgaXMgaW1wb3J0YWJsZQpmcm9tIHN5cyBpbXBvcnQgcGF0aCBhcyBzeXNfcGF0aApzeXNfcGF0aC5hcHBlbmQoc3RyKHBhdGhsaWIuUGF0aChfX2ZpbGVfXykucGFyZW50LnBhcmVudCkpCgpmcm9tIGZsYXNrIGltcG9ydCBGbGFzaywgcmVkaXJlY3QsIHJlcXVlc3QsIGpzb25pZnkKZnJvbSBmbGFza19jb3JzIGltcG9ydCBDT1JTCmZyb20gZmxhc2tfc29ja2V0aW8gaW1wb3J0IFNvY2tldElPCgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBMb2dnaW5nIHNldHVwCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpsb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcigiZnV0dXJlc2JvYXJkIikKbG9nZ2VyLnNldExldmVsKGxvZ2dpbmcuSU5GTykKCmZpbGVfaGFuZGxlciA9IFJvdGF0aW5nRmlsZUhhbmRsZXIoCiAgICBzdHIoTE9HX0RJUiAvICJhcHAubG9nIiksCiAgICBtYXhCeXRlcz0xMCAqIDEwMjQgKiAxMDI0LAogICAgYmFja3VwQ291bnQ9MywKICAgIGVuY29kaW5nPSJ1dGYtOCIsICAjIGVuc3VyZSBVVEYtOAopCmZpbGVfaGFuZGxlci5zZXRGb3JtYXR0ZXIobG9nZ2luZy5Gb3JtYXR0ZXIoIiUoYXNjdGltZSlzICUobGV2ZWxuYW1lKXM6ICUobWVzc2FnZSlzIFtpbiAlKHBhdGhuYW1lKXM6JShsaW5lbm8pZF0iKSkKbG9nZ2VyLmFkZEhhbmRsZXIoZmlsZV9oYW5kbGVyKQoKY29uc29sZSA9IGxvZ2dpbmcuU3RyZWFtSGFuZGxlcihzeXMuc3Rkb3V0KQpjb25zb2xlLnNldEZvcm1hdHRlcihsb2dnaW5nLkZvcm1hdHRlcigiJShhc2N0aW1lKXMgJShsZXZlbG5hbWUpczogJShtZXNzYWdlKXMiKSkKY29uc29sZS5zZXRMZXZlbChsb2dnaW5nLklORk8pCmxvZ2dlci5hZGRIYW5kbGVyKGNvbnNvbGUpCgpzb2NrZXRpbzogU29ja2V0SU8gfCBOb25lID0gTm9uZSAgIyBleHBvcnRlZCBiZWxvdyBpZiBzdGFydGVkCgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBMb2NhbCBpbXBvcnRzCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpmcm9tIC4gaW1wb3J0IGRiIGFzIGRiX21vZApmcm9tIC5jb25maWcgaW1wb3J0IENvbmZpZwoKCmRlZiBzZXJpYWxpemVfbWV0cmljX3JvdyhtKToKICAgICIiIkNvbnZlcnRzIE9STSBNZXRyaWMgb2JqZWN0IG9yIHNxbGl0ZTMuUm93IHRvIHBsYWluIGRpY3QgZm9yIEpTT04gb3V0cHV0LiIiIgogICAgdHJ5OgogICAgICAgIGlmIGhhc2F0dHIobSwgIl9fZGljdF9fIik6CiAgICAgICAgICAgIGRhdGEgPSB7azogdiBmb3IgaywgdiBpbiBtLl9fZGljdF9fLml0ZW1zKCkgaWYgbm90IGsuc3RhcnRzd2l0aCgiXyIpfQogICAgICAgIGVsaWYgaXNpbnN0YW5jZShtLCBkaWN0KToKICAgICAgICAgICAgZGF0YSA9IG0KICAgICAgICBlbGlmIGhhc2F0dHIobSwgImtleXMiKToKICAgICAgICAgICAgZGF0YSA9IHtrOiBtW2tdIGZvciBrIGluIG0ua2V5cygpfQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiB7fQogICAgICAgIGlmICJ0aW1lc3RhbXAiIGluIGRhdGEgYW5kIGRhdGFbInRpbWVzdGFtcCJdIGlzIG5vdCBOb25lOgogICAgICAgICAgICBpZiBoYXNhdHRyKGRhdGFbInRpbWVzdGFtcCJdLCAiaXNvZm9ybWF0Iik6CiAgICAgICAgICAgICAgICBkYXRhWyJ0aW1lc3RhbXAiXSA9IGRhdGFbInRpbWVzdGFtcCJdLmlzb2Zvcm1hdCgpCiAgICAgICAgcmV0dXJuIGRhdGEKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIltXQVJOXSBzZXJpYWxpemVfbWV0cmljX3JvdyBmYWlsZWQ6IHtlfSIpCiAgICAgICAgcmV0dXJuIHt9CgoKZGVmIGNsZWFyX3RyYWlsaW5nKCk6CiAgICAjIHJlbW92ZSB0cmFpbGluZyBzbGFzaCBleGNlcHQgZm9yIHNvY2tldC5pbyBwYXRocwogICAgcnAgPSByZXF1ZXN0LnBhdGgKICAgIGlmIHJwICE9ICIvIiBhbmQgcnAuZW5kc3dpdGgoIi8iKSBhbmQgbm90IHJwLnN0YXJ0c3dpdGgoIi9zb2NrZXQuaW8iKToKICAgICAgICByZXR1cm4gcmVkaXJlY3QocnBbOi0xXSkKCgojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBJbml0IEZsYXNrIGFwcAojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KZGVmIGluaXRfYXBwKGNvbmZpZzogQ29uZmlnIHwgc3RyIHwgTm9uZSA9IE5vbmUpOgogICAgcHJpbnQoIltERUJVR10gaW5pdF9hcHAoKSBzdGFydCIpCiAgICBnbG9iYWwgc29ja2V0aW8KICAgIGFwcCA9IEZsYXNrKF9fbmFtZV9fLCBzdGF0aWNfZm9sZGVyPU5vbmUpCiAgICBwcmludCgiW0RFQlVHXSBGbGFzayBhcHAgY3JlYXRlZCIpCgogICAgIyBDb25maWcgbG9hZGluZwogICAgaWYgY29uZmlnIGlzIE5vbmU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBjb25maWcgPSBDb25maWcuZnJvbV9jb25maWdfZGlyKHBhdGhsaWIuUGF0aC5jd2QoKSAvICJjb25maWciKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgIGNvbmZpZyA9IE5vbmUKCiAgICBpZiBpc2luc3RhbmNlKGNvbmZpZywgc3RyKToKICAgICAgICB3aXRoIG9wZW4oY29uZmlnLCAiciIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgICAgIGFwcC5jb25maWcuZnJvbV9tYXBwaW5nKCoqanNvbi5sb2FkKGYpKQogICAgZWxpZiBoYXNhdHRyKGNvbmZpZywgInRvX2RpY3QiKToKICAgICAgICBhcHAuY29uZmlnLmZyb21fbWFwcGluZygqKmNvbmZpZy50b19kaWN0KCkpCiAgICBlbGlmIGNvbmZpZyBpcyBub3QgTm9uZToKICAgICAgICBhcHAuY29uZmlnLmZyb21fb2JqZWN0KGNvbmZpZykKICAgIGVsc2U6CiAgICAgICAgYXBwLmNvbmZpZ1sic3ltYm9scyJdID0gb3MuZ2V0ZW52KCJTWU1CT0xTIiwgIkJUQ1VTRFQsRVRIVVNEVCxTT0xVU0RUIikuc3BsaXQoIiwiKQogICAgICAgIGFwcC5jb25maWdbIkFQSV9CQVNFX1VSTCJdID0gb3MuZ2V0ZW52KCJBUElfQkFTRV9VUkwiLCAiaHR0cHM6Ly9mYXBpLmJpbmFuY2UuY29tIikKICAgICAgICBhcHAuY29uZmlnWyJURVNUX01PREUiXSA9IG9zLmdldGVudigiVEVTVF9NT0RFIiwgImZhbHNlIikubG93ZXIoKSA9PSAidHJ1ZSIKCiAgICAjIExvZ2dpbmcgaW50ZWdyYXRpb24KICAgIGFwcC5sb2dnZXIuaGFuZGxlcnMuY2xlYXIoKQogICAgYXBwLmxvZ2dlci5wcm9wYWdhdGUgPSBUcnVlCiAgICBhcHAubG9nZ2VyLnNldExldmVsKGxvZ2dpbmcuSU5GTykKICAgIGFwcC5sb2dnZXIuYWRkSGFuZGxlcihmaWxlX2hhbmRsZXIpCiAgICBhcHAubG9nZ2VyLmFkZEhhbmRsZXIoY29uc29sZSkKCiAgICAjIENPUlMgKGxvY2FsIG9ubHkpCiAgICBDT1JTKGFwcCwgb3JpZ2lucz1bImh0dHA6Ly9sb2NhbGhvc3Q6NTE3MyJdKQoKICAgICMgREIgaW5pdAogICAgZGJfbW9kLmluaXRfYXBwKGFwcCkKICAgIHByaW50KCJbREVCVUddIERCIGluaXRpYWxpemVkIikKCiAgICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgIyBSb3V0ZXMKICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBAYXBwLnJvdXRlKCIvaGVhbHRoIikKICAgIGRlZiBoZWFsdGgoKToKICAgICAgICBzdGF0ZSA9IHt9CiAgICAgICAgdHJ5OgogICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhDT05USU5VSVRZX0RPQ1MpOgogICAgICAgICAgICAgICAgd2l0aCBvcGVuKENPTlRJTlVJVFlfRE9DUywgInIiLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmOgogICAgICAgICAgICAgICAgICAgIHN0YXRlID0ganNvbi5sb2FkKGYpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBhcHAubG9nZ2VyLndhcm5pbmcoZiJGYWlsZWQgcmVhZGluZyBjb250aW51aXR5IHN0YXRlOiB7ZX0iKQogICAgICAgIHJlc3AgPSB7CiAgICAgICAgICAgICJzdGF0dXMiOiAiaGVhbHRoeSIsCiAgICAgICAgICAgICJ0aW1lc3RhbXAiOiBkYXRldGltZS51dGNub3coKS5pc29mb3JtYXQodGltZXNwZWM9InNlY29uZHMiKSwKICAgICAgICAgICAgInZlcnNpb24iOiAidjAuMy4zIiwKICAgICAgICAgICAgImNvbnRpbnVpdHkiOiB7CiAgICAgICAgICAgICAgICAicGhhc2UiOiBzdGF0ZS5nZXQoInBoYXNlIiwgUEhBU0UpLAogICAgICAgICAgICAgICAgInVwdGltZVBjdCI6IHN0YXRlLmdldCgidXB0aW1lUGN0IiwgMCksCiAgICAgICAgICAgICAgICAiYmFja2VuZCI6IHN0YXRlLmdldCgiYmFja2VuZCIsICJ1bmtub3duIiksCiAgICAgICAgICAgICAgICAibGFzdF9zeW5jIjogc3RhdGUuZ2V0KCJ0aW1lc3RhbXAiLCAiTi9BIiksCiAgICAgICAgICAgIH0sCiAgICAgICAgfQogICAgICAgIHJldHVybiBqc29uaWZ5KHJlc3ApCgogICAgIyBJbXBvcnQgbWV0cmljcyBibHVlcHJpbnQgbGF6aWx5CiAgICB0cnk6CiAgICAgICAgcHJpbnQoIltERUJVR10gSW1wb3J0aW5nIG1ldHJpY3MgYmx1ZXByaW50Li4uIikKICAgICAgICBmcm9tIC5tZXRyaWNzIGltcG9ydCBtZXRyaWNzX2JwLCBhZGRfbWV0cmljc19yb3V0ZSAgIyB0eXBlOiBpZ25vcmUKICAgICAgICBhZGRfbWV0cmljc19yb3V0ZShhcHApCiAgICAgICAgYXBwLnJlZ2lzdGVyX2JsdWVwcmludChtZXRyaWNzX2JwLCB1cmxfcHJlZml4PSIvYXBpIikKICAgICAgICBwcmludCgiW0RFQlVHXSBNZXRyaWNzIGJsdWVwcmludCByZWdpc3RlcmVkIHN1Y2Nlc3NmdWxseSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoIltFUlJPUl0gRmFpbGVkIHRvIHJlZ2lzdGVyIG1ldHJpY3MgYmx1ZXByaW50OiIsIGUpCiAgICAgICAgaW1wb3J0IHRyYWNlYmFjazsgdHJhY2ViYWNrLnByaW50X2V4YygpCiAgICAgICAgcmV0dXJuIE5vbmUKCiAgICAjIFNvY2tldElPIHNldHVwCiAgICBhc3luY19tb2RlID0gTm9uZQogICAgdHJ5OgogICAgICAgIGltcG9ydCBldmVudGxldAogICAgICAgIGFzeW5jX21vZGUgPSAiZXZlbnRsZXQiCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIHRyeToKICAgICAgICAgICAgaW1wb3J0IGdldmVudAogICAgICAgICAgICBhc3luY19tb2RlID0gImdldmVudCIKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICBhc3luY19tb2RlID0gInRocmVhZGluZyIKCiAgICBzb2NrZXRpbyA9IFNvY2tldElPKGFwcCwgY29yc19hbGxvd2VkX29yaWdpbnM9Imh0dHA6Ly9sb2NhbGhvc3Q6NTE3MyIsIGFzeW5jX21vZGU9YXN5bmNfbW9kZSwgbG9nZ2VyPUZhbHNlKQoKICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAjIEJhY2tncm91bmQgVGFza3MKICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBkaXNhYmxlX2F1dG8gPSBvcy5nZXRlbnYoIkRJU0FCTEVfQVVUT19TQ1JBUEUiLCAiZmFsc2UiKS5sb3dlcigpID09ICJ0cnVlIgogICAgaWYgbm90IGRpc2FibGVfYXV0bzoKICAgICAgICBmcm9tIC4gaW1wb3J0IHNjcmFwZXIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlmIHNvY2tldGlvIGFuZCBoYXNhdHRyKHNvY2tldGlvLCAic3RhcnRfYmFja2dyb3VuZF90YXNrIik6CiAgICAgICAgICAgICAgICBzb2NrZXRpby5zdGFydF9iYWNrZ3JvdW5kX3Rhc2soc2NyYXBlci5hdXRvX3NjcmFwZSwgYXBwKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgaW1wb3J0IHRocmVhZGluZwogICAgICAgICAgICAgICAgdGhyZWFkaW5nLlRocmVhZCh0YXJnZXQ9c2NyYXBlci5hdXRvX3NjcmFwZSwgYXJncz0oYXBwLCksIGRhZW1vbj1UcnVlKS5zdGFydCgpCiAgICAgICAgICAgIGFwcC5sb2dnZXIuaW5mbygiU3RhcnRlZCBzY3JhcGVyIGJhY2tncm91bmQgdGFzayIpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBhcHAubG9nZ2VyLndhcm5pbmcoZiJGYWlsZWQgdG8gc3RhcnQgc2NyYXBlciBiYWNrZ3JvdW5kIHRhc2s6IHtlfSIpCgogICAgIyBDb250aW51aXR5IHN5bmMgbG9vcAogICAgZGVmIGNvbnRpbnVpdHlfc3luY19sb29wKCk6CiAgICAgICAgZnJvbSAuZGIgaW1wb3J0IGdldF9sYXRlc3RfbWV0cmljcwogICAgICAgIHN0YXRlX2ZpbGUgPSBwYXRobGliLlBhdGgoQ09OVElOVUlUWV9ET0NTKQogICAgICAgIHN0YXRlX2ZpbGUucGFyZW50Lm1rZGlyKHBhcmVudHM9VHJ1ZSwgZXhpc3Rfb2s9VHJ1ZSkKICAgICAgICBsb2dfZmlsZSA9IHN0YXRlX2ZpbGUucGFyZW50IC8gImNvbnRpbnVpdHlfbG9nLmpzb24iCiAgICAgICAgc3RhcnRfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgdG90YWxfcnVudGltZSA9IGRvd250aW1lID0gMC4wCiAgICAgICAgaWYgc3RhdGVfZmlsZS5leGlzdHMoKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcCA9IGpzb24ubG9hZHMoc3RhdGVfZmlsZS5yZWFkX3RleHQoZW5jb2Rpbmc9InV0Zi04IikpCiAgICAgICAgICAgICAgICB0b3RhbF9ydW50aW1lID0gcC5nZXQoInRvdGFsX3J1bnRpbWUiLCAwLjApCiAgICAgICAgICAgICAgICBkb3dudGltZSA9IHAuZ2V0KCJkb3dudGltZSIsIDAuMCkKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgIHBhc3MKCiAgICAgICAgd2hpbGUgVHJ1ZToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgbm93ID0gZGF0ZXRpbWUudXRjbm93KCkKICAgICAgICAgICAgICAgIG5vd19zdHIgPSBub3cuaXNvZm9ybWF0KHRpbWVzcGVjPSJzZWNvbmRzIikKICAgICAgICAgICAgICAgIGVsYXBzZWQgPSB0aW1lLnRpbWUoKSAtIHN0YXJ0X3RpbWUKICAgICAgICAgICAgICAgIHRvdGFsX3J1bnRpbWUgKz0gZWxhcHNlZAogICAgICAgICAgICAgICAgZGJfb2sgPSBGYWxzZQogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIHJlY2VudCA9IGdldF9sYXRlc3RfbWV0cmljcyhsaW1pdD0xKQogICAgICAgICAgICAgICAgICAgIGRiX29rID0gbGVuKHJlY2VudCkgPiAwCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIHVwdGltZV9wY3QgPSBtYXgoMC4wLCBtaW4oMTAwLjAsICgodG90YWxfcnVudGltZSAtIGRvd250aW1lKSAvIHRvdGFsX3J1bnRpbWUpICogMTAwLjApKSBpZiB0b3RhbF9ydW50aW1lIGVsc2UgMAogICAgICAgICAgICAgICAgc3RhdGUgPSB7CiAgICAgICAgICAgICAgICAgICAgInRpbWVzdGFtcCI6IG5vd19zdHIsCiAgICAgICAgICAgICAgICAgICAgInBoYXNlIjogUEhBU0UsCiAgICAgICAgICAgICAgICAgICAgImJhY2tlbmQiOiAiaGVhbHRoeSIgaWYgZGJfb2sgZWxzZSAidW5oZWFsdGh5IiwKICAgICAgICAgICAgICAgICAgICAidXB0aW1lUGN0Ijogcm91bmQodXB0aW1lX3BjdCwgMiksCiAgICAgICAgICAgICAgICAgICAgInRvdGFsX3J1bnRpbWUiOiByb3VuZCh0b3RhbF9ydW50aW1lLCAyKSwKICAgICAgICAgICAgICAgICAgICAiZG93bnRpbWUiOiByb3VuZChkb3dudGltZSwgMiksCiAgICAgICAgICAgICAgICAgICAgInN0YXR1cyI6ICJhY3RpdmUiIGlmIGRiX29rIGVsc2UgImRlZ3JhZGVkIiwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHN0YXRlX2ZpbGUud3JpdGVfdGV4dChqc29uLmR1bXBzKHN0YXRlLCBpbmRlbnQ9MiksIGVuY29kaW5nPSJ1dGYtOCIpCiAgICAgICAgICAgICAgICBhcHAubG9nZ2VyLmluZm8oZiJbQ29udGludWl0eV0gU3luYyB1cGRhdGVkIGF0IHtub3dfc3RyfSBwaGFzZT17UEhBU0V9IHVwdGltZT17c3RhdGVbJ3VwdGltZVBjdCddfSUgYmFja2VuZD17c3RhdGVbJ2JhY2tlbmQnXX0iKQogICAgICAgICAgICAgICAgc3RhcnRfdGltZSA9IHRpbWUudGltZSgpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIGFwcC5sb2dnZXIud2FybmluZyhmIltDb250aW51aXR5XSBsb29wIGVycm9yOiB7ZX0iKQogICAgICAgICAgICB0aW1lLnNsZWVwKDMwMCkKCiAgICAjIFF1YW50IHN1bW1hcnkgZW1pdHRlcgogICAgZGVmIGVtaXRfcXVhbnRfc3VtbWFyeV9sb29wKCk6CiAgICAgICAgaW1wb3J0IHNxbGl0ZTMsIHRpbWUKICAgICAgICB3aGlsZSBUcnVlOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBjb25uID0gc3FsaXRlMy5jb25uZWN0KERCX1BBVEgpCiAgICAgICAgICAgICAgICBjdXIgPSBjb25uLmN1cnNvcigpCiAgICAgICAgICAgICAgICBjdXIuZXhlY3V0ZSgiIiIKICAgICAgICAgICAgICAgICAgICBTRUxFQ1Qgc3ltYm9sLCB0aW1lZnJhbWUsIG9pX3osIGxzX2RlbHRhX3BjdCwgaW1iYWxhbmNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5kaW5nLCBjb25mbHVlbmNlX3Njb3JlLCBiaWFzLCB1cGRhdGVkX2F0CiAgICAgICAgICAgICAgICAgICAgRlJPTSBxdWFudF9zdW1tYXJ5CiAgICAgICAgICAgICAgICAgICAgT1JERVIgQlkgdXBkYXRlZF9hdCBERVNDCiAgICAgICAgICAgICAgICAgICAgTElNSVQgNTAKICAgICAgICAgICAgICAgICIiIikKICAgICAgICAgICAgICAgIHJvd3MgPSBjdXIuZmV0Y2hhbGwoKQogICAgICAgICAgICAgICAgY29ubi5jbG9zZSgpCiAgICAgICAgICAgICAgICBpZiBub3Qgcm93czoKICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDMwKQogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICBrZXlzID0gWyJzeW1ib2wiLCAidGltZWZyYW1lIiwgIm9pX3oiLCAibHNfZGVsdGFfcGN0IiwgImltYmFsYW5jZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJmdW5kaW5nIiwgImNvbmZsdWVuY2Vfc2NvcmUiLCAiYmlhcyIsICJ1cGRhdGVkX2F0Il0KICAgICAgICAgICAgICAgIGRhdGEgPSBbZGljdCh6aXAoa2V5cywgcikpIGZvciByIGluIHJvd3NdCiAgICAgICAgICAgICAgICBpZiBzb2NrZXRpbzoKICAgICAgICAgICAgICAgICAgICBzb2NrZXRpby5lbWl0KCJxdWFudF91cGRhdGUiLCB7ImRhdGEiOiBkYXRhLCAidHMiOiBkYXRldGltZS51dGNub3coKS5pc29mb3JtYXQoKX0pCiAgICAgICAgICAgICAgICAgICAgYXBwLmxvZ2dlci5pbmZvKGYiW1F1YW50V1NdIEVtaXR0ZWQgcXVhbnRfdXBkYXRlICh7bGVuKGRhdGEpfSByb3dzKSIpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIGFwcC5sb2dnZXIud2FybmluZyhmIltRdWFudFdTXSBFbWl0IGxvb3AgZXJyb3I6IHtlfSIpCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMzApCgogICAgIyBTdGFydCBiYWNrZ3JvdW5kIGxvb3BzCiAgICB0cnk6CiAgICAgICAgaWYgc29ja2V0aW8gYW5kIGhhc2F0dHIoc29ja2V0aW8sICJzdGFydF9iYWNrZ3JvdW5kX3Rhc2siKToKICAgICAgICAgICAgc29ja2V0aW8uc3RhcnRfYmFja2dyb3VuZF90YXNrKGNvbnRpbnVpdHlfc3luY19sb29wKQogICAgICAgICAgICBzb2NrZXRpby5zdGFydF9iYWNrZ3JvdW5kX3Rhc2soZW1pdF9xdWFudF9zdW1tYXJ5X2xvb3ApCiAgICAgICAgZWxzZToKICAgICAgICAgICAgaW1wb3J0IHRocmVhZGluZwogICAgICAgICAgICB0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1jb250aW51aXR5X3N5bmNfbG9vcCwgZGFlbW9uPVRydWUpLnN0YXJ0KCkKICAgICAgICBhcHAubG9nZ2VyLmluZm8oIkNvbnRpbnVpdHkgKyBRdWFudFdTIGxvb3BzIHN0YXJ0ZWQiKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGFwcC5sb2dnZXIud2FybmluZyhmIkNvbnRpbnVpdHkgc3luYyBmYWlsZWQgdG8gc3RhcnQ6IHtlfSIpCgogICAgIyBNZXRyaWNzIEFQSQogICAgZnJvbSAuZGIgaW1wb3J0IGdldF9sYXRlc3RfbWV0cmljcywgZ2V0X21ldHJpY3NfYnlfc3ltYm9sCgogICAgQGFwcC5yb3V0ZSgnL2FwaS9tZXRyaWNzL2hpc3RvcnknKQogICAgZGVmIGFwaV9tZXRyaWNzX2hpc3RvcnkoKToKICAgICAgICBsaW1pdCA9IHJlcXVlc3QuYXJncy5nZXQoJ2xpbWl0JywgMTAwLCB0eXBlPWludCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJvd3MgPSBnZXRfbGF0ZXN0X21ldHJpY3MobGltaXQ9bGltaXQpCiAgICAgICAgICAgIHNlcmlhbGl6ZWQgPSBbc2VyaWFsaXplX21ldHJpY19yb3cobSkgZm9yIG0gaW4gcm93cyBpZiBtXQogICAgICAgICAgICByZXR1cm4ganNvbmlmeShzZXJpYWxpemVkKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgYXBwLmxvZ2dlci53YXJuaW5nKGYiW0FQSV0gL21ldHJpY3MvaGlzdG9yeSBmYWlsZWQ6IHtlfSIpCiAgICAgICAgICAgIGltcG9ydCB0cmFjZWJhY2s7IHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgICAgICByZXR1cm4ganNvbmlmeShbXSksIDUwMAoKICAgIEBhcHAucm91dGUoJy9hcGkvbWV0cmljcy88c3ltYm9sPi9oaXN0b3J5JykKICAgIGRlZiBhcGlfc3ltYm9sX2hpc3Rvcnkoc3ltYm9sKToKICAgICAgICBsaW1pdCA9IHJlcXVlc3QuYXJncy5nZXQoJ2xpbWl0JywgMTAwLCB0eXBlPWludCkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHJvd3MgPSBnZXRfbWV0cmljc19ieV9zeW1ib2woc3ltYm9sLCBsaW1pdD1saW1pdCkKICAgICAgICAgICAgc2VyaWFsaXplZCA9IFtzZXJpYWxpemVfbWV0cmljX3JvdyhtKSBmb3IgbSBpbiByb3dzIGlmIG1dCiAgICAgICAgICAgIHJldHVybiBqc29uaWZ5KHNlcmlhbGl6ZWQpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBhcHAubG9nZ2VyLndhcm5pbmcoZiJbQVBJXSAvbWV0cmljcy97c3ltYm9sfS9oaXN0b3J5IGZhaWxlZDoge2V9IikKICAgICAgICAgICAgaW1wb3J0IHRyYWNlYmFjazsgdHJhY2ViYWNrLnByaW50X2V4YygpCiAgICAgICAgICAgIHJldHVybiBqc29uaWZ5KFtdKSwgNTAwCgogICAgIyBRdWFudCBBUEkKICAgIGZyb20gLnF1YW50X2VuZ2luZSBpbXBvcnQgY29tcHV0ZV9xdWFudF9tZXRyaWNzCiAgICBpbXBvcnQgc3FsaXRlMwoKICAgIEBhcHAucm91dGUoIi9hcGkvcXVhbnQvc3VtbWFyeSIpCiAgICBkZWYgYXBpX3F1YW50X3N1bW1hcnkoKToKICAgICAgICBsaW1pdCA9IHJlcXVlc3QuYXJncy5nZXQoImxpbWl0IiwgMTAwLCB0eXBlPWludCkKICAgICAgICBjb25uID0gc3FsaXRlMy5jb25uZWN0KERCX1BBVEgpCiAgICAgICAgY3VyID0gY29ubi5jdXJzb3IoKQogICAgICAgIGN1ci5leGVjdXRlKCIiIgogICAgICAgICAgICBTRUxFQ1Qgc3ltYm9sLCB0aW1lZnJhbWUsIG9pX3osIGxzX2RlbHRhX3BjdCwgaW1iYWxhbmNlLAogICAgICAgICAgICAgICAgICAgZnVuZGluZywgY29uZmx1ZW5jZV9zY29yZSwgYmlhcywgdXBkYXRlZF9hdAogICAgICAgICAgICBGUk9NIHF1YW50X3N1bW1hcnkKICAgICAgICAgICAgT1JERVIgQlkgdXBkYXRlZF9hdCBERVNDCiAgICAgICAgICAgIExJTUlUID8KICAgICAgICAiIiIsIChsaW1pdCwpKQogICAgICAgIHJvd3MgPSBjdXIuZmV0Y2hhbGwoKQogICAgICAgIGNvbm4uY2xvc2UoKQogICAgICAgIGtleXMgPSBbInN5bWJvbCIsICJ0aW1lZnJhbWUiLCAib2lfeiIsICJsc19kZWx0YV9wY3QiLCAiaW1iYWxhbmNlIiwKICAgICAgICAgICAgICAgICJmdW5kaW5nIiwgImNvbmZsdWVuY2Vfc2NvcmUiLCAiYmlhcyIsICJ1cGRhdGVkX2F0Il0KICAgICAgICBpZiBub3Qgcm93czoKICAgICAgICAgICAgZGF0YSA9IGNvbXB1dGVfcXVhbnRfbWV0cmljcyhsaW1pdD1saW1pdCkKICAgICAgICAgICAgcmV0dXJuIGpzb25pZnkoeyJzdGF0dXMiOiAiY29tcHV0ZWQiLCAiZGF0YSI6IGRhdGF9KQogICAgICAgIGRhdGEgPSBbZGljdCh6aXAoa2V5cywgcikpIGZvciByIGluIHJvd3NdCiAgICAgICAgcmV0dXJuIGpzb25pZnkoeyJzdGF0dXMiOiAib2siLCAiZGF0YSI6IGRhdGF9KQoKICAgIHByaW50KCJbREVCVUddIGluaXRfYXBwKCkgcmV0dXJuaW5nIGFwcCIpCiAgICByZXR1cm4gYXBwCgoKZGVmIG1haW4oKToKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKGRlc2NyaXB0aW9uPSJDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQgYmFja2VuZCIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLXBvcnQiLCB0eXBlPWludCwgZGVmYXVsdD01MDAwKQogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKCiAgICBhcHAgPSBpbml0X2FwcCgpCiAgICBpZiBhcHAgaXMgTm9uZToKICAgICAgICBwcmludCgiW0ZBVEFMXSBpbml0X2FwcCgpIHJldHVybmVkIE5vbmUg4oCTIGNoZWNrIGltcG9ydHMgb3IgYmx1ZXByaW50IHJlZ2lzdHJhdGlvbi4iKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgZ2xvYmFsIHNvY2tldGlvCiAgICBpZiBzb2NrZXRpbyBpcyBOb25lOgogICAgICAgIHJhaXNlIFJ1bnRpbWVFcnJvcigiU29ja2V0SU8gbm90IGluaXRpYWxpemVkIChjaGVjayBmb3IgaW1wb3J0IGZhaWx1cmUpLiIpCgogICAgcHJpbnQoZiJTdGFydGluZyBzZXJ2ZXIgb24gMC4wLjAuMDp7YXJncy5wb3J0fSAoYXN5bmNfbW9kZT17c29ja2V0aW8uYXN5bmNfbW9kZX0pIikKCiAgICBzb2NrZXRpby5ydW4oCiAgICAgICAgYXBwLAogICAgICAgIGhvc3Q9IjAuMC4wLjAiLAogICAgICAgIHBvcnQ9YXJncy5wb3J0LAogICAgICAgIGRlYnVnPUZhbHNlLAogICAgICAgIGFsbG93X3Vuc2FmZV93ZXJremV1Zz1UcnVlLAogICAgKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCkK",
        "summary": "382L | app.py | .py | 14.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\binance_ws_client.py",
        "type": ".py",
        "size_kb": 1.9,
        "content": "aW1wb3J0IGFzeW5jaW8KaW1wb3J0IGpzb24KaW1wb3J0IGFpb2h0dHAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKCkJJTkFOQ0VfV1NfQkFTRSA9ICJ3c3M6Ly9mc3RyZWFtLmJpbmFuY2UuY29tL3N0cmVhbT9zdHJlYW1zPSIgICMgRm9yIFVTRFMtTSBmdXR1cmVzCgphc3luYyBkZWYgY29ubmVjdF9hbmRfbGlzdGVuKHNlc3Npb246IGFpb2h0dHAuQ2xpZW50U2Vzc2lvbiwgdXJsOiBzdHIsIGhhbmRsZV9tc2cpOgogICAgdHJ5OgogICAgICAgIGFzeW5jIHdpdGggc2Vzc2lvbi53c19jb25uZWN0KHVybCwgaGVhcnRiZWF0PTE1MCkgYXMgd3M6ICAjIEFkanVzdGVkIGhlYXJ0YmVhdAogICAgICAgICAgICBwcmludCgiQ29ubmVjdGVkIHRvIiwgdXJsKQogICAgICAgICAgICBhc3luYyBmb3IgbXNnIGluIHdzOgogICAgICAgICAgICAgICAgaWYgbXNnLnR5cGUgPT0gYWlvaHR0cC5XU01zZ1R5cGUuVEVYVDoKICAgICAgICAgICAgICAgICAgICBkYXRhID0ganNvbi5sb2Fkcyhtc2cuZGF0YSkKICAgICAgICAgICAgICAgICAgICBhd2FpdCBoYW5kbGVfbXNnKGRhdGEpCiAgICAgICAgICAgICAgICBlbGlmIG1zZy50eXBlID09IGFpb2h0dHAuV1NNc2dUeXBlLlBJTkc6CiAgICAgICAgICAgICAgICAgICAgYXdhaXQgd3MucG9uZygpCiAgICAgICAgICAgICAgICBlbGlmIG1zZy50eXBlID09IGFpb2h0dHAuV1NNc2dUeXBlLkVSUk9SOgogICAgICAgICAgICAgICAgICAgIHByaW50KCJXUyBFcnJvcjoiLCBtc2cpCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgIGV4Y2VwdCBhaW9odHRwLkNsaWVudEVycm9yIGFzIGU6CiAgICAgICAgcHJpbnQoIkNvbm5lY3Rpb24gZXJyb3I6IiwgZSkKICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDUpICAjIFNpbXBsZSBiYWNrb2ZmIGFsdGVybmF0aXZlCgphc3luYyBkZWYgYnVpbGRfY29tYmluZWRfc3RyZWFtKHBhaXJfc3RyZWFtczogTGlzdFtzdHJdKSAtPiBzdHI6CiAgICByZXR1cm4gQklOQU5DRV9XU19CQVNFICsgIi8iLmpvaW4ocGFpcl9zdHJlYW1zKQoKYXN5bmMgZGVmIGhhbmRsZV9tZXNzYWdlKGRhdGEpOgogICAgIyBFeGFtcGxlOiBFeHRyYWN0IG1hcmtQcmljZSwgT0kgaWYgc3Vic2NyaWJlZAogICAgc3RyZWFtID0gZGF0YVsic3RyZWFtIl0KICAgIGlmICJtYXJrUHJpY2UiIGluIHN0cmVhbToKICAgICAgICBwcmludCgiTWFyayBQcmljZSBVcGRhdGU6IiwgZGF0YVsiZGF0YSJdWyJwIl0pICAjIFByaWNlCiAgICAjIFB1c2ggdG8gcXVldWUvREIgaGVyZQoKYXN5bmMgZGVmIHN0YXJ0X3N0cmVhbV93b3JrZXIocGFpcnM6IExpc3Rbc3RyXSk6CiAgICBzdHJlYW1zID0gW2Yie3AubG93ZXIoKX1AbWFya1ByaWNlQDFzIiBmb3IgcCBpbiBwYWlyc10gICMgMXMgdXBkYXRlcwogICAgc3RyZWFtcyArPSBbZiJ7cC5sb3dlcigpfUBvcGVuSW50ZXJlc3RAMWgiIGZvciBwIGluIHBhaXJzXSAgIyBPSSBob3VybHkKICAgIHVybCA9IGF3YWl0IGJ1aWxkX2NvbWJpbmVkX3N0cmVhbShzdHJlYW1zKQogICAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzaW9uOgogICAgICAgIHdoaWxlIFRydWU6ICAjIFJlY29ubmVjdCBsb29wCiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3RfYW5kX2xpc3RlbihzZXNzaW9uLCB1cmwsIGhhbmRsZV9tZXNzYWdlKQogICAgICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDUpICAjIEJhY2tvZmYKCiMgRXhhbXBsZSBydW4gKGluIGZ1dHVyZXNib2FyZDogY2FsbCBpbiB0aHJlYWQpCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBwYWlycyA9IFsiQlRDVVNEVCIsICJFVEhVU0RUIiwgIlNPTFVTRFQiXQogICAgYXN5bmNpby5ydW4oc3RhcnRfc3RyZWFtX3dvcmtlcihwYWlycykp",
        "summary": "47L | binance_ws_client.py | .py | 1.9 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\blueprint.py",
        "type": ".py",
        "size_kb": 50.2,
        "content": "",
        "summary": "1426L | blueprint.py | .py | 50.2 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\cli.py",
        "type": ".py",
        "size_kb": 3.5,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBsb2dnaW5nCmltcG9ydCBwYXRobGliCmltcG9ydCBzeXMKaW1wb3J0IG9zICAjIEZvciBzdHIoKSBjb21wYXQgaWYgbmVlZGVkCmltcG9ydCB0cmFjZWJhY2sgICMgRm9yIGVycm9yIHByaW50CgppbXBvcnQgZnV0dXJlc2JvYXJkLmFwcAppbXBvcnQgZnV0dXJlc2JvYXJkLnNjcmFwZXIKZnJvbSBmdXR1cmVzYm9hcmQgaW1wb3J0IF9fdmVyc2lvbl9fICAjIHR5cGU6IGlnbm9yZVthdHRyLWRlZmluZWRdCmZyb20gZnV0dXJlc2JvYXJkLmNvbmZpZyBpbXBvcnQgQ29uZmlnCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudiAgIyBFeHBsaWNpdCAuZW52IGxvYWQKCmxvZyA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKCmRlZiBtYWluKCk6CiAgICBwcmludCgiQ0xJIExvYWRlZDogU3RhcnRpbmcgbWFpbigpIikgICMgRGVidWc6IENvbmZpcm1zIGVudHJ5CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihwcm9nPSJmdXR1cmVzYm9hcmQiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS12ZXJzaW9uIiwgYWN0aW9uPSJ2ZXJzaW9uIiwgdmVyc2lvbj1mIiUocHJvZylzIHtfX3ZlcnNpb25fX30iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLWMiLAogICAgICAgICItLWNvbmZpZy1kaXIiLAogICAgICAgIHR5cGU9cGF0aGxpYi5QYXRoLAogICAgICAgIGRlZmF1bHQ9Tm9uZSwKICAgICAgICBoZWxwPSJQYXRoIHRvIGNvbmZpZ3VyYXRpb24gZGlyZWN0b3J5LiBEZWZhdWx0cyB0byB0aGUgYGNvbmZpZy9gIHN1Yi1kaXJlY3Rvcnkgb24gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IiwKICAgICkKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoCiAgICAgICAgIi0tc2NyYXBlLW9ubHkiLCBkZWZhdWx0PUZhbHNlLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJSdW4gb25seSB0aGUgc2NyYXBlciBjb2RlIgogICAgKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1kaXNhYmxlLWF1dG8tc2NyYXBlciIsCiAgICAgICAgZGVmYXVsdD1GYWxzZSwKICAgICAgICBhY3Rpb249InN0b3JlX3RydWUiLAogICAgICAgIGhlbHA9IkRpc2FibGUgdGhlIHJvdXRpbmVzIHdoaWNoIHNjcmFwZSB3aGlsZSB0aGUgd2Vic2VydmljZSBpcyBydW5uaW5nIiwKICAgICkKICAgIHNlcnZlcl9zZXR0aW5ncyA9IHBhcnNlci5hZGRfYXJndW1lbnRfZ3JvdXAoIlNlcnZlciBTZXR0aW5ncyIpCiAgICBzZXJ2ZXJfc2V0dGluZ3MuYWRkX2FyZ3VtZW50KAogICAgICAgICItLWhvc3QiLAogICAgICAgIGRlZmF1bHQ9JzAuMC4wLjAnLAogICAgICAgIGhlbHA9IlNlcnZlciBob3N0LiBEZWZhdWx0OiAwLjAuMC4wIiwKICAgICAgICB0eXBlPXN0ciwgICMgU3RyIGZvciBhcmdwYXJzZSAodjEgY29tcGF0KQogICAgKQogICAgc2VydmVyX3NldHRpbmdzLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1wb3J0IiwgdHlwZT1pbnQsIGRlZmF1bHQ9Tm9uZSwgaGVscD0iU2VydmVyIHBvcnQuIERlZmF1bHQ6IDUwMDAiCiAgICApCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgIHByaW50KGYiQXJncyBwYXJzZWQ6IGNvbmZpZ19kaXI9e2FyZ3MuY29uZmlnX2Rpcn0sIHBvcnQ9e2FyZ3MucG9ydH0sIHNjcmFwZV9vbmx5PXthcmdzLnNjcmFwZV9vbmx5fSIpICAjIERlYnVnOiBBcmdwYXJzZSBPSz8KCiAgICAjIERlZmF1bHQgY29uZmlnX2RpciB0byByb290L2NvbmZpZyAoYmFja2VuZC8gLT4gLi4vY29uZmlnIGZvciBqc29uL2RiKQogICAgaWYgYXJncy5jb25maWdfZGlyIGlzIE5vbmU6CiAgICAgICAgYXJncy5jb25maWdfZGlyID0gcGF0aGxpYi5QYXRoLmN3ZCgpLnBhcmVudCAvICJjb25maWciCiAgICBlbHNlOgogICAgICAgIGFyZ3MuY29uZmlnX2RpciA9IGFyZ3MuY29uZmlnX2Rpci5yZXNvbHZlKCkKCiAgICBwcmludChmIlJlc29sdmVkIGNvbmZpZ19kaXI6IHthcmdzLmNvbmZpZ19kaXJ9IChleGlzdHM/IHthcmdzLmNvbmZpZ19kaXIuZXhpc3RzKCl9KSIpICAjIERlYnVnOiBQYXRoIGNoZWNrCgogICAgIyAuZW52IGxvYWQgZnJvbSBiYWNrZW5kLyAoY3dkPWJhY2tlbmQsIHNlbGYpCiAgICBiYWNrZW5kX2RpciA9IHBhdGhsaWIuUGF0aC5jd2QoKQogICAgZG90ZW52X3BhdGggPSBiYWNrZW5kX2RpciAvICIuZW52IgogICAgbG9hZF9kb3RlbnYoZG90ZW52X3BhdGg9c3RyKGRvdGVudl9wYXRoKSkKICAgICMgRGVidWcgcHJpbnQ6IENvbmZpcm0gbG9hZCBiZWZvcmUgQ29uZmlnCiAgICBwcmludChmIkRlYnVnOiBMb2FkZWQgQVBJX0tFWSBmcm9tIC5lbnY6IHtvcy5nZXRlbnYoJ0FQSV9LRVknKVs6MTBdICsgJy4uLicgaWYgb3MuZ2V0ZW52KCdBUElfS0VZJykgZWxzZSAnTUlTU0lORyd9IikKICAgIHByaW50KGYiRGVidWc6IC5lbnYgcGF0aCByZXNvbHZlZDoge2RvdGVudl9wYXRoLnJlc29sdmUoKX0gKGV4aXN0cz8ge2RvdGVudl9wYXRoLmV4aXN0cygpfSkiKQoKICAgIHByaW50KCJQcmUtQ29uZmlnOiBBYm91dCB0byBjYWxsIGZyb21fY29uZmlnX2Rpci4uLiIpICAjIERlYnVnOiBCZWZvcmUgY2FsbAogICAgdHJ5OgogICAgICAgIGNvbmZpZyA9IENvbmZpZy5mcm9tX2NvbmZpZ19kaXIoYXJncy5jb25maWdfZGlyKQogICAgICAgIHByaW50KCJQb3N0LUNvbmZpZzogQ29uZmlnIGxvYWRlZCBPSyEiKSAgIyBJZiByZWFjaGVzLCB2YWxpZGF0aW9uIHBhc3NlZAogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiQ29uZmlnIEVycm9yOiB7ZX0iKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgIHN5cy5leGl0KDEpCiAgICBpZiBub3QgYXJncy5ob3N0OgogICAgICAgIGFyZ3MuaG9zdCA9IGNvbmZpZy5IT1NUCiAgICBpZiBub3QgYXJncy5wb3J0OgogICAgICAgIGFyZ3MucG9ydCA9IGNvbmZpZy5QT1JUCgogICAgIyBSdW4gdGhlIGFwcGxpY2F0aW9uCiAgICB0cnk6CiAgICAgICAgYXBwID0gZnV0dXJlc2JvYXJkLmFwcC5pbml0X2FwcChjb25maWcpCiAgICAgICAgcHJpbnQoIkluaXQgQXBwIE9LISIpICAjIENvbmZpcm1zIGluaXRfYXBwIChEQi9ibHVlcHJpbnQvc2NyYXBlciBzZXR1cCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIkluaXQgQXBwIEVycm9yOiB7ZX0iKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgaWYgYXJncy5zY3JhcGVfb25seToKICAgICAgICB3aXRoIGFwcC5hcHBfY29udGV4dCgpOgogICAgICAgICAgICBmdXR1cmVzYm9hcmQuc2NyYXBlci5zY3JhcGUoKQogICAgICAgIHN5cy5leGl0KDApCgogICAgYXBwLnJ1bihob3N0PWFyZ3MuaG9zdCwgcG9ydD1hcmdzLnBvcnQpICAjIERpcmVjdCBzdHIgaG9zdAoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBtYWluKCk=",
        "summary": "100L | cli.py | .py | 3.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\config.py",
        "type": ".py",
        "size_kb": 6.7,
        "content": "",
        "summary": "177L | config.py | .py | 6.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\db.py",
        "type": ".py",
        "size_kb": 18.8,
        "content": "",
        "summary": "520L | db.py | .py | 18.8 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\metrics.py",
        "type": ".py",
        "size_kb": 8.6,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvbWV0cmljcy5weQpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgppbXBvcnQgb3MKaW1wb3J0IGFzeW5jaW8KaW1wb3J0IHJhbmRvbQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdApmcm9tIGRvdGVudiBpbXBvcnQgbG9hZF9kb3RlbnYKCmxvYWRfZG90ZW52KCkKCkRFVl9NT0RFID0gb3MuZ2V0ZW52KCJERVZfTU9ERSIsICJmYWxzZSIpLmxvd2VyKCkgPT0gInRydWUiCkRCX1BBVEggPSBvcy5nZXRlbnYoIkRCX1BBVEgiLCAiYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2Z1dHVyZXMuZGIiKQpMT0dfTEVWRUwgPSBvcy5nZXRlbnYoIkxPR19MRVZFTCIsICJJTkZPIikKCmltcG9ydCBjY3h0LmFzeW5jX3N1cHBvcnQgYXMgY2N4dF9hc3luYyAgIyB0eXBlOiBpZ25vcmUKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKCmZyb20gZmxhc2sgaW1wb3J0IEJsdWVwcmludCwgcmVxdWVzdCwganNvbmlmeSwgY3VycmVudF9hcHAKZnJvbSAuZGIgaW1wb3J0IHNhdmVfbWV0cmljc192MyBhcyBzYXZlX21ldHJpY3MsIGdldF9sYXRlc3RfbWV0cmljcywgZ2V0X21ldHJpY3NfYnlfc3ltYm9sCgoKbWV0cmljc19icCA9IEJsdWVwcmludCgibWV0cmljcyIsIF9fbmFtZV9fLCB1cmxfcHJlZml4PSIvYXBpIikKCiMgY29uY3VycmVuY3kgZ3VhcmQKc2VtYXBob3JlID0gYXN5bmNpby5TZW1hcGhvcmUoOCkKCmRlZiBjYWxjX3JzaShjbG9zZXMsIHBlcmlvZD0xNCk6CiAgICBhcnIgPSBucC5hc2FycmF5KGNsb3NlcywgZHR5cGU9ZmxvYXQpCiAgICBpZiBhcnIuc2l6ZSA8IHBlcmlvZCArIDE6CiAgICAgICAgcmV0dXJuIDUwLjAKICAgIGRlbHRhcyA9IG5wLmRpZmYoYXJyKQogICAgZ2FpbnMgPSBucC53aGVyZShkZWx0YXMgPiAwLCBkZWx0YXMsIDAuMCkKICAgIGxvc3NlcyA9IG5wLndoZXJlKGRlbHRhcyA8IDAsIC1kZWx0YXMsIDAuMCkKICAgIGF2Z19nYWluID0gZ2FpbnNbOnBlcmlvZF0ubWVhbigpCiAgICBhdmdfbG9zcyA9IGxvc3Nlc1s6cGVyaW9kXS5tZWFuKCkKICAgIGlmIGF2Z19sb3NzID09IDA6CiAgICAgICAgcmV0dXJuIDEwMC4wIGlmIGF2Z19nYWluID4gMCBlbHNlIDUwLjAKICAgIHJzID0gYXZnX2dhaW4gLyBhdmdfbG9zcwogICAgcnNpID0gMTAwIC0gKDEwMCAvICgxICsgcnMpKQogICAgcmV0dXJuIGZsb2F0KG5wLnJvdW5kKHJzaSwgMikpCgpAbWV0cmljc19icC5yb3V0ZSgiL21ldHJpY3MiKQpkZWYgYXBpX21ldHJpY3MoKToKICAgIHRmID0gcmVxdWVzdC5hcmdzLmdldCgidGYiLCAiNW0iKQogICAgZXhjaCA9IHJlcXVlc3QuYXJncy5nZXQoImV4Y2giLCAiYmluYW5jZSIpCiAgICBsaW1pdCA9IHJlcXVlc3QuYXJncy5nZXQoImxpbWl0IikKICAgIHRyeToKICAgICAgICBsaW1pdCA9IE5vbmUgaWYgbGltaXQgaXMgTm9uZSBlbHNlIGludChsaW1pdCkKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgbGltaXQgPSAyMAogICAgb2Zmc2V0ID0gaW50KHJlcXVlc3QuYXJncy5nZXQoIm9mZnNldCIsIDApKQogICAgbWV0cmljcyA9IGFzeW5jaW8ucnVuKGdldF9hbGxfbWV0cmljcyh0Zj10ZiwgZXhjaD1leGNoLCBsaW1pdD1saW1pdCwgb2Zmc2V0PW9mZnNldCkpCiAgICB0cnk6CiAgICAgICAgc2F2ZV9tZXRyaWNzKG1ldHJpY3MsIHRpbWVmcmFtZT10ZikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjdXJyZW50X2FwcC5sb2dnZXIud2FybmluZyhmInNhdmVfbWV0cmljcyBmYWlsZWQgaW4gYXBpX21ldHJpY3M6IHtlfSIpCiAgICBlbnJpY2hlZCA9IFtdCiAgICAjIEVucmljaCB3aXRoIGxhc3Qgcm9sbGluZyB2YWx1ZXMgaWYgREIgYWNjZXNzaWJsZQogICAgZm9yIG0gaW4gbWV0cmljczoKICAgICAgICBpZiAiZXJyb3IiIGluIG06CiAgICAgICAgICAgIGVucmljaGVkLmFwcGVuZChtKQogICAgICAgICAgICBjb250aW51ZQogICAgICAgICMgdHJ5IHRvIGZldGNoIGxhc3Qgc2F2ZWQgdG8gZmlsbCBkZWx0YXMgaWYgcHJlc2VudAogICAgICAgIHRyeToKICAgICAgICAgICAgbGFzdCA9IGdldF9sYXRlc3RfbWV0cmljcyhsaW1pdD0xLCBzeW1ib2w9bVsic3ltYm9sIl0sIHRmPXRmKQogICAgICAgICAgICBpZiBsYXN0OgogICAgICAgICAgICAgICAgcHJldiA9IGxhc3RbMF0KICAgICAgICAgICAgICAgIG1bIm9pX2RlbHRhX3BjdCJdID0gZ2V0YXR0cihwcmV2LCAib2lfZGVsdGFfcGN0IiwgMC4wKSBvciAwLjAKICAgICAgICAgICAgICAgIG1bImxzX2RlbHRhX3BjdCJdID0gZ2V0YXR0cihwcmV2LCAibHNfZGVsdGFfcGN0IiwgMC4wKSBvciAwLjAKICAgICAgICAgICAgICAgIG1bInpfbHMiXSA9IGdldGF0dHIocHJldiwgInpfbHMiLCAwLjApIG9yIDAuMAogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgbVsib2lfZGVsdGFfcGN0Il0gPSAwLjAKICAgICAgICAgICAgICAgIG1bImxzX2RlbHRhX3BjdCJdID0gMC4wCiAgICAgICAgICAgICAgICBtWyJ6X2xzIl0gPSAwLjAKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICBtWyJvaV9kZWx0YV9wY3QiXSA9IDAuMAogICAgICAgICAgICBtWyJsc19kZWx0YV9wY3QiXSA9IDAuMAogICAgICAgICAgICBtWyJ6X2xzIl0gPSAwLjAKICAgICAgICBlbnJpY2hlZC5hcHBlbmQobSkKCiAgICB0b3RhbF9jYW5kaWRhdGVzID0gbGVuKGVucmljaGVkKQogICAgcmVzcG9uc2UgPSBqc29uaWZ5KGVucmljaGVkKQogICAgcmVzcG9uc2UuaGVhZGVyc1siQ29udGVudC1SYW5nZSJdID0gZiJ7b2Zmc2V0fS17b2Zmc2V0ICsgbWF4KDAsIHRvdGFsX2NhbmRpZGF0ZXMgLSAxKX0ve3RvdGFsX2NhbmRpZGF0ZXN9IgogICAgcmVzcG9uc2UuaGVhZGVyc1siWC1Db250aW51aXR5LVBoYXNlIl0gPSBvcy5nZXRlbnYoIlBIQVNFIiwgIlAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIikKICAgIHJlc3BvbnNlLmhlYWRlcnNbIlgtQmFja2VuZC1UaW1lc3RhbXAiXSA9IGRhdGV0aW1lLnV0Y25vdygpLmlzb2Zvcm1hdCh0aW1lc3BlYz0ic2Vjb25kcyIpCiAgICByZXNwb25zZS5oZWFkZXJzWyJYLUJhY2tlbmQtSGVhbHRoIl0gPSAiaGVhbHRoeSIKICAgIHJldHVybiByZXNwb25zZQoKQG1ldHJpY3NfYnAucm91dGUoIi88c3ltYm9sPi9oaXN0b3J5IikKZGVmIGFwaV9oaXN0b3J5KHN5bWJvbCk6CiAgICB0ZiA9IHJlcXVlc3QuYXJncy5nZXQoInRmIikKICAgIGxpbWl0ID0gaW50KHJlcXVlc3QuYXJncy5nZXQoImxpbWl0IiwgMTAwKSkKICAgIHRyeToKICAgICAgICBoaXN0ID0gZ2V0X21ldHJpY3NfYnlfc3ltYm9sKHN5bWJvbCwgbGltaXQ9bGltaXQsIHRmPXRmKQogICAgICAgIG91dCA9IFtdCiAgICAgICAgZm9yIG0gaW4gaGlzdDoKICAgICAgICAgICAgb3V0LmFwcGVuZCh7CiAgICAgICAgICAgICAgICAidGltZSI6IGludChtLnRpbWVzdGFtcC50aW1lc3RhbXAoKSAqIDEwMDApIGlmIG0udGltZXN0YW1wIGVsc2UgMCwKICAgICAgICAgICAgICAgICJwcmljZSI6IG0ucHJpY2UsCiAgICAgICAgICAgICAgICAib2lfYWJzX3VzZCI6IG0ub2lfYWJzX3VzZCwKICAgICAgICAgICAgICAgICJ2b2xfdXNkIjogbS52b2xfdXNkLAogICAgICAgICAgICAgICAgZiJnbG9iYWxfbHNfe3RmIG9yIG0udGltZWZyYW1lfSI6IGdldGF0dHIobSwgZiJnbG9iYWxfbHNfe3RmIG9yIG0udGltZWZyYW1lfSIsIE5vbmUpLAogICAgICAgICAgICB9KQogICAgICAgIHJldHVybiBqc29uaWZ5KG91dCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBjdXJyZW50X2FwcC5sb2dnZXIud2FybmluZyhmImhpc3RvcnkgZXJyb3I6IHtlfSIpCiAgICAgICAgcmV0dXJuIGpzb25pZnkoW10pCgpkZWYgYWRkX21ldHJpY3Nfcm91dGUoYXBwKToKICAgICMgcGxhY2Vob2xkZXIgLSBrZXB0IGZvciBjb21wYXRpYmlsaXR5IHdpdGggYXBwLmluaXRfYXBwCiAgICByZXR1cm4KCmFzeW5jIGRlZiBnZXRfYWxsX21ldHJpY3ModGY9IjVtIiwgZXhjaD0iYmluYW5jZSIsIGxpbWl0PTIwLCBvZmZzZXQ9MCkgLT4gTGlzdFtkaWN0XToKICAgICIiIgogICAgUHJpbWFyeSBhc3luYyBmZXRjaC4gV2hlbiBERVZfTU9ERSBpcyB0cnVlLCByZXR1cm4gbW9ja3MgcXVpY2tseS4KICAgIE90aGVyd2lzZSB1c2UgY2N4dCB0byBmZXRjaCB0b3AgcGFpcnMgYW5kIGNhbGwgZmV0Y2hfbWV0cmljcyBjb25jdXJyZW50bHkuCiAgICAiIiIKICAgIHByaW50KGYiZ2V0X2FsbF9tZXRyaWNzIHRmPXt0Zn0gZXhjaD17ZXhjaH0gbGltaXQ9e2xpbWl0fSBvZmZzZXQ9e29mZnNldH0iKQogICAgaWYgREVWX01PREU6CiAgICAgICAgIyBnZW5lcmF0ZSBxdWljayBtb2NrcwogICAgICAgIHN5bXMgPSBbIkJUQ1VTRFQiLCAiRVRIVVNEVCIsICJTT0xVU0RUIl0KICAgICAgICBpZiBsaW1pdCBpcyBOb25lOgogICAgICAgICAgICBsaW1pdCA9IGxlbihzeW1zKQogICAgICAgIHJlcyA9IFtdCiAgICAgICAgZm9yIHMgaW4gc3ltc1tvZmZzZXQ6IG9mZnNldCArIGxpbWl0XToKICAgICAgICAgICAgbW9ja19vaSA9IHJhbmRvbS51bmlmb3JtKDFlNywgMWUxMCkKICAgICAgICAgICAgcmVzLmFwcGVuZCh7CiAgICAgICAgICAgICAgICAic3ltYm9sIjogcy5yZXBsYWNlKCJVU0RUIiwgIiIpLAogICAgICAgICAgICAgICAgIlByaWNlIjogZiIke3JhbmRvbS51bmlmb3JtKDEwMDAsIDcwMDAwKTosLjJmfSIsCiAgICAgICAgICAgICAgICAib2lfYWJzX3VzZCI6IG1vY2tfb2ksCiAgICAgICAgICAgICAgICAidm9sX3VzZCI6IHJhbmRvbS51bmlmb3JtKDFlOCwgMWUxMCksCiAgICAgICAgICAgICAgICBmIkdsb2JhbF9MU197dGZ9IjogcmFuZG9tLnVuaWZvcm0oMC41LCA0LjApLAogICAgICAgICAgICAgICAgInRpbWVzdGFtcCI6IGRhdGV0aW1lLnV0Y25vdygpLnRpbWVzdGFtcCgpLAogICAgICAgICAgICAgICAgInRpbWVmcmFtZSI6IHRmLAogICAgICAgICAgICB9KQogICAgICAgIHJldHVybiByZXMKCiAgICBleGNoYW5nZV9jbGFzcyA9IGdldGF0dHIoY2N4dF9hc3luYywgZXhjaCwgY2N4dF9hc3luYy5iaW5hbmNlKQogICAgZXhjaGFuZ2UgPSBleGNoYW5nZV9jbGFzcyh7CiAgICAgICAgImVuYWJsZVJhdGVMaW1pdCI6IFRydWUsCiAgICAgICAgImFwaUtleSI6IG9zLmdldGVudigiQVBJX0tFWSIpLAogICAgICAgICJzZWNyZXQiOiBvcy5nZXRlbnYoIkFQSV9TRUNSRVQiKSwKICAgICAgICAib3B0aW9ucyI6IHsiZGVmYXVsdFR5cGUiOiAiZnV0dXJlIn0sCiAgICB9KQogICAgdHJ5OgogICAgICAgIHRpY2tlcnMgPSBhd2FpdCBleGNoYW5nZS5mZXRjaF90aWNrZXJzKCkKICAgICAgICAjIHNpbXBsZSBzZWxlY3Qgb2YgdG9wIHF1b3RlVm9sdW1lIGZ1dHVyZXMgcGFpcnMgaW5jbHVkaW5nIFVTRFQKICAgICAgICBtYXJrZXRzID0gbGlzdCh0aWNrZXJzLml0ZW1zKCkpCiAgICAgICAgbWFya2V0cyA9IFtrIGZvciBrLCB2IGluIHRpY2tlcnMuaXRlbXMoKSBpZiAiL1VTRFQ6VVNEVCIgaW4gayBhbmQgdi5nZXQoInF1b3RlVm9sdW1lIiwgMCkgPiAxZTddCiAgICAgICAgIyBzb3J0IGJ5IHF1b3RlVm9sdW1lCiAgICAgICAgbWFya2V0c19zb3J0ZWQgPSBzb3J0ZWQobWFya2V0cywga2V5PWxhbWJkYSBzOiB0aWNrZXJzW3NdLmdldCgicXVvdGVWb2x1bWUiLCAwKSwgcmV2ZXJzZT1UcnVlKQogICAgICAgIGlmIGxpbWl0IGlzIG5vdCBOb25lOgogICAgICAgICAgICBtYXJrZXRzX3NvcnRlZCA9IG1hcmtldHNfc29ydGVkW29mZnNldDogb2Zmc2V0ICsgbGltaXRdCiAgICAgICAgcmF3X3N5bWJvbHMgPSBbcy5yZXBsYWNlKCIvVVNEVDpVU0RUIiwgIlVTRFQiKSBmb3IgcyBpbiBtYXJrZXRzX3NvcnRlZF0KCiAgICAgICAgcmVzdWx0cyA9IFtdCiAgICAgICAgY2h1bmtfc2l6ZSA9IDEwCiAgICAgICAgZm9yIGkgaW4gcmFuZ2UoMCwgbGVuKHJhd19zeW1ib2xzKSwgY2h1bmtfc2l6ZSk6CiAgICAgICAgICAgIGNodW5rID0gcmF3X3N5bWJvbHNbaTogaSArIGNodW5rX3NpemVdCiAgICAgICAgICAgIHRhc2tzID0gW2ZldGNoX21ldHJpY3MoZXhjaGFuZ2UsIHMucmVwbGFjZSgiVVNEVCIsICIvVVNEVDpVU0RUIiksIHMsIHRmKSBmb3IgcyBpbiBjaHVua10KICAgICAgICAgICAgY2h1bmtfcmVzID0gYXdhaXQgYXN5bmNpby5nYXRoZXIoKnRhc2tzLCByZXR1cm5fZXhjZXB0aW9ucz1UcnVlKQogICAgICAgICAgICAjIGZpbHRlciByZXN1bHRzCiAgICAgICAgICAgIGZvciByIGluIGNodW5rX3JlczoKICAgICAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UociwgRXhjZXB0aW9uKToKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShyLCBkaWN0KSBhbmQgImVycm9yIiBpbiByOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICByZXN1bHRzLmFwcGVuZChyKQogICAgICAgICAgICAjIHNtYWxsIGppdHRlciBwZXIgY2h1bmsKICAgICAgICAgICAgYXdhaXQgYXN5bmNpby5zbGVlcChyYW5kb20udW5pZm9ybSgwLjEsIDAuNSkpCiAgICAgICAgIyBjb21wdXRlIHdlaWdodGVkIE9JIGlmIHZvbF91c2QgcHJlc2VudAogICAgICAgIGlmIGxlbihyZXN1bHRzKSA+IDA6CiAgICAgICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKHJlc3VsdHMpCiAgICAgICAgICAgIGlmICJ2b2xfdXNkIiBpbiBkZi5jb2x1bW5zIGFuZCBkZlsidm9sX3VzZCJdLnN1bSgpID4gMDoKICAgICAgICAgICAgICAgIHdlaWdodHMgPSBkZlsidm9sX3VzZCJdIC8gZGZbInZvbF91c2QiXS5zdW0oKQogICAgICAgICAgICAgICAgd2VpZ2h0ZWRfb2kgPSAoZGZbIm9pX2Fic191c2QiXSAqIHdlaWdodHMpLnN1bSgpCiAgICAgICAgICAgICAgICBmb3IgaSwgXyBpbiBlbnVtZXJhdGUocmVzdWx0cyk6CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0c1tpXVsid2VpZ2h0ZWRfb2lfdXNkIl0gPSBmbG9hdCh3ZWlnaHRlZF9vaSkKICAgICAgICByZXR1cm4gcmVzdWx0cwogICAgZmluYWxseToKICAgICAgICBhd2FpdCBleGNoYW5nZS5jbG9zZSgpCgphc3luYyBkZWYgZmV0Y2hfbWV0cmljcyhleGNoYW5nZSwgY2N4dF9zeW1ib2wsIHJhd19zeW1ib2wsIHRmPSI1bSIpOgogICAgIiIiCiAgICBGZXRjaCBvcGVuIGludGVyZXN0LCB0aWNrZXIsIEwvUywga2xpbmVzIGV0Yy4gUmV0dXJucyBhIGRpY3QgYWxpZ25lZCB3aXRoIHNhdmVfbWV0cmljcy4KICAgICIiIgogICAgdHJ5OgogICAgICAgIGF3YWl0IGFzeW5jaW8uc2xlZXAoMC4wNSkgICMgc21hbGwgdGhyb3R0bGUKICAgICAgICBvaV9kYXRhID0gYXdhaXQgZXhjaGFuZ2UuZmV0Y2hfb3Blbl9pbnRlcmVzdChjY3h0X3N5bWJvbCkKICAgICAgICB0aWNrZXIgPSBhd2FpdCBleGNoYW5nZS5mZXRjaF90aWNrZXIoY2N4dF9zeW1ib2wpCiAgICAgICAgbGFzdCA9IHRpY2tlci5nZXQoImxhc3QiKSBvciB0aWNrZXIuZ2V0KCJjbG9zZSIpIG9yIDAuMAogICAgICAgIG9pX2Ftb3VudCA9IG9pX2RhdGEuZ2V0KCJvcGVuSW50ZXJlc3RBbW91bnQiLCAwKQogICAgICAgIG9pX3VzZCA9IGZsb2F0KG9pX2Ftb3VudCkgKiBmbG9hdChsYXN0KQogICAgICAgIHZvbF91c2QgPSBmbG9hdCh0aWNrZXIuZ2V0KCJxdW90ZVZvbHVtZSIsIDApKSBvciAwLjAKCiAgICAgICAgIyBiZXN0LWVmZm9ydCBML1MgdmlhIHB1YmxpYyBlbmRwb2ludHMgdXNpbmcgcmVxdWVzdHMgKHN5bmMpIC0ga2VlcCB0aW1lIHNtYWxsCiAgICAgICAgZ2xvYmFsX2xzID0gTm9uZQogICAgICAgIHRyeToKICAgICAgICAgICAgZnJvbSAuc2NyYXBlciBpbXBvcnQgc2VuZF9wdWJsaWNfcmVxdWVzdAogICAgICAgICAgICBfLCBsc19yZXNwID0gc2VuZF9wdWJsaWNfcmVxdWVzdCgiL2Z1dHVyZXMvZGF0YS9nbG9iYWxMb25nU2hvcnRBY2NvdW50UmF0aW8iLCB7InN5bWJvbCI6IHJhd19zeW1ib2wsICJwZXJpb2QiOiB0Zn0pCiAgICAgICAgICAgIGlmIGxzX3Jlc3AgYW5kIGlzaW5zdGFuY2UobHNfcmVzcCwgbGlzdCkgYW5kIGxlbihsc19yZXNwKSA+IDA6CiAgICAgICAgICAgICAgICBnbG9iYWxfbHMgPSBsc19yZXNwWzBdLmdldCgibG9uZ1Nob3J0UmF0aW8iKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgIGdsb2JhbF9scyA9IE5vbmUKCiAgICAgICAgcmVzdWx0ID0gewogICAgICAgICAgICAic3ltYm9sIjogcmF3X3N5bWJvbC5yZXBsYWNlKCJVU0RUIiwgIiIpLAogICAgICAgICAgICAiUHJpY2UiOiBmIiR7bGFzdDosLjJmfSIsCiAgICAgICAgICAgICJvaV9hYnNfdXNkIjogZmxvYXQob2lfdXNkKSwKICAgICAgICAgICAgInZvbF91c2QiOiBmbG9hdCh2b2xfdXNkKSwKICAgICAgICAgICAgZiJHbG9iYWxfTFNfe3RmfSI6IGZsb2F0KGdsb2JhbF9scykgaWYgZ2xvYmFsX2xzIGlzIG5vdCBOb25lIGVsc2UgTm9uZSwKICAgICAgICAgICAgInRpbWVzdGFtcCI6IGRhdGV0aW1lLnV0Y25vdygpLnRpbWVzdGFtcCgpLAogICAgICAgICAgICAidGltZWZyYW1lIjogdGYsCiAgICAgICAgfQogICAgICAgIHJldHVybiByZXN1bHQKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICByZXR1cm4geyJzeW1ib2wiOiByYXdfc3ltYm9sLnJlcGxhY2UoIlVTRFQiLCAiIiksICJlcnJvciI6IHN0cihlKX0K",
        "summary": "220L | metrics.py | .py | 8.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\quant_engine.py",
        "type": ".py",
        "size_kb": 3.7,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvcXVhbnRfZW5naW5lLnB5CiIiIgpRdWFudCBFbmdpbmUg4oCTIFRpZXIgMiBJbnRlbGxpZ2VudCBNZXRyaWNzIFBpcGVsaW5lCkNvbXB1dGVzIHJvbGxpbmcgT0kgWi1zY29yZSwgTFMgzpQlLCBpbWJhbGFuY2UgJSwgZnVuZGluZyBiaWFzLCBjb25mbHVlbmNlIHNjb3JlLgoiIiIKCmltcG9ydCBzcWxpdGUzLCBudW1weSBhcyBucCwgcGFuZGFzIGFzIHBkLCBkYXRldGltZQoKREJfUEFUSCA9ICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIKCmRlZiBjb21wdXRlX3F1YW50X21ldHJpY3MobGltaXQ6IGludCA9IDIwMCk6CiAgICBjb25uID0gc3FsaXRlMy5jb25uZWN0KERCX1BBVEgpCiAgICBkZiA9IHBkLnJlYWRfc3FsX3F1ZXJ5KCIiIgogICAgICAgIFNFTEVDVCBzeW1ib2wsIHRpbWVmcmFtZSwgb2lfdXNkLAogICAgICAgICAgICAgICBsb25nX2FjY291bnRfcGN0LCBzaG9ydF9hY2NvdW50X3BjdCwKICAgICAgICAgICAgICAgZnVuZGluZywgbHNfZGVsdGFfcGN0LCBpbWJhbGFuY2UsIHRpbWVzdGFtcAogICAgICAgIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA/CiAgICAiIiIsIGNvbm4sIHBhcmFtcz0obGltaXQsKSkKICAgIGNvbm4uY2xvc2UoKQogICAgaWYgZGYuZW1wdHk6CiAgICAgICAgcmV0dXJuIFtdCgogICAgIyBFbnN1cmUgYWxsIG51bWVyaWMgY29sdW1ucyBhcmUgZmxvYXRzIChub3Qgb2JqZWN0cykKICAgIG51bV9jb2xzID0gWyJvaV91c2QiLCJsb25nX2FjY291bnRfcGN0Iiwic2hvcnRfYWNjb3VudF9wY3QiLAogICAgICAgICAgICAgICAgImZ1bmRpbmciLCJsc19kZWx0YV9wY3QiLCJpbWJhbGFuY2UiXQogICAgZm9yIGMgaW4gbnVtX2NvbHM6CiAgICAgICAgaWYgYyBpbiBkZi5jb2x1bW5zOgogICAgICAgICAgICBkZltjXSA9IHBkLnRvX251bWVyaWMoZGZbY10sIGVycm9ycz0iY29lcmNlIikuZmlsbG5hKDAuMCkKCiAgICAjIC0tLSBPSSBaLVNjb3JlIC0tLQogICAgZGZbIm9pX3oiXSA9IChkZlsib2lfdXNkIl0gLSBkZlsib2lfdXNkIl0ubWVhbigpKSAvIChkZlsib2lfdXNkIl0uc3RkKGRkb2Y9MCkgb3IgMSkKCiAgICAjIC0tLSBMUyBEZWx0YSAvIEltYmFsYW5jZSAtLS0KICAgIGlmICJsc19kZWx0YV9wY3QiIG5vdCBpbiBkZi5jb2x1bW5zIG9yIGRmWyJsc19kZWx0YV9wY3QiXS5pc25hKCkuYWxsKCk6CiAgICAgICAgZGZbImxzX2RlbHRhX3BjdCJdID0gKGRmWyJsb25nX2FjY291bnRfcGN0Il0gLSBkZlsic2hvcnRfYWNjb3VudF9wY3QiXSkKICAgIGlmICJpbWJhbGFuY2UiIG5vdCBpbiBkZi5jb2x1bW5zIG9yIGRmWyJpbWJhbGFuY2UiXS5pc25hKCkuYWxsKCk6CiAgICAgICAgZGZbImltYmFsYW5jZSJdID0gKGRmWyJsb25nX2FjY291bnRfcGN0Il0gLyAoZGZbInNob3J0X2FjY291bnRfcGN0Il0gKyAxZS02KSkgKiAxMDAKCiAgICAjIC0tLSBGdW5kaW5nIEJpYXMgLS0tCiAgICBkZlsiZnVuZGluZ19iaWFzIl0gPSBwZC50b19udW1lcmljKGRmWyJmdW5kaW5nIl0sIGVycm9ycz0iY29lcmNlIikuZmlsbG5hKDAuMCkgKiAxMDAwMAoKICAgICMgLS0tIENvbmZsdWVuY2UgU2NvcmUgLS0tCiAgICBvaV96X25wID0gZGZbIm9pX3oiXS50b19udW1weShkdHlwZT1mbG9hdCkKICAgIGxzX25wID0gZGZbImxzX2RlbHRhX3BjdCJdLnRvX251bXB5KGR0eXBlPWZsb2F0KQogICAgaW1iX25wID0gZGZbImltYmFsYW5jZSJdLnRvX251bXB5KGR0eXBlPWZsb2F0KQogICAgZmJfbnAgPSBkZlsiZnVuZGluZ19iaWFzIl0udG9fbnVtcHkoZHR5cGU9ZmxvYXQpCgogICAgZGZbImNvbmZsdWVuY2Vfc2NvcmUiXSA9ICgKICAgICAgICBucC50YW5oKG5wLmFicyhvaV96X25wKSAvIDIpCiAgICAgICAgKyBucC50YW5oKG5wLmFicyhsc19ucCkgLyA1MCkKICAgICAgICArIG5wLnRhbmgobnAuYWJzKGltYl9ucCkgLyAyMDApCiAgICAgICAgKyBucC50YW5oKG5wLmFicyhmYl9ucCkgLyA1KQogICAgKSAvIDQuMAoKICAgICMgLS0tIEJpYXMgRGV0ZWN0aW9uIC0tLQogICAgZGZbImJpYXMiXSA9IG5wLndoZXJlKGRmWyJjb25mbHVlbmNlX3Njb3JlIl0gPiAwLjY2LCAiQlVMTCIsICJCRUFSIikKICAgIGRmWyJ1cGRhdGVkX2F0Il0gPSBkYXRldGltZS5kYXRldGltZS51dGNub3coKS5pc29mb3JtYXQoKQoKICAgIHJldHVybiBkZltbCiAgICAgICAgInN5bWJvbCIsInRpbWVmcmFtZSIsIm9pX3oiLCJsc19kZWx0YV9wY3QiLAogICAgICAgICJpbWJhbGFuY2UiLCJmdW5kaW5nIiwiY29uZmx1ZW5jZV9zY29yZSIsCiAgICAgICAgImJpYXMiLCJ1cGRhdGVkX2F0IgogICAgXV0udG9fZGljdChvcmllbnQ9InJlY29yZHMiKQoKCmRlZiB1cGRhdGVfcXVhbnRfc3VtbWFyeSgpOgogICAgcm93cyA9IGNvbXB1dGVfcXVhbnRfbWV0cmljcygpCiAgICBpZiBub3Qgcm93czoKICAgICAgICByZXR1cm4gMAogICAgY29ubiA9IHNxbGl0ZTMuY29ubmVjdChEQl9QQVRIKQogICAgY3VyID0gY29ubi5jdXJzb3IoKQogICAgY3VyLmV4ZWN1dGUoIiIiCiAgICAgICAgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcXVhbnRfc3VtbWFyeSAoCiAgICAgICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT0lOQ1JFTUVOVCwKICAgICAgICAgICAgc3ltYm9sIFRFWFQsIHRpbWVmcmFtZSBURVhULAogICAgICAgICAgICBvaV96IFJFQUwsIGxzX2RlbHRhX3BjdCBSRUFMLCBpbWJhbGFuY2UgUkVBTCwKICAgICAgICAgICAgZnVuZGluZyBSRUFMLCBjb25mbHVlbmNlX3Njb3JlIFJFQUwsIGJpYXMgVEVYVCwKICAgICAgICAgICAgdXBkYXRlZF9hdCBURVhUCiAgICAgICAgKTsKICAgICIiIikKICAgIGNvbm4uY29tbWl0KCkKICAgIGN1ci5leGVjdXRlbWFueSgiIiIKICAgICAgICBJTlNFUlQgSU5UTyBxdWFudF9zdW1tYXJ5CiAgICAgICAgKHN5bWJvbCx0aW1lZnJhbWUsb2lfeixsc19kZWx0YV9wY3QsaW1iYWxhbmNlLGZ1bmRpbmcsCiAgICAgICAgIGNvbmZsdWVuY2Vfc2NvcmUsYmlhcyx1cGRhdGVkX2F0KQogICAgICAgIFZBTFVFUyAoOnN5bWJvbCw6dGltZWZyYW1lLDpvaV96LDpsc19kZWx0YV9wY3QsOmltYmFsYW5jZSwKICAgICAgICAgICAgICAgIDpmdW5kaW5nLDpjb25mbHVlbmNlX3Njb3JlLDpiaWFzLDp1cGRhdGVkX2F0KQogICAgIiIiLCByb3dzKQogICAgY29ubi5jb21taXQoKQogICAgY29ubi5jbG9zZSgpCiAgICByZXR1cm4gbGVuKHJvd3MpCgoKIyA9PT0gQ0xJIHJ1bm5lciA9PT0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHByaW50KCJbUXVhbnRFbmdpbmVdIFJ1bm5pbmcgaW50ZWxsaWdlbnQgbWV0cmljcyB1cGRhdGUuLi4iKQogICAgdHJ5OgogICAgICAgIGNvdW50ID0gdXBkYXRlX3F1YW50X3N1bW1hcnkoKQogICAgICAgIGlmIGNvdW50ID4gMDoKICAgICAgICAgICAgcHJpbnQoZiJbUXVhbnRFbmdpbmVdIOKchSBJbnNlcnRlZCB7Y291bnR9IG5ldyByb3dzIGludG8gcXVhbnRfc3VtbWFyeS4iKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KCJbUXVhbnRFbmdpbmVdIOKaoO+4jyBObyBkYXRhIGZvdW5kIG9yIHVwZGF0ZSBza2lwcGVkLiIpCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIGltcG9ydCB0cmFjZWJhY2sKICAgICAgICBwcmludCgiW1F1YW50RW5naW5lXSDinYwgRXJyb3IgZHVyaW5nIHVwZGF0ZToiKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQo=",
        "summary": "106L | quant_engine.py | .py | 3.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\scraper.py",
        "type": ".py",
        "size_kb": 11.0,
        "content": "",
        "summary": "316L | scraper.py | .py | 11.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\utils.py",
        "type": ".py",
        "size_kb": 2.5,
        "content": "aW1wb3J0IHJlcXVlc3RzCmZyb20gY29sbGVjdGlvbnMgaW1wb3J0IE9yZGVyZWREaWN0CmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCB1cmxlbmNvZGUKZnJvbSBmbGFzayBpbXBvcnQgY3VycmVudF9hcHAKCmRlZiBzZW5kX3B1YmxpY19yZXF1ZXN0KHVybF9wYXRoLCBwYXlsb2FkPXt9LCBhcGlfYmFzZT1Ob25lKToKICAgICIiIlB1YmxpYyBBUEkgcmVxdWVzdCB3aXRoIG9wdGlvbmFsIGJhc2UgVVJMIChkZWZhdWx0IGZhcGkpLiIiIgogICAgYmFzZSA9IGFwaV9iYXNlIG9yIGN1cnJlbnRfYXBwLmNvbmZpZy5nZXQoJ0FQSV9CQVNFX1VSTCcsICdodHRwczovL2ZhcGkuYmluYW5jZS5jb20nKQogICAgcXVlcnlfc3RyaW5nID0gdXJsZW5jb2RlKHBheWxvYWQsIFRydWUpCiAgICB1cmwgPSBiYXNlICsgdXJsX3BhdGgKICAgIGlmIHF1ZXJ5X3N0cmluZzoKICAgICAgICB1cmwgPSB1cmwgKyAiPyIgKyBxdWVyeV9zdHJpbmcKICAgIHRyeToKICAgICAgICBzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpCiAgICAgICAgc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7IkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgifSkKICAgICAgICByZXNwb25zZSA9IHNlc3Npb24uZ2V0KHVybCkKICAgICAgICBwcmludChmIkRFQlVHIEFQSToge3VybH0gLSBTdGF0dXM6IHtyZXNwb25zZS5zdGF0dXNfY29kZX0iKSAgIyBLZWVwIGRlYnVnCiAgICAgICAgaWYgcmVzcG9uc2Uuc3RhdHVzX2NvZGUgIT0gMjAwOgogICAgICAgICAgICBwcmludChmIk5vbi0yMDAgc3RhdHVzIGZvciB7dXJsfToge3Jlc3BvbnNlLnRleHRbOjEwMF19IikKICAgICAgICAgICAgcmV0dXJuIHt9LCBbXSAgIyBGYWxsYmFjawogICAgICAgIAogICAgICAgIGlmIG5vdCByZXNwb25zZS50ZXh0LnN0cmlwKCk6CiAgICAgICAgICAgIHByaW50KGYiRW1wdHkgcmVzcG9uc2UgZm9yIHt1cmx9IikKICAgICAgICAgICAgcmV0dXJuIHt9LCBbXQogICAgICAgIAogICAgICAgICMgRGV0ZWN0IEhUTUwgZXJyb3IgcGFnZQogICAgICAgIGlmIHJlc3BvbnNlLnRleHQuc3RhcnRzd2l0aCgnPCFET0NUWVBFJykgb3IgJ2JpbmFuY2UuY29tL2VuL2Vycm9yJyBpbiByZXNwb25zZS50ZXh0Lmxvd2VyKCk6CiAgICAgICAgICAgIHByaW50KGYiSFRNTCBlcnJvciBwYWdlIGZvciB7dXJsfTogUmVnaW9uYWwgYmxvY2sgb3IgaW52YWxpZCBhY2Nlc3MuIEZhbGxiYWNrIGVtcHR5LiIpCiAgICAgICAgICAgIHJldHVybiB7fSwgW10KICAgICAgICAKICAgICAgICB0cnk6CiAgICAgICAgICAgIGpzb25fcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkKICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5KU09ORGVjb2RlRXJyb3IgYXMgZToKICAgICAgICAgICAgcHJpbnQoZiJOb24tSlNPTiByZXNwb25zZSBmb3Ige3VybH06IHtyZXNwb25zZS50ZXh0WzoyMDBdfSIpCiAgICAgICAgICAgIGpzb25fcmVzcG9uc2UgPSBbXSAgIyBGYWxsYmFjayBlbXB0eSBsaXN0CiAgICAgICAgCiAgICAgICAgaWYgImNvZGUiIGluIGpzb25fcmVzcG9uc2UgYW5kIGpzb25fcmVzcG9uc2VbImNvZGUiXSA8IDA6CiAgICAgICAgICAgIHByaW50KGYiQVBJIGVycm9yIGZvciB7dXJsfToge2pzb25fcmVzcG9uc2VbJ21zZyddfSIpCiAgICAgICAgICAgIHJldHVybiB7fSwgW10KICAgICAgICAKICAgICAgICByZXR1cm4gcmVzcG9uc2UuaGVhZGVycywganNvbl9yZXNwb25zZQogICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yIGFzIGU6CiAgICAgICAgcHJpbnQoZiJDb25uZWN0aW9uIGVycm9yIGZvciB7dXJsfToge2V9IikKICAgICAgICByZXR1cm4ge30sIFtdCgpkZWYgaGFzaGluZyhxdWVyeV9zdHJpbmcsIGV4Y2hhbmdlPSJiaW5hbmNlIiwgdGltZXN0YW1wPU5vbmUpOgogICAgIiIiU2lnbmF0dXJlIGhhc2hpbmcgKGZyb20gc2NyYXBlci5weSkuIiIiCiAgICBpbXBvcnQgaG1hYwogICAgaW1wb3J0IGhhc2hsaWIKICAgIGlmIGV4Y2hhbmdlID09ICJieWJpdCI6CiAgICAgICAgcXVlcnlfc3RyaW5nID0gZiJ7dGltZXN0YW1wfXtjdXJyZW50X2FwcC5jb25maWdbJ0FQSV9LRVknXX01MDAwIiArIHF1ZXJ5X3N0cmluZwogICAgICAgIHJldHVybiBobWFjLm5ldygKICAgICAgICAgICAgYnl0ZXMoY3VycmVudF9hcHAuY29uZmlnWyJBUElfU0VDUkVUIl0uZW5jb2RlKCJ1dGYtOCIpKSwKICAgICAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICAgICAgaGFzaGxpYi5zaGEyNTYsCiAgICAgICAgKS5oZXhkaWdlc3QoKQogICAgcmV0dXJuIGhtYWMubmV3KAogICAgICAgIGJ5dGVzKGN1cnJlbnRfYXBwLmNvbmZpZ1siQVBJX1NFQ1JFVCJdLmVuY29kZSgidXRmLTgiKSksCiAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICBoYXNobGliLnNoYTI1NiwKICAgICkuaGV4ZGlnZXN0KCk=",
        "summary": "61L | utils.py | .py | 2.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\version.py",
        "type": ".py",
        "size_kb": 0.1,
        "content": "IyBweWxpbnQ6IHNraXAtZmlsZQoKX192ZXJzaW9uX18gPSAiMC4zLjQuZGV2MCtnNTcxMzdkNGU4LmQyMDI1MTAxNiI=",
        "summary": "3L | version.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\wsgi.py",
        "type": ".py",
        "size_kb": 0.1,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGZ1dHVyZXNib2FyZC5hcHAKCgphcHAgPSBmdXR1cmVzYm9hcmQuYXBwLmluaXRfYXBwKCkK",
        "summary": "6L | wsgi.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\__init__.py",
        "type": ".py",
        "size_kb": 0.9,
        "content": "Iwpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgppbXBvcnQgcGF0aGxpYgoKUEFDS0FHRV9ST09UID0gcGF0aGxpYi5QYXRoKF9fZmlsZV9fKS5yZXNvbHZlKCkucGFyZW50CnRyeToKICAgIGZyb20gLnZlcnNpb24gaW1wb3J0IF9fdmVyc2lvbl9fCmV4Y2VwdCBJbXBvcnRFcnJvcjogICMgcHJhZ21hOiBubyBjb3ZlcgogICAgX192ZXJzaW9uX18gPSAiMC4wLjAubm90LWluc3RhbGxlZCIKICAgIHRyeToKICAgICAgICBmcm9tIGltcG9ydGxpYi5tZXRhZGF0YSBpbXBvcnQgUGFja2FnZU5vdEZvdW5kRXJyb3IsIHZlcnNpb24KCiAgICAgICAgdHJ5OgogICAgICAgICAgICBfX3ZlcnNpb25fXyA9IHZlcnNpb24oImZ1dHVyZXNib2FyZCIpCiAgICAgICAgZXhjZXB0IFBhY2thZ2VOb3RGb3VuZEVycm9yOgogICAgICAgICAgICAjIHBhY2thZ2UgaXMgbm90IGluc3RhbGxlZAogICAgICAgICAgICBwYXNzCiAgICBleGNlcHQgSW1wb3J0RXJyb3I6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmcm9tIHBrZ19yZXNvdXJjZXMgaW1wb3J0ICggICMgdHlwZTogaWdub3JlCiAgICAgICAgICAgICAgICBEaXN0cmlidXRpb25Ob3RGb3VuZCwKICAgICAgICAgICAgICAgIGdldF9kaXN0cmlidXRpb24sCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIF9fdmVyc2lvbl9fID0gZ2V0X2Rpc3RyaWJ1dGlvbigiZnV0dXJlc2JvYXJkIikudmVyc2lvbgogICAgICAgICAgICBleGNlcHQgRGlzdHJpYnV0aW9uTm90Rm91bmQ6CiAgICAgICAgICAgICAgICAjIHBhY2thZ2UgaXMgbm90IGluc3RhbGxlZAogICAgICAgICAgICAgICAgcGFzcwogICAgICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICAgICAgIyBwa2cgcmVzb3VyY2VzIGlzbid0IGV2ZW4gYXZhaWxhYmxlPyEKICAgICAgICAgICAgcGFzcwo=",
        "summary": "33L | __init__.py | .py | 0.9 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\base.html",
        "type": ".html",
        "size_kb": 10.5,
        "content": "",
        "summary": "141L | base.html | .html | 10.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\coin.html",
        "type": ".html",
        "size_kb": 30.7,
        "content": "",
        "summary": "707L | coin.html | .html | 30.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\error.html",
        "type": ".html",
        "size_kb": 0.4,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfTQwNHslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZSI+PC9pPiBFcnJvciA0MDQ8L2gzPgogICAgPC9kaXY+CiAgICA8cCBjbGFzcz0iaW1wb3J0YW50Ij4KICAgICAgICBQYWdlIG5vdCBmb3VuZAogICAgPC9wPgp7JSBlbmRibG9jayAlfQo=",
        "summary": "10L | error.html | .html | 0.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\history.html",
        "type": ".html",
        "size_kb": 3.6,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9eyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgdGl0bGUgJX1JbmNvbWUgaGlzdG9yeXslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWhpc3RvcnkiPjwvaT4gSW5jb21lIGhpc3Rvcnk8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIHslIGlmIGZpbGVuYW1lICE9ICItIiAlfQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtaW5mbyIgcm9sZT0iYWxlcnQiPjxpIGNsYXNzPSJmYXMgZmEtZmlsZS1kb3dubG9hZCI+PC9pPiBZb3VyIGZpbGUgaGFzIGJlZW4gc2F2ZWQgdG8gPGNvZGU+e3sgZm5hbWUgfX08L2NvZGU+IHdoaWNoIGNhbiBiZSBkb3dubG9hZGVkIGJ5IGNsaWNraW5nIDxhIGhyZWY9ICJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1mbmFtZSkgfX0iPmhlcmU8L2E+PC9kaXY+PGJyPgogICAgICAgICAgICB7JSBlbmRpZiAlfQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0ib3JkZXJzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+VGltZSBwZXJpb2Q8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlRvdGFsIHJlY29yZHM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvbCBpbiBoaXN0b3J5WyJjb2x1bW5zIl0gJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+e3sgY29sIH19PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgdGltZWZyYW1lIGluIGhpc3RvcnkgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGlmIHRpbWVmcmFtZSAhPSAiY29sdW1ucyIgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmhpc3RvcnlfcGFnZV90aW1lZnJhbWUiLCBzdGFydD1oaXN0b3J5W3RpbWVmcmFtZV1bInN0YXJ0Il0sIGVuZD1oaXN0b3J5W3RpbWVmcmFtZV1bImVuZCJdKSB9fSIgcm9sZT0iYnV0dG9uIj5TYXZlIHRvIGZpbGU8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHRpbWVmcmFtZSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBoaXN0b3J5W3RpbWVmcmFtZV1bInRvdGFsIl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgY29sIGluIGhpc3RvcnlbImNvbHVtbnMiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGhpc3RvcnlbdGltZWZyYW1lXVtjb2xdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGJyPjxocj48YnI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8dGFibGUgaWQ9Im9sZGZpbGVzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+RmlsZW5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgZmlsZSBpbiBmaWxlcyAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1maWxlKSB9fSIgcm9sZT0iYnV0dG9uIj5Eb3dubG9hZDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBmaWxlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKCgoKCiAgICA8c2NyaXB0PgogICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICQoJyNvcmRlcnMnKS5EYXRhVGFibGUoewogICAgICAgICAgICAgICAgInBhZ2luZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgIm9yZGVyIjogW10sCiAgICAgICAgICAgICAgICAiaW5mbyI6IGZhbHNlLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJCgnI29sZGZpbGVzJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgICAgICJwYWdpbmciOiB0cnVlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IHRydWUsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWyAxLCAnZGVzYycgXV0sCiAgICAgICAgICAgICAgICAiaW5mbyI6IHRydWUsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "87L | history.html | .html | 3.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\home.html",
        "type": ".html",
        "size_kb": 9.4,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9PG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iNjAiPnslIGVuZGJsb2NrICV9CnslIGJsb2NrIHRpdGxlICV9RGFzaGJvYXJkeyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgY29udGVudCAlfQogICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGZsZXgtd3JhcCBmbGV4LW1kLW5vd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyBwYi0yIG1iLTMgYm9yZGVyLWJvdHRvbSI+CiAgICAgICAgPGgzPjxpIGNsYXNzPSJmYXMgZmEtdGFjaG9tZXRlci1hbHQiPjwvaT4gRGFzaGJvYXJkPC9oMz4gPHNwYW4gY2xhc3M9ImJhZGdlIGJnLXNlY29uZGFyeSI+PGkgY2xhc3M9ImZhciBmYS1jbG9jayI+PC9pPiBMQVNUIE9SREVSOiB7eyBsYXN0dXBkYXRlIH19PC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9ImJ0bi10b29sYmFyIG1iLTIgbWItbWQtMCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi1ncm91cCBtZS0yIj4KICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0iR0VUIiBuYW1lPSJkYXRlcmFuZ2Vmb3JtIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAgaW5wdXQtZ3JvdXAtc20iPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC10ZXh0Ij48aSBjbGFzcz0iZmFyIGZhLWNhbGVuZGFyLWFsdCI+PC9pPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgbmFtZT0iZGF0ZXJhbmdlIiBzaXplPSIyMiIgLz4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGEgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tb3V0bGluZS1zZWNvbmRhcnkiIGhyZWY9Imh0dHBzOi8vd3d3LmJpbmFuY2UuY29tL2VuL2Z1dHVyZXMve3sgY29pbiB9fSIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWV4dGVybmFsLWxpbmstYWx0Ij48L2k+IFZpZXcgb24gQmluYW5jZSAKICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgIDxhIGhyZWY9Int7IHVybF9mb3IoIm1haW4uZGFzaGJvYXJkX3BhZ2UiLCBzdGFydD10aW1lcmFuZ2VzWzBdWzBdLCBlbmQ9dGltZXJhbmdlc1swXVsxXSkgfX0iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj57eyB0b3RhbHNbNl1bMF0gfX0lPC9oNT4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0Ij4ke3sgdG90YWxzWzFdIH19PC9wPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1mb290ZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgUHJvZml0IHRvZGF5CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgIDxhIGhyZWY9Int7IHVybF9mb3IoIm1haW4uZGFzaGJvYXJkX3BhZ2UiLCBzdGFydD10aW1lcmFuZ2VzWzJdWzBdLCBlbmQ9dGltZXJhbmdlc1syXVsxXSkgfX0iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj57eyB0b3RhbHNbNl1bMV0gfX0lPC9oNT4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iY2FyZC10ZXh0Ij4ke3sgdG90YWxzWzJdIH19PC9wPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1mb290ZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgUHJvZml0IGZyb20gTW9uZGF5CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgICA8YSBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmRhc2hib2FyZF9wYWdlIiwgc3RhcnQ9dGltZXJhbmdlc1s0XVswXSwgZW5kPXRpbWVyYW5nZXNbNF1bMV0pIH19Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC10aXRsZSI+e3sgdG90YWxzWzZdWzJdIH19JTwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+JHt7IHRvdGFsc1szXSB9fTwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFByb2ZpdCBpbiB7eyB0b3RhbHNbOF0gfX0KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIj4KICAgICAgICAgICA8YSBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmRhc2hib2FyZF9wYWdlIiwgc3RhcnQ9dGltZXJhbmdlc1s4XVswXSwgZW5kPXRpbWVyYW5nZXNbOF1bMV0pIH19Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iY2FyZC10aXRsZSI+e3sgdG90YWxzWzZdWzNdIH19JTwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+JHt7IHRvdGFsc1swXSB9fTwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFRvdGFsIHByb2ZpdAogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTIiPgogICAgICAgICAgICA8YSBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLnBvc2l0aW9uc19wYWdlIikgfX0iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLXRpdGxlIj4ke3sgdG90YWxzWzddWzBdIH19PC9oNT4KCSAgICAgICAgICAgIDxwIGNsYXNzPSJjYXJkLXRleHQiPiZuYnNwOzwvcD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFVucmVhbGlzZWQgUG5MCiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSI+CiAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImNhcmQtdGl0bGUiPiR7eyB0b3RhbHNbN11bMV0gfX08L2g1PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmQtdGV4dCI+Jm5ic3A7PC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtZm9vdGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgV2FsbGV0IGJhbGFuY2UKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxicj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIFByb2ZpdCBieSBkYXkgYmV0d2VlbiB7eyBzdGFydGRhdGUgfX0gYW5kIHt7IGVuZGRhdGUgfX08c3BhbiBjbGFzcz0iZmxvYXQtZW5kIj48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXNlY29uZGFyeSBidG4tc20iIHJvbGU9ImJ1dHRvbiIgaHJlZj0iLi4vLi4vcHJvamVjdGlvbiI+UHJvamVjdGlvbjwvYT48L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibGluZUNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CgkJCQk8ZGl2IGNsYXNzPSJjYXJkLWZvb3RlciB0ZXh0LW11dGVkIj4KCQkJCQlQcm9maXQgb3ZlciB0aGlzIHBlcmlvZDoge3sgIiQlLjJmInxmb3JtYXQodG90YWxzWzldKSB9fQoJCQkJPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciB0ZXh0LW11dGVkIj4KICAgICAgICAgICAgICAgICAgICBQcm9maXQgYnkgY29pbiBiZXR3ZWVuIHt7IHN0YXJ0ZGF0ZSB9fSBhbmQge3sgZW5kZGF0ZSB9fQogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxjYW52YXMgaWQ9ImJhckNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CgkJCQk8ZGl2IGNsYXNzPSJjYXJkLWZvb3RlciB0ZXh0LW11dGVkIj4KCQkJCQlDb2lucyBhY3RpdmUgb3ZlciB0aGlzIHBlcmlvZDoge3sgdG90YWxzWzEwXSB9fQoJCQkJPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8c2NyaXB0PiAgICAKICAgICQoJ2lucHV0W25hbWU9ImRhdGVyYW5nZSJdJykuZGF0ZXJhbmdlcGlja2VyKHsKICAgICAgICAic2hvd0Ryb3Bkb3ducyI6IHRydWUsCiAgICAgICAgImF1dG9BcHBseSI6IHRydWUsCiAgICAgICAgcmFuZ2VzOiB7CiAgICAgICAgICAgICdUb2RheSc6IFsne3t0aW1lcmFuZ2VzWzBdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzBdWzFdfX0nXSwKICAgICAgICAgICAgJ1llc3RlcmRheSc6IFsne3t0aW1lcmFuZ2VzWzFdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzFdWzFdfX0nXSwKICAgICAgICAgICAgJ1RoaXMgV2Vlayc6IFsne3t0aW1lcmFuZ2VzWzJdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzJdWzFdfX0nXSwKICAgICAgICAgICAgJ0xhc3QgV2Vlayc6IFsne3t0aW1lcmFuZ2VzWzNdWzBdfX0nLCAne3t0aW1lcmFuZ2VzWzNdWzFdfX0nXSwKICAgICAgICAgICAgJ1RoaXMgTW9udGgnOiBbJ3t7dGltZXJhbmdlc1s0XVswXX19JywgJ3t7dGltZXJhbmdlc1s0XVsxXX19J10sCiAgICAgICAgICAgICdMYXN0IE1vbnRoJzogWyd7e3RpbWVyYW5nZXNbNV1bMF19fScsICd7e3RpbWVyYW5nZXNbNV1bMV19fSddLAogICAgICAgICAgICAnVGhpcyBZZWFyJzogWyd7e3RpbWVyYW5nZXNbNl1bMF19fScsICd7e3RpbWVyYW5nZXNbNl1bMV19fSddLAogICAgICAgICAgICAnTGFzdCBZZWFyJzogWyd7e3RpbWVyYW5nZXNbN11bMF19fScsICd7e3RpbWVyYW5nZXNbN11bMV19fSddLAogICAgICAgICAgICAnQWxsIFRpbWUnOiBbJ3t7dGltZXJhbmdlc1s4XVswXX19JywgJ3t7dGltZXJhbmdlc1s4XVsxXX19J10sCiAgICAgICAgfSwKICAgICAgICAibG9jYWxlIjogewogICAgICAgICAgICAiZm9ybWF0IjogIllZWVktTU0tREQiLAogICAgICAgICAgICAic2VwYXJhdG9yIjogIiAtICIsCiAgICAgICAgICAgICJmcm9tTGFiZWwiOiAiRnJvbSIsCiAgICAgICAgICAgICJ0b0xhYmVsIjogIlRvIiwKICAgICAgICAgICAgIndlZWtMYWJlbCI6ICJXIiwKICAgICAgICAgICAgImRheXNPZldlZWsiOiBbCiAgICAgICAgICAgICAgICAiU3UiLAogICAgICAgICAgICAgICAgIk1vIiwKICAgICAgICAgICAgICAgICJUdSIsCiAgICAgICAgICAgICAgICAiV2UiLAogICAgICAgICAgICAgICAgIlRoIiwKICAgICAgICAgICAgICAgICJGciIsCiAgICAgICAgICAgICAgICAiU2EiCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJtb250aE5hbWVzIjogWwogICAgICAgICAgICAgICAgIkphbnVhcnkiLAogICAgICAgICAgICAgICAgIkZlYnJ1YXJ5IiwKICAgICAgICAgICAgICAgICJNYXJjaCIsCiAgICAgICAgICAgICAgICAiQXByaWwiLAogICAgICAgICAgICAgICAgIk1heSIsCiAgICAgICAgICAgICAgICAiSnVuZSIsCiAgICAgICAgICAgICAgICAiSnVseSIsCiAgICAgICAgICAgICAgICAiQXVndXN0IiwKICAgICAgICAgICAgICAgICJTZXB0ZW1iZXIiLAogICAgICAgICAgICAgICAgIk9jdG9iZXIiLAogICAgICAgICAgICAgICAgIk5vdmVtYmVyIiwKICAgICAgICAgICAgICAgICJEZWNlbWJlciIKICAgICAgICAgICAgXSwKICAgICAgICAgICAgImZpcnN0RGF5IjogMQogICAgICAgIH0sCiAgICAgICAgImFsd2F5c1Nob3dDYWxlbmRhcnMiOiB0cnVlLAogICAgICAgICJzdGFydERhdGUiOiAie3tzdGFydGRhdGV9fSIsCiAgICAgICAgImVuZERhdGUiOiAie3tlbmRkYXRlfX0iLAogICAgICAgICJvcGVucyI6ICJsZWZ0IgogICAgfSk7CiAgICAKICAgICQoJ2lucHV0W25hbWU9ImRhdGVyYW5nZSJdJykub24oJ2FwcGx5LmRhdGVyYW5nZXBpY2tlcicsIChlLCBwaWNrZXIpID0+IHsKICAgICAgZG9jdW1lbnQuZm9ybXNbImRhdGVyYW5nZWZvcm0iXS5zdWJtaXQoKTsKICAgIH0pOwogICAgCkNoYXJ0LnJlZ2lzdGVyKENoYXJ0RGF0YUxhYmVscyk7CmNvbnN0IGRhdGEgPSB7CiAgbGFiZWxzOiB7eyBkYXRhWzFdWzBdIHwgc2FmZSB9fSwKICBkYXRhc2V0czogW3sKICAgIGF4aXM6ICd5JywKICAgIGxhYmVsOiAnUHJvZml0ICQnLAogICAgZGF0YToge3sgZGF0YVsxXVsxXSB9fSwKICAgIGZpbGw6IGZhbHNlLAogICAgYm9yZGVyV2lkdGg6IDEKICB9XQp9OwoKY29uc3QgY29uZmlnID0gewogIHR5cGU6ICdiYXInLAogIGRhdGE6IGRhdGEsCiAgb3B0aW9uczogewogICAgICBvbkNsaWNrOiBncmFwaENsaWNrRXZlbnQsCiAgICAgIGluZGV4QXhpczogJ3knLAogICAgICBwbHVnaW5zOnsgICAKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgfSwKICAgICAgfSwKCSAgc2NhbGVzOiB7CgkJeTogewoJCQl0aWNrczogewoJCQkJYXV0b1NraXA6IGZhbHNlLAoJCQl9CgkJfQoJICB9CiAgfQp9OwogICAgCmZ1bmN0aW9uIGdyYXBoQ2xpY2tFdmVudChldmVudCwgYXJyYXkpewogICAgaWYoYXJyYXlbMF0pewogICAgICAgIGNvbnN0IHZhbHVlID0gZGF0YS5sYWJlbHNbYXJyYXlbMF0uaW5kZXhdOwogICAgICAgIGxvY2F0aW9uLmhyZWYgPSAiLi4vLi4vY29pbnMvIiArIHZhbHVlOwogICAgfQp9Cgp2YXIgbXlDaGFydCA9IG5ldyBDaGFydCgKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYXJDaGFydCcpLAogICAgY29uZmlnCik7CiAgICAKY29uc3QgZGF0YTIgPSB7CiAgbGFiZWxzOiB7eyBkYXRhWzBdWzFdIHwgc2FmZSB9fSwKICBkYXRhc2V0czogWwoJICB7CgkJbGFiZWw6ICdQcm9maXQnLAoJCWRhdGE6IHt7IGRhdGFbMF1bMF0gfX0sCgkJZmlsbDogZmFsc2UsCgkJYm9yZGVyQ29sb3I6ICdyZ2IoNzUsIDE5MiwgMTkyKScsCgkJdGVuc2lvbjogMC4xLAoJCXlBeGlzSUQ6ICd5JywKCSAgfSwKCSAgewoJCWxhYmVsOiAnQmFsYW5jZScsCgkJZGF0YToge3sgZGF0YVsyXVswXSB9fSwKCQlmaWxsOiB0cnVlLAoJCWJvcmRlckNvbG9yOiAncmdiYSgyNDAsIDIzNCwgMTUxLCAwLjMpJywKCQliYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDI0MCwgMjM0LCAxNTEsIDAuMyknLAoJCXRlbnNpb246IDAuMSwKCQl5QXhpc0lEOiAneTEnLAogICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgICAgdGl0bGU6IG51bGwKICAgICAgICAgICAgfQogICAgICAgIH0KCSAgfSwJICAKICBdCn07CmNvbnN0IGNvbmZpZzIgPSB7CiAgdHlwZTogJ2xpbmUnLAogIGRhdGE6IGRhdGEyLAogIG9wdGlvbnM6IHsKCQlyZXNwb25zaXZlOiB0cnVlLAogICAgICAgIGxheW91dDogewogICAgICAgICAgICBwYWRkaW5nOiB7CiAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHBsdWdpbnM6ewogICAgICAgICAgICBkYXRhbGFiZWxzOiB7CiAgICAgICAgICAgICAgICBhbmNob3I6ICdlbmQnLAogICAgICAgICAgICAgICAgYWxpZ246ICd0b3AnLAogICAgICAgICAgICAgICAgb2Zmc2V0OiA1LAogICAgICAgICAgICB9LAogICAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKCQlzY2FsZXM6IHsKCQkJeTogewoJCQkJdHlwZTogJ2xpbmVhcicsCgkJCQlkaXNwbGF5OiB0cnVlLAoJCQkJcG9zaXRpb246ICdsZWZ0JywKCQkJCWJlZ2luQXRaZXJvOiB0cnVlLAoJCQkJdGlja3M6IHsKCQkJCQlhdXRvU2tpcDogZmFsc2UsCgkJCQl9CgkJCX0sCgkJCXkxOiB7CgkJCQl0eXBlOiAnbGluZWFyJywKCQkJCWRpc3BsYXk6IHRydWUsCgkJCQlwb3NpdGlvbjogJ3JpZ2h0JywKCQkJCWdyaWQ6IHsKCQkJCSAgZHJhd09uQ2hhcnRBcmVhOiBmYWxzZSwgLy8gb25seSB3YW50IHRoZSBncmlkIGxpbmVzIGZvciBvbmUgYXhpcyB0byBzaG93IHVwCgkJCQl9CgkJCX0KCQl9Cgl9Cn07CiAgICAKdmFyIG15Q2hhcnQgPSBuZXcgQ2hhcnQoCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGluZUNoYXJ0JyksCiAgICBjb25maWcyCik7Cjwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "300L | home.html | .html | 9.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\positions.html",
        "type": ".html",
        "size_kb": 4.5,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9PG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iNjAiPnslIGVuZGJsb2NrICV9CnslIGJsb2NrIHRpdGxlICV9UG9zaXRpb25zeyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgY29udGVudCAlfQogICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGZsZXgtd3JhcCBmbGV4LW1kLW5vd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyBwYi0yIG1iLTMgYm9yZGVyLWJvdHRvbSI+CiAgICAgICAgPGgzPjxpIGNsYXNzPSJmYXMgZmEtaGFuZC1ob2xkaW5nLXVzZCI+PC9pPiBQb3NpdGlvbnM8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiB0YWJsZS1yZXNwb25zaXZlIj4KICAgICAgICAgICAgPHRhYmxlIGlkPSJvcmRlcnMiIGNsYXNzPSd0YWJsZSB0YWJsZS1zbSB0YWJsZS1ib3JkZXJlZCB0ZXh0LWNlbnRlcic+CiAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9InRoZWFkLWRhcmsiPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlN5bWJvbDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5MZXZlcmFnZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFZvbHVtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFByaWNlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlBvcy4gVmFsdWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+VW5yZWFsaXNlZCBQbkw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q3VycmVudCBQcmljZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+QnV5cyBsZWZ0PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0YWJsZS1zdWNjZXNzIj5OZXh0IGJ1eTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLXN1Y2Nlc3MiPkRpc3RhbmNlICU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+U2VsbHMgbGVmdDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtZGFuZ2VyIj5OZXh0IHNlbGw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2UgJTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvaW4gaW4gcG9zaXRpb25zICV9CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBjb2luIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNV19fSB7eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bM10gfX14PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKHBvc2l0aW9uc1tjb2luXVswXVswXVs2XSAqIHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSl8cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7ICIkJS4yZiJ8Zm9ybWF0KHBvc2l0aW9uc1tjb2luXVswXVswXVsyXSkgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IG1hcmtwcmljZXNbY29pbl18cm91bmQoOCl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzBdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVs0XX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNV19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+eyUgaWYgcG9zaXRpb25zW2NvaW5dWzJdWzRdICE9ICItIiAlfXt7ICgocG9zaXRpb25zW2NvaW5dWzJdWzVdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsxXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNl19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzddfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs2XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs3XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICB7JSBpZiBwb3NpdGlvbnNbY29pbl1bMF18bGVuZ3RoID4gMSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgY29pbiB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzVdfX0ge3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzNdIH19eDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzZdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IChwb3NpdGlvbnNbY29pbl1bMF1bMV1bNl0gKiBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0pfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyAiJCUuMmYifGZvcm1hdChwb3NpdGlvbnNbY29pbl1bMF1bMV1bMl0pIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBtYXJrcHJpY2VzW2NvaW5dfHJvdW5kKDgpfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsyXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bOF19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzldfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs4XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs5XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bM119fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzEwXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bMTFdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVsxMF0gIT0gIi0iICV9e3sgKChwb3NpdGlvbnNbY29pbl1bMl1bMTFdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdD4KCiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCgnI29yZGVycycpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWzAsImFzYyJdXSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfSApOwoKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "84L | positions.html | .html | 4.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\projection.html",
        "type": ".html",
        "size_kb": 5.0,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfVByb2plY3Rpb257JSBlbmRibG9jayAlfQp7JSBibG9jayBjb250ZW50ICV9CiAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gZmxleC13cmFwIGZsZXgtbWQtbm93cmFwIGFsaWduLWl0ZW1zLWNlbnRlciBwdC0zIHBiLTIgbWItMyBib3JkZXItYm90dG9tIj4KICAgICAgICA8aDM+PGkgY2xhc3M9ImZhcyBmYS1jaGFydC1saW5lIj48L2k+IFByb2plY3Rpb248L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgQmFsYW5jZSBwcm9qZWN0aW9uIHZpc3VhbGlzZWQKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibGluZUNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8YnI+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIEJhbGFuY2UgcHJvamVjdGlvbiBicmVha2Rvd24KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHRhYmxlIGlkPSJoeXBlIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EYWlseSAlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4zMCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD42MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD45MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4xMjAgZGF5czwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+MjQwIGRheXM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjM2NSBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIHZhbHVlIGluIGRhdGFbInByb2oiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKCh2YWx1ZSAtIDEpICogMTAwKXxyb3VuZCgyKSB9fSU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMzBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVs5MF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMTIwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWy0xXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbV92YWx1ZSJdIH19JSAoYXZnIHBhc3QgNyBkYXlzKTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzMwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzkwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzEyMF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInBjdXN0b20iXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwY3VzdG9tIl1bLTFdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8c2NyaXB0PgoKICAgICAgICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkKCcjaHlwZScpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAic2VhcmNoaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbXSwKICAgICAgICAgICAgICAgICJpbmZvIjogZmFsc2UsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKCiAgICAgICAgQ2hhcnQucmVnaXN0ZXIoQ2hhcnREYXRhTGFiZWxzKTsKCiAgICAgICAgY29uc3QgZmxhdF9jb2xvdXJzID0gWwogICAgICAgICAgICAicmdiYSg0NiwgMjA0LCAxMTMsIDAuMykiLCAicmdiYSg1MiwgMTUyLCAyMTksIDAuMykiLCAicmdiYSgxNTUsIDg5LCAxODIsIDAuMykiLCAicmdiYSg1MiwgNzMsIDk0LCAwLjMpIiwgInJnYmEoMjQxLCAxOTYsIDE1LCAwLjMpIiwgCiAgICAgICAgICAgICJyZ2JhKDIzMCwgMTI2LCAzNCwgMC4zKSIsICJyZ2JhKDIzMSwgNzYsIDYwLCAwLjMpIiwgInJnYmEoMTI3LCAxNDAsIDE0MSwgMC4zKSIsICJyZ2JhKDQ0LCA2MiwgODAsIDAuMykiLCAicmdiYSgyNiwgMTg4LCAxNTYsIDAuMykiLAogICAgICAgICAgICAKICAgICAgICBdCiAgICAgICAgCiAgICAgICAgY29uc3QgZGF0YSA9IHsKICAgICAgICAgICAgbGFiZWxzOiB7eyBkYXRhWyJkYXRlcyJdIHwgc2FmZSB9fSwKICAgICAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgICAgICAgIHslIGZvciB2YWx1ZSBpbiBkYXRhWyJwcm9qIl0gJX0KICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3t7ICgodmFsdWUgLSAxKSAqIDEwMCl8cm91bmQoMikgfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwcm9qIl1bdmFsdWVdIH19LAogICAgICAgICAgICAgICAgICAgIGZpbGw6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBmbGF0X2NvbG91cnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmZsYXRfY29sb3Vycy5sZW5ndGgpXSwKICAgICAgICAgICAgICAgICAgICB0ZW5zaW9uOiAwLjEsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICd7eyBkYXRhWyJwY3VzdG9tX3ZhbHVlIl0gfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwY3VzdG9tIl0gfX0sCiAgICAgICAgICAgICAgICAgICAgZmlsbDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDc1LCAxOTIsIDE5MiwgMC4zKScsCiAgICAgICAgICAgICAgICAgICAgdGVuc2lvbjogMC4xLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgXQogICAgICAgIH07CiAgICAgICAgY29uc3QgY29uZmlnMiA9IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgICAgICAgICAgbGF5b3V0OiB7CiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogewogICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHBsdWdpbnM6ewogICAgICAgICAgICAgICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvU2tpcDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydCgKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpbmVDaGFydCcpLAogICAgICAgICAgICBjb25maWcyCiAgICAgICAgKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "135L | projection.html | .html | 5.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\chartjs-chart-financial.js",
        "type": ".js",
        "size_kb": 14.6,
        "content": "",
        "summary": "522L | chartjs-chart-financial.js | .js | 14.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\hammer.min.js",
        "type": ".js",
        "size_kb": 20.3,
        "content": "",
        "summary": "7L | hammer.min.js | .js | 20.3 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\dashboard.css",
        "type": ".css",
        "size_kb": 1.6,
        "content": "Ym9keSB7CiAgZm9udC1zaXplOiAuODc1cmVtOwp9CgouZmVhdGhlciB7CiAgd2lkdGg6IDE2cHg7CiAgaGVpZ2h0OiAxNnB4OwogIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTsKfQoKLyoKICogU2lkZWJhcgogKi8KCi5zaWRlYmFyIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIC8qIHJ0bDpyYXc6CiAgcmlnaHQ6IDA7CiAgKi8KICBib3R0b206IDA7CiAgLyogcnRsOnJlbW92ZSAqLwogIGxlZnQ6IDA7CiAgei1pbmRleDogMTAwOyAvKiBCZWhpbmQgdGhlIG5hdmJhciAqLwogIHBhZGRpbmc6IDQ4cHggMCAwOyAvKiBIZWlnaHQgb2YgbmF2YmFyICovCiAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAuMSk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkgewogIC5zaWRlYmFyIHsKICAgIHRvcDogNXJlbTsKICB9Cn0KCi5zaWRlYmFyLXN0aWNreSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogMDsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0OHB4KTsKICBwYWRkaW5nLXRvcDogLjVyZW07CiAgb3ZlcmZsb3cteDogaGlkZGVuOwogIG92ZXJmbG93LXk6IGF1dG87IC8qIFNjcm9sbGFibGUgY29udGVudHMgaWYgdmlld3BvcnQgaXMgc2hvcnRlciB0aGFuIGNvbnRlbnQuICovCn0KCi5zaWRlYmFyIC5uYXYtbGluayB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBjb2xvcjogIzMzMzsKfQoKLnNpZGViYXIgLm5hdi1saW5rIC5mZWF0aGVyIHsKICBtYXJnaW4tcmlnaHQ6IDRweDsKICBjb2xvcjogIzcyNzI3MjsKfQoKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSB7CiAgY29sb3I6ICMyNDcwZGM7Cn0KCi5zaWRlYmFyIC5uYXYtbGluazpob3ZlciAuZmVhdGhlciwKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSAuZmVhdGhlciB7CiAgY29sb3I6IGluaGVyaXQ7Cn0KCi5zaWRlYmFyLWhlYWRpbmcgewogIGZvbnQtc2l6ZTogLjc1cmVtOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi8qCiAqIE5hdmJhcgogKi8KCi5uYXZiYXItYnJhbmQgewogIHBhZGRpbmctdG9wOiAuNzVyZW07CiAgcGFkZGluZy1ib3R0b206IC43NXJlbTsKICBmb250LXNpemU6IDFyZW07CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMjUpOwogIGJveC1zaGFkb3c6IGluc2V0IC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgLjI1KTsKfQoKLm5hdmJhciAubmF2YmFyLXRvZ2dsZXIgewogIHRvcDogLjI1cmVtOwogIHJpZ2h0OiAxcmVtOwp9CgoubmF2YmFyIC5mb3JtLWNvbnRyb2wgewogIHBhZGRpbmc6IC43NXJlbSAxcmVtOwogIGJvcmRlci13aWR0aDogMDsKICBib3JkZXItcmFkaXVzOiAwOwp9CgouZm9ybS1jb250cm9sLWRhcmsgewogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjEpOwogIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuMSk7Cn0KCi5mb3JtLWNvbnRyb2wtZGFyazpmb2N1cyB7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAuMjUpOwp9Cg==",
        "summary": "100L | dashboard.css | .css | 1.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\sidebars.css",
        "type": ".css",
        "size_kb": 1.9,
        "content": "Ym9keSB7CiAgbWluLWhlaWdodDogMTAwdmg7CiAgbWluLWhlaWdodDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKfQoKaHRtbCB7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwp9CgptYWluIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogbm93cmFwOwogIGhlaWdodDogMTAwdmg7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwogIG1heC1oZWlnaHQ6IDEwMHZoOwogIG92ZXJmbG93LXg6IGF1dG87CiAgb3ZlcmZsb3cteTogaGlkZGVuOwp9CgouYi1leGFtcGxlLWRpdmlkZXIgewogIGZsZXgtc2hyaW5rOiAwOwogIHdpZHRoOiAxLjVyZW07CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4xKTsKICBib3JkZXI6IHNvbGlkIHJnYmEoMCwgMCwgMCwgLjE1KTsKICBib3JkZXItd2lkdGg6IDFweCAwOwogIGJveC1zaGFkb3c6IGluc2V0IDAgLjVlbSAxLjVlbSByZ2JhKDAsIDAsIDAsIC4xKSwgaW5zZXQgMCAuMTI1ZW0gLjVlbSByZ2JhKDAsIDAsIDAsIC4xNSk7Cn0KCi5iaSB7CiAgdmVydGljYWwtYWxpZ246IC0uMTI1ZW07CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgZmlsbDogY3VycmVudENvbG9yOwp9CgouZHJvcGRvd24tdG9nZ2xlIHsgb3V0bGluZTogMDsgfQoKLm5hdi1mbHVzaCAubmF2LWxpbmsgewogIGJvcmRlci1yYWRpdXM6IDA7Cn0KCi5idG4tdG9nZ2xlIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IC4yNXJlbSAuNXJlbTsKICBmb250LXdlaWdodDogNjAwOwogIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgYm9yZGVyOiAwOwp9Ci5idG4tdG9nZ2xlOmhvdmVyLAouYnRuLXRvZ2dsZTpmb2N1cyB7CiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjg1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJmNGVhOwp9CgouYnRuLXRvZ2dsZTo6YmVmb3JlIHsKICB3aWR0aDogMS4yNWVtOwogIGxpbmUtaGVpZ2h0OiAwOwogIGNvbnRlbnQ6IHVybCgiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxNicgaGVpZ2h0PScxNicgdmlld0JveD0nMCAwIDE2IDE2JyUzZSUzY3BhdGggZmlsbD0nbm9uZScgc3Ryb2tlPSdyZ2JhJTI4MCwwLDAsLjUlMjknIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNSAxNGw2LTYtNi02Jy8lM2UlM2Mvc3ZnJTNlIik7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zNXMgZWFzZTsKICB0cmFuc2Zvcm0tb3JpZ2luOiAuNWVtIDUwJTsKfQoKLmJ0bi10b2dnbGVbYXJpYS1leHBhbmRlZD0idHJ1ZSJdIHsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuODUpOwp9Ci5idG4tdG9nZ2xlW2FyaWEtZXhwYW5kZWQ9InRydWUiXTo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7Cn0KCi5idG4tdG9nZ2xlLW5hdiBhIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBwYWRkaW5nOiAuMTg3NXJlbSAuNXJlbTsKICBtYXJnaW4tdG9wOiAuMTI1cmVtOwogIG1hcmdpbi1sZWZ0OiAxLjI1cmVtOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouYnRuLXRvZ2dsZS1uYXYgYTpob3ZlciwKLmJ0bi10b2dnbGUtbmF2IGE6Zm9jdXMgewogIGJhY2tncm91bmQtY29sb3I6ICNkMmY0ZWE7Cn0KCi5zY3JvbGxhcmVhIHsKICBvdmVyZmxvdy15OiBhdXRvOwp9CgouZnctc2VtaWJvbGQgeyBmb250LXdlaWdodDogNjAwOyB9Ci5saC10aWdodCB7IGxpbmUtaGVpZ2h0OiAxLjI1OyB9Cg==",
        "summary": "89L | sidebars.css | .css | 1.9 KB"
      },
      {
        "path": "frontend\\src\\App.css",
        "type": ".css",
        "size_kb": 0.6,
        "content": "I3Jvb3QgewogIG1heC13aWR0aDogMTI4MHB4OwogIG1hcmdpbjogMCBhdXRvOwogIHBhZGRpbmc6IDJyZW07CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoubG9nbyB7CiAgaGVpZ2h0OiA2ZW07CiAgcGFkZGluZzogMS41ZW07CiAgd2lsbC1jaGFuZ2U6IGZpbHRlcjsKICB0cmFuc2l0aW9uOiBmaWx0ZXIgMzAwbXM7Cn0KLmxvZ286aG92ZXIgewogIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDJlbSAjNjQ2Y2ZmYWEpOwp9Ci5sb2dvLnJlYWN0OmhvdmVyIHsKICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAyZW0gIzYxZGFmYmFhKTsKfQoKQGtleWZyYW1lcyBsb2dvLXNwaW4gewogIGZyb20gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7CiAgfQogIHRvIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7CiAgfQp9CgpAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IG5vLXByZWZlcmVuY2UpIHsKICBhOm50aC1vZi10eXBlKDIpIC5sb2dvIHsKICAgIGFuaW1hdGlvbjogbG9nby1zcGluIGluZmluaXRlIDIwcyBsaW5lYXI7CiAgfQp9CgouY2FyZCB7CiAgcGFkZGluZzogMmVtOwp9CgoucmVhZC10aGUtZG9jcyB7CiAgY29sb3I6ICM4ODg7Cn0K",
        "summary": "42L | App.css | .css | 0.6 KB"
      },
      {
        "path": "frontend\\src\\App.jsx",
        "type": ".jsx",
        "size_kb": 1.5,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgUXVhbnRQcm92aWRlciB9IGZyb20gIi4vY29udGV4dC9RdWFudENvbnRleHQiOwppbXBvcnQgSGVhZGVyIGZyb20gIi4vY29tcG9uZW50cy9IZWFkZXIiOwppbXBvcnQgU2lkZWJhciBmcm9tICIuL2NvbXBvbmVudHMvU2lkZWJhciI7CmltcG9ydCBRdWFudFN1bW1hcnlQYW5lbCBmcm9tICIuL2NvbXBvbmVudHMvUXVhbnRTdW1tYXJ5UGFuZWwiOwppbXBvcnQgTWFya2V0IGZyb20gIi4vcGFnZXMvTWFya2V0IjsKaW1wb3J0IE1vbml0b3IgZnJvbSAiLi9wYWdlcy9Nb25pdG9yIjsKaW1wb3J0IEFsZXJ0cyBmcm9tICIuL3BhZ2VzL0FsZXJ0cyI7CmltcG9ydCBEaWFnbm9zdGljcyBmcm9tICIuL3BhZ2VzL0RpYWdub3N0aWNzIjsKaW1wb3J0ICIuL2luZGV4LmNzcyI7IC8vIFRhaWx3aW5kICsgVHJlbW9yIHN0eWxlcwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkgewogIGNvbnN0IFtyb3V0ZSwgc2V0Um91dGVdID0gUmVhY3QudXNlU3RhdGUoIm1hcmtldCIpOyAvLyBtYXJrZXQgfCBtb25pdG9yIHwgYWxlcnRzIHwgZGlhZ25vc3RpY3MKCiAgcmV0dXJuICgKICAgIDxRdWFudFByb3ZpZGVyPgogICAgICA8ZGl2IGNsYXNzTmFtZT0ibWluLWgtc2NyZWVuIGJnLXNsYXRlLTk1MCB0ZXh0LXRyZW1vci1jb250ZW50IGRhcms6dGV4dC1kYXJrLXRyZW1vci1jb250ZW50IGFudGlhbGlhc2VkIj4KICAgICAgICB7LyogTWFpbiBDb250YWluZXIgKi99CiAgICAgICAgPGRpdiBjbGFzc05hbWU9Im14LWF1dG8gbWF4LXctc2NyZWVuLTJ4bCBwLTQgbWQ6cC0xMCBzcGFjZS15LTYiPgogICAgICAgICAgCiAgICAgICAgICB7LyogSGVhZGVyICovfQogICAgICAgICAgPEhlYWRlciBvblJvdXRlQ2hhbmdlPXtzZXRSb3V0ZX0gY3VycmVudFJvdXRlPXtyb3V0ZX0gLz4KCiAgICAgICAgICB7LyogUXVhbnRTdW1tYXJ5UGFuZWwgKGxpdmUgc3RhdHMpICovfQogICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im10LTIiPgogICAgICAgICAgICA8UXVhbnRTdW1tYXJ5UGFuZWwgc29ja2V0PXt3aW5kb3c/LnF1YW50U29ja2V0fSAvPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgey8qIE1haW4gR3JpZCAqL30KICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGdhcC02Ij4KICAgICAgICAgICAgPFNpZGViYXIgY3VycmVudD17cm91dGV9IG9uQ2hhbmdlPXtzZXRSb3V0ZX0gLz4KICAgICAgICAgICAgPG1haW4gY2xhc3NOYW1lPSJmbGV4LTEgc3BhY2UteS02Ij4KICAgICAgICAgICAgICB7cm91dGUgPT09ICJtYXJrZXQiICYmIDxNYXJrZXQgLz59CiAgICAgICAgICAgICAge3JvdXRlID09PSAibW9uaXRvciIgJiYgPE1vbml0b3IgLz59CiAgICAgICAgICAgICAge3JvdXRlID09PSAiYWxlcnRzIiAmJiA8QWxlcnRzIC8+fQogICAgICAgICAgICAgIHtyb3V0ZSA9PT0gImRpYWdub3N0aWNzIiAmJiA8RGlhZ25vc3RpY3MgLz59CiAgICAgICAgICAgIDwvbWFpbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvUXVhbnRQcm92aWRlcj4KICApOwp9Cg==",
        "summary": "43L | App.jsx | .jsx | 1.5 KB"
      },
      {
        "path": "frontend\\src\\index.css",
        "type": ".css",
        "size_kb": 0.2,
        "content": "QHRhaWx3aW5kIGJhc2U7CkB0YWlsd2luZCBjb21wb25lbnRzOwpAdGFpbHdpbmQgdXRpbGl0aWVzOwoKaHRtbCB7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKfQoKYm9keSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzBiMGYxMjsKICBjb2xvcjogI2U2ZWVmNjsKfQo=",
        "summary": "13L | index.css | .css | 0.2 KB"
      },
      {
        "path": "frontend\\src\\main.jsx",
        "type": ".jsx",
        "size_kb": 0.2,
        "content": "aW1wb3J0IHsgU3RyaWN0TW9kZSB9IGZyb20gJ3JlYWN0JwppbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSAncmVhY3QtZG9tL2NsaWVudCcKaW1wb3J0ICcuL2luZGV4LmNzcycKaW1wb3J0IEFwcCBmcm9tICcuL0FwcC5qc3gnCgpjcmVhdGVSb290KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpLnJlbmRlcigKICA8U3RyaWN0TW9kZT4KICAgIDxBcHAgLz4KICA8L1N0cmljdE1vZGU+LAopCg==",
        "summary": "10L | main.jsx | .jsx | 0.2 KB"
      },
      {
        "path": "frontend\\src\\components\\Header.jsx",
        "type": ".jsx",
        "size_kb": 2.0,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IEJlbGxJY29uLCBDbG91ZEljb24gfSBmcm9tICJsdWNpZGUtcmVhY3QiOwppbXBvcnQgeyBtb3Rpb24gfSBmcm9tICJmcmFtZXItbW90aW9uIjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlcih7IG9uUm91dGVDaGFuZ2UsIGN1cnJlbnRSb3V0ZSB9KSB7CiAgY29uc3QgeyB3c1N0YXR1cywgdXB0aW1lUGN0LCBhbGVydHMgfSA9IHVzZVF1YW50KCk7CiAgY29uc3Qgc3RhdHVzQ29sb3IgPSB3c1N0YXR1cyA9PT0gIm9wZW4iID8gImJnLWVtZXJhbGQtNTAwIiA6IHdzU3RhdHVzID09PSAiY29ubmVjdGluZyIgPyAiYmctYW1iZXItNDAwIiA6ICJiZy1yb3NlLTUwMCI7CgogIHJldHVybiAoCiAgICA8aGVhZGVyIGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHB4LTQgcHktMyBib3JkZXItYiBib3JkZXItZ3JheS04MDAgYmctZ3JheS05NTAiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQiPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGQiPlF1YW50IENvbW1hbmQgRGFzaGJvYXJkIHY0PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIHRleHQtc20iPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgaW5saW5lLWJsb2NrIHctMyBoLTMgcm91bmRlZC1mdWxsICR7c3RhdHVzQ29sb3J9YH0gdGl0bGU9e2BXUzogJHt3c1N0YXR1c31gfSAvPgogICAgICAgICAgPHNwYW4+V1M6IHt3c1N0YXR1c308L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9Im9wYWNpdHktNzAiPuKAojwvc3Bhbj4KICAgICAgICAgIDxDbG91ZEljb24gY2xhc3NOYW1lPSJ3LTQgaC00IGlubGluZSIgLz4KICAgICAgICAgIDxzcGFuPlVwdGltZSB7dXB0aW1lUGN0fSU8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGdhcC00Ij4KICAgICAgICA8bmF2IGNsYXNzTmFtZT0iZmxleCBnYXAtMiI+CiAgICAgICAgICB7WyJtYXJrZXQiLCAibW9uaXRvciIsICJhbGVydHMiLCAiZGlhZ25vc3RpY3MiXS5tYXAoKHIpID0+ICgKICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgIGtleT17cn0KICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblJvdXRlQ2hhbmdlKHIpfQogICAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSByb3VuZGVkIHRleHQtc20gJHtjdXJyZW50Um91dGUgPT09IHIgPyAiYmctZ3JheS04MDAiIDogImJnLXRyYW5zcGFyZW50IGhvdmVyOmJnLWdyYXktODAwIn1gfQogICAgICAgICAgICA+CiAgICAgICAgICAgICAge3IudG9VcHBlckNhc2UoKX0KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICApKX0KICAgICAgICA8L25hdj4KCiAgICAgICAgPGJ1dHRvbiB0aXRsZT17YCR7YWxlcnRzLmxlbmd0aH0gYWxlcnRzYH0gY2xhc3NOYW1lPSJyZWxhdGl2ZSI+CiAgICAgICAgICA8QmVsbEljb24gY2xhc3NOYW1lPSJ3LTUgaC01IiAvPgogICAgICAgICAge2FsZXJ0cy5sZW5ndGggPiAwICYmICgKICAgICAgICAgICAgPG1vdGlvbi5zcGFuCiAgICAgICAgICAgICAgaW5pdGlhbD17eyBzY2FsZTogMC43IH19CiAgICAgICAgICAgICAgYW5pbWF0ZT17eyBzY2FsZTogMSB9fQogICAgICAgICAgICAgIGNsYXNzTmFtZT0iYWJzb2x1dGUgLXRvcC0yIC1yaWdodC0yIGJnLXJvc2UtNTAwIHRleHQteHMgcm91bmRlZC1mdWxsIHB4LTEiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICB7YWxlcnRzLmxlbmd0aH0KICAgICAgICAgICAgPC9tb3Rpb24uc3Bhbj4KICAgICAgICAgICl9CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgKTsKfQo=",
        "summary": "51L | Header.jsx | .jsx | 2.0 KB"
      },
      {
        "path": "frontend\\src\\components\\QuantSummaryPanel.jsx",
        "type": ".jsx",
        "size_kb": 2.8,
        "content": "CmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAicmVhY3QiOwppbXBvcnQgeyBDYXJkIH0gZnJvbSAiQHRyZW1vci9yZWFjdCI7CmltcG9ydCB7IG1vdGlvbiB9IGZyb20gImZyYW1lci1tb3Rpb24iOwppbXBvcnQgeyBBY3Rpdml0eSwgVHJlbmRpbmdVcCwgVHJlbmRpbmdEb3duIH0gZnJvbSAibHVjaWRlLXJlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFF1YW50U3VtbWFyeVBhbmVsKHsgc29ja2V0IH0pIHsKICBjb25zdCBbc3VtbWFyeSwgc2V0U3VtbWFyeV0gPSB1c2VTdGF0ZSh7CiAgICB0b3RhbE9JOiAwLAogICAgYXZnWjogMCwKICAgIHN0cm9uZ2VzdEJpYXM6ICItIiwKICAgIGJpYXNEaXI6ICJuZXV0cmFsIiwKICAgIHVwZGF0ZWQ6IG51bGwsCiAgfSk7CgogIGNvbnN0IFtwdWxzZSwgc2V0UHVsc2VdID0gdXNlU3RhdGUoZmFsc2UpOwoKICAvLyBSRVNUIGZhbGxiYWNrCiAgY29uc3QgZmV0Y2hTdW1tYXJ5ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goaW1wb3J0Lm1ldGEuZW52LlZJVEVfQVBJX0JBU0UgKyAiL3F1YW50X3N1bW1hcnkiKTsKICAgICAgaWYgKHJlcy5vaykgewogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpOwogICAgICAgIHVwZGF0ZVN1bW1hcnkoZGF0YSk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBjb25zb2xlLndhcm4oIlF1YW50U3VtbWFyeSBSRVNUIGZhaWxlZCIsIGVycik7CiAgICB9CiAgfTsKCiAgY29uc3QgdXBkYXRlU3VtbWFyeSA9IChkYXRhKSA9PiB7CiAgICBzZXRTdW1tYXJ5KHsKICAgICAgdG90YWxPSTogZGF0YS50b3RhbF9vaSA/PyAwLAogICAgICBhdmdaOiBkYXRhLmF2Z196ID8/IDAsCiAgICAgIHN0cm9uZ2VzdEJpYXM6IGRhdGEuc3Ryb25nZXN0X3N5bWJvbCA/PyAiLSIsCiAgICAgIGJpYXNEaXI6IGRhdGEuYmlhcyA/PyAibmV1dHJhbCIsCiAgICAgIHVwZGF0ZWQ6IG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCksCiAgICB9KTsKICAgIHNldFB1bHNlKHRydWUpOwogICAgc2V0VGltZW91dCgoKSA9PiBzZXRQdWxzZShmYWxzZSksIDQwMCk7CiAgfTsKCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGlmICghc29ja2V0KSByZXR1cm47CiAgICBzb2NrZXQub24oInF1YW50X3N1bW1hcnkiLCAoZGF0YSkgPT4gdXBkYXRlU3VtbWFyeShkYXRhKSk7CiAgICBmZXRjaFN1bW1hcnkoKTsKICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoZmV0Y2hTdW1tYXJ5LCAzMDAwMCk7CiAgICByZXR1cm4gKCkgPT4gewogICAgICBzb2NrZXQub2ZmKCJxdWFudF9zdW1tYXJ5Iik7CiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgfTsKICB9LCBbc29ja2V0XSk7CgogIGNvbnN0IGJpYXNDb2xvciA9CiAgICBzdW1tYXJ5LmJpYXNEaXIgPT09ICJsb25nIgogICAgICA/ICJ0ZXh0LWVtZXJhbGQtNDAwIgogICAgICA6IHN1bW1hcnkuYmlhc0RpciA9PT0gInNob3J0IgogICAgICA/ICJ0ZXh0LXJvc2UtNDAwIgogICAgICA6ICJ0ZXh0LWdyYXktNDAwIjsKCiAgcmV0dXJuICgKICAgIDxDYXJkIGNsYXNzTmFtZT0iYmctZ3JheS05NTAgYm9yZGVyLWdyYXktODAwIj4KICAgICAgPG1vdGlvbi5kaXYKICAgICAgICBhbmltYXRlPXtwdWxzZSA/IHsgc2NhbGU6IDEuMDMgfSA6IHsgc2NhbGU6IDEgfX0KICAgICAgICB0cmFuc2l0aW9uPXt7IGR1cmF0aW9uOiAwLjMgfX0KICAgICAgICBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiIKICAgICAgPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtY29sIj4KICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj5Ub3RhbCBPSTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1vbm8iPntzdW1tYXJ5LnRvdGFsT0kudG9Mb2NhbGVTdHJpbmcoKX08L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggZmxleC1jb2wiPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIG9wYWNpdHktNzAiPkF2ZyBaPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbW9ubyI+e3N1bW1hcnkuYXZnWi50b0ZpeGVkKDIpfTwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBmbGV4LWNvbCBpdGVtcy1lbmQiPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIG9wYWNpdHktNzAiPkJpYXM8L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGZsZXggaXRlbXMtY2VudGVyIGdhcC0xICR7Ymlhc0NvbG9yfWB9PgogICAgICAgICAgICB7c3VtbWFyeS5iaWFzRGlyID09PSAibG9uZyIgJiYgPFRyZW5kaW5nVXAgY2xhc3NOYW1lPSJ3LTQgaC00IiAvPn0KICAgICAgICAgICAge3N1bW1hcnkuYmlhc0RpciA9PT0gInNob3J0IiAmJiA8VHJlbmRpbmdEb3duIGNsYXNzTmFtZT0idy00IGgtNCIgLz59CiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0iZm9udC1tb25vIj57c3VtbWFyeS5zdHJvbmdlc3RCaWFzfTwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtY29sIGl0ZW1zLWVuZCB0ZXh0LXhzIG9wYWNpdHktNjAiPgogICAgICAgICAgPEFjdGl2aXR5IGNsYXNzTmFtZT0idy00IGgtNCIgLz4KICAgICAgICAgIDxzcGFuPntzdW1tYXJ5LnVwZGF0ZWR9PC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L21vdGlvbi5kaXY+CiAgICA8L0NhcmQ+CiAgKTsKfQo=",
        "summary": "91L | QuantSummaryPanel.jsx | .jsx | 2.8 KB"
      },
      {
        "path": "frontend\\src\\components\\Sidebar.jsx",
        "type": ".jsx",
        "size_kb": 1.0,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgTGlzdCwgVHJlbmRpbmdVcCwgQmVsbCB9IGZyb20gImx1Y2lkZS1yZWFjdCI7Cgpjb25zdCBpdGVtcyA9IFsKICB7IGtleTogIm1hcmtldCIsIGxhYmVsOiAiTWFya2V0IiwgaWNvbjogPFRyZW5kaW5nVXAgLz4gfSwKICB7IGtleTogIm1vbml0b3IiLCBsYWJlbDogIk1vbml0b3IiLCBpY29uOiA8TGlzdCAvPiB9LAogIHsga2V5OiAiYWxlcnRzIiwgbGFiZWw6ICJBbGVydHMiLCBpY29uOiA8QmVsbCAvPiB9LAogIHsga2V5OiAiZGlhZ25vc3RpY3MiLCBsYWJlbDogIkRpYWdub3N0aWNzIiwgaWNvbjogPExpc3QgLz4gfSwKXTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNpZGViYXIoeyBjdXJyZW50LCBvbkNoYW5nZSB9KSB7CiAgcmV0dXJuICgKICAgIDxhc2lkZSBjbGFzc05hbWU9InctNzIgYm9yZGVyLXIgYm9yZGVyLWdyYXktODAwIHAtMyI+CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtYi00IHRleHQtc20gb3BhY2l0eS04MCI+TmF2aWdhdGlvbjwvZGl2PgogICAgICA8dWwgY2xhc3NOYW1lPSJzcGFjZS15LTIiPgogICAgICAgIHtpdGVtcy5tYXAoKGl0KSA9PiAoCiAgICAgICAgICA8bGkga2V5PXtpdC5rZXl9PgogICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25DaGFuZ2UoaXQua2V5KX0KICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTMgcHgtMyBweS0yIHJvdW5kZWQgJHtjdXJyZW50ID09PSBpdC5rZXkgPyAiYmctZ3JheS04MDAiIDogImhvdmVyOmJnLWdyYXktODAwIn1gfQogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ3LTUgaC01Ij57aXQuaWNvbn08L3NwYW4+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJmbGV4LTEgdGV4dC1sZWZ0Ij57aXQubGFiZWx9PC9zcGFuPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvbGk+CiAgICAgICAgKSl9CiAgICAgIDwvdWw+CiAgICA8L2FzaWRlPgogICk7Cn0K",
        "summary": "30L | Sidebar.jsx | .jsx | 1.0 KB"
      },
      {
        "path": "frontend\\src\\context\\QuantContext.jsx",
        "type": ".jsx",
        "size_kb": 5.0,
        "content": "aW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gInJlYWN0IjsKaW1wb3J0IGlvIGZyb20gInNvY2tldC5pby1jbGllbnQiOyAvLyBzb2NrZXQuaW8tY2xpZW50CmltcG9ydCB7IG1vdGlvbiB9IGZyb20gImZyYW1lci1tb3Rpb24iOwoKY29uc3QgUXVhbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpOwpleHBvcnQgY29uc3QgdXNlUXVhbnQgPSAoKSA9PiB1c2VDb250ZXh0KFF1YW50Q29udGV4dCk7CgovKioKICogQ29uZmlnIG5vdGVzOgogKiAtIFNPQ0tFVF9VUkw6IHNldCBpbiAuZW52IChWaXRlOiBWSVRFX0FQSV9CQVNFKQogKiAtIFJFU1QgZmFsbGJhY2sgZXZlcnkgMzBzIGlmIG5vIFdTIG1lc3NhZ2VzIChhdXRvIHN3aXRjaGluZykKICogLSBFeHBvc2VzOiBtZXRyaWNzIChtYXApLCBzZWxlY3RlZFN5bWJvbCwgd3NTdGF0dXMsIHVwdGltZVBjdCwgYWxlcnRzW10sIHJlZnJlc2goKSBoZWxwZXIKICovCgpjb25zdCBTT0NLRVRfVVJMID0gaW1wb3J0Lm1ldGEuZW52LlZJVEVfV1NfVVJMIHx8ICJodHRwOi8vbG9jYWxob3N0OjUxNzMiOyAvLyByZXBsYWNlIHdpdGggeW91ciB3cyBob3N0CmNvbnN0IFJFU1RfQkFTRSA9IGltcG9ydC5tZXRhLmVudi5WSVRFX0FQSV9CQVNFIHx8ICIvYXBpIjsKCmV4cG9ydCBjb25zdCBRdWFudFByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4gewogIGNvbnN0IFttZXRyaWNzLCBzZXRNZXRyaWNzXSA9IHVzZVN0YXRlKHt9KTsgLy8ge1BBSVI6IHsuLi59fQogIGNvbnN0IFtzZWxlY3RlZFN5bWJvbCwgc2V0U2VsZWN0ZWRTeW1ib2xdID0gdXNlU3RhdGUobnVsbCk7CiAgY29uc3QgW3dzU3RhdHVzLCBzZXRXc1N0YXR1c10gPSB1c2VTdGF0ZSgiaWRsZSIpOyAvLyBjb25uZWN0aW5nIHwgb3BlbiB8IGNsb3NlZCB8IGVycm9yCiAgY29uc3QgW3VwdGltZVBjdCwgc2V0VXB0aW1lUGN0XSA9IHVzZVN0YXRlKDApOwogIGNvbnN0IFthbGVydHMsIHNldEFsZXJ0c10gPSB1c2VTdGF0ZShbXSk7CiAgY29uc3Qgc29ja2V0UmVmID0gdXNlUmVmKG51bGwpOwogIGNvbnN0IGxhc3RXc1RzUmVmID0gdXNlUmVmKERhdGUubm93KCkpOwogIGNvbnN0IGZhbGxiYWNrVGltZXJSZWYgPSB1c2VSZWYobnVsbCk7CgogIC8vIEhlbHBlciB0byBtZXJnZSBpbmNvbWluZyBtZXRyaWMgcm93cyAoZnJvbSBXUyBvciBSRVNUKQogIGNvbnN0IHVwc2VydE1ldHJpY3MgPSAocm93cyA9IFtdKSA9PiB7CiAgICBzZXRNZXRyaWNzKHByZXYgPT4gewogICAgICBjb25zdCBuZXh0ID0geyAuLi5wcmV2IH07CiAgICAgIHJvd3MuZm9yRWFjaChyID0+IHsKICAgICAgICBjb25zdCBzeW0gPSByLnN5bWJvbCB8fCByLnBhaXIgfHwgci5zeW07CiAgICAgICAgaWYgKCFzeW0pIHJldHVybjsKICAgICAgICBuZXh0W3N5bV0gPSB7IC4uLihuZXh0W3N5bV0gfHwge30pLCAuLi5yLCB1cGRhdGVkQXQ6IERhdGUubm93KCkgfTsKICAgICAgfSk7CiAgICAgIHJldHVybiBuZXh0OwogICAgfSk7CiAgfTsKCiAgLy8gQmFzaWMgYWxlcnQgZGV0ZWN0aW9uIChaID4gMi41IGV0Yy4pIOKAlCB0d2VhayB0byB5b3VyIHJ1bGVzCiAgY29uc3QgZXZhbHVhdGVBbGVydHMgPSAocm93cyA9IFtdKSA9PiB7CiAgICBjb25zdCBuZXdBbGVydHMgPSBbXTsKICAgIHJvd3MuZm9yRWFjaChyID0+IHsKICAgICAgaWYgKHIuWiAmJiByLlogPiAyLjUpIG5ld0FsZXJ0cy5wdXNoKHsgc3ltYm9sOiByLnN5bWJvbCwgcmVhc29uOiBgWj0ke3IuWn1gLCB0czogRGF0ZS5ub3coKSwgc2V2ZXJpdHk6ICJoaWdoIiB9KTsKICAgICAgaWYgKHIuTFMgJiYgci5MUyA+IDIpIG5ld0FsZXJ0cy5wdXNoKHsgc3ltYm9sOiByLnN5bWJvbCwgcmVhc29uOiBgTFM9JHtyLkxTfWAsIHRzOiBEYXRlLm5vdygpLCBzZXZlcml0eTogIm1lZGl1bSIgfSk7CiAgICAgIGlmIChyLmltYiAmJiBNYXRoLmFicyhyLmltYikgPiAwLjAzKSBuZXdBbGVydHMucHVzaCh7IHN5bWJvbDogci5zeW1ib2wsIHJlYXNvbjogYGltYj0keyhyLmltYioxMDApLnRvRml4ZWQoMil9JWAsIHRzOiBEYXRlLm5vdygpLCBzZXZlcml0eTogImxvdyIgfSk7CiAgICB9KTsKICAgIGlmIChuZXdBbGVydHMubGVuZ3RoKSBzZXRBbGVydHMocHJldiA9PiBbLi4ubmV3QWxlcnRzLCAuLi5wcmV2XS5zbGljZSgwLCAyMDApKTsKICB9OwoKICAvLyBSRVNUIGZldGNoIGZvciBhbGwgbWV0cmljcyAoZmFsbGJhY2sgb3IgYm9vdCkKICBjb25zdCBmZXRjaE1ldHJpY3NSZXN0ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7UkVTVF9CQVNFfS9tZXRyaWNzYCk7CiAgICAgIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoInJlc3QgbWV0cmljcyBmYWlsZWQiKTsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7CiAgICAgIC8vIGV4cGVjdGluZyBhcnJheSBvZiBtZXRyaWMgcm93cwogICAgICB1cHNlcnRNZXRyaWNzKGRhdGEpOwogICAgICBldmFsdWF0ZUFsZXJ0cyhkYXRhKTsKICAgICAgc2V0V3NTdGF0dXMocyA9PiAocyA9PT0gIm9wZW4iID8gcyA6ICJwb2xsaW5nIikpOwogICAgICBsYXN0V3NUc1JlZi5jdXJyZW50ID0gRGF0ZS5ub3coKTsKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIGNvbnNvbGUud2FybigiUkVTVCBtZXRyaWNzIGVycm9yIiwgZSk7CiAgICAgIHNldFdzU3RhdHVzKCJlcnJvciIpOwogICAgICByZXR1cm4gW107CiAgICB9CiAgfTsKCiAgLy8gU3RhcnQgc29ja2V0LCB3aXRoIGV2ZW50IGhhbmRsaW5nCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIHNldFdzU3RhdHVzKCJjb25uZWN0aW5nIik7CiAgICBjb25zdCBzb2NrZXQgPSBpbyhTT0NLRVRfVVJMLCB7IHRyYW5zcG9ydHM6IFsid2Vic29ja2V0Il0sIHBhdGg6ICIvc29ja2V0LmlvIiB9KTsKICAgIHNvY2tldFJlZi5jdXJyZW50ID0gc29ja2V0OwoKICAgIHNvY2tldC5vbigiY29ubmVjdCIsICgpID0+IHsKICAgICAgc2V0V3NTdGF0dXMoIm9wZW4iKTsKICAgICAgbGFzdFdzVHNSZWYuY3VycmVudCA9IERhdGUubm93KCk7CiAgICB9KTsKCiAgICBzb2NrZXQub24oIm1ldHJpY3NfdXBkYXRlIiwgKHBheWxvYWQpID0+IHsKICAgICAgLy8gcGF5bG9hZDogYXJyYXkgb3Igc2luZ2xlIG9iamVjdAogICAgICBsYXN0V3NUc1JlZi5jdXJyZW50ID0gRGF0ZS5ub3coKTsKICAgICAgc2V0V3NTdGF0dXMoIm9wZW4iKTsKICAgICAgY29uc3Qgcm93cyA9IEFycmF5LmlzQXJyYXkocGF5bG9hZCkgPyBwYXlsb2FkIDogW3BheWxvYWRdOwogICAgICB1cHNlcnRNZXRyaWNzKHJvd3MpOwogICAgICBldmFsdWF0ZUFsZXJ0cyhyb3dzKTsKICAgIH0pOwoKICAgIHNvY2tldC5vbigiY29ubmVjdF9lcnJvciIsIChlcnIpID0+IHsKICAgICAgY29uc29sZS53YXJuKCJXUyBjb25uZWN0X2Vycm9yIiwgZXJyKTsKICAgICAgc2V0V3NTdGF0dXMoImVycm9yIik7CiAgICB9KTsKCiAgICBzb2NrZXQub24oImRpc2Nvbm5lY3QiLCAocmVhc29uKSA9PiB7CiAgICAgIHNldFdzU3RhdHVzKCJjbG9zZWQiKTsKICAgICAgY29uc29sZS53YXJuKCJXUyBkaXNjb25uZWN0ZWQiLCByZWFzb24pOwogICAgfSk7CgogICAgLy8gb3B0aW9uYWw6IGhlYWx0aC91cHRpbWUgZXZlbnQKICAgIHNvY2tldC5vbigiaGVhbHRoIiwgKGgpID0+IHsKICAgICAgaWYgKHR5cGVvZiBoLnVwdGltZV9wY3QgPT09ICJudW1iZXIiKSBzZXRVcHRpbWVQY3QoaC51cHRpbWVfcGN0KTsKICAgIH0pOwoKICAgIHJldHVybiAoKSA9PiB7CiAgICAgIHNvY2tldC5kaXNjb25uZWN0KCk7CiAgICAgIHNvY2tldFJlZi5jdXJyZW50ID0gbnVsbDsKICAgIH07CiAgfSwgW10pOwoKICAvLyBGYWxsYmFjayBwb2xsIGxvb3A6IGlmIFdTIGlkbGUgZm9yID4zMHMsIGNhbGwgUkVTVCBldmVyeSAzMHMuCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGNvbnN0IHBvbGxJbnRlcnZhbCA9IDMwXzAwMDsKICAgIGNvbnN0IGNoZWNrID0gYXN5bmMgKCkgPT4gewogICAgICBjb25zdCBpZGxlTXMgPSBEYXRlLm5vdygpIC0gbGFzdFdzVHNSZWYuY3VycmVudDsKICAgICAgaWYgKCFzb2NrZXRSZWYuY3VycmVudCB8fCBzb2NrZXRSZWYuY3VycmVudC5kaXNjb25uZWN0ZWQgfHwgaWRsZU1zID4gcG9sbEludGVydmFsKSB7CiAgICAgICAgLy8gcGVyZm9ybSBmYWxsYmFjayBSRVNUIHBvbGwKICAgICAgICBhd2FpdCBmZXRjaE1ldHJpY3NSZXN0KCk7CiAgICAgIH0KICAgIH07CiAgICAvLyBpbW1lZGlhdGUgd2FybSBSRVNUIGZldGNoIChib290KQogICAgZmV0Y2hNZXRyaWNzUmVzdCgpOwogICAgZmFsbGJhY2tUaW1lclJlZi5jdXJyZW50ID0gc2V0SW50ZXJ2YWwoY2hlY2ssIHBvbGxJbnRlcnZhbCk7CiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChmYWxsYmFja1RpbWVyUmVmLmN1cnJlbnQpOwogIH0sIFtdKTsKCiAgLy8gU21hbGwgcHVibGljIEFQSQogIGNvbnN0IHJlZnJlc2ggPSAoKSA9PiBmZXRjaE1ldHJpY3NSZXN0KCk7CgogIC8vIERlcml2ZWQ6IG5pY2UgbGlnaHR3ZWlnaHQgbWV0cmljcyBsaXN0IChzb3J0ZWQpCiAgY29uc3QgcGFpcnNMaXN0ID0gUmVhY3QudXNlTWVtbygoKSA9PiB7CiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhtZXRyaWNzKS5zb3J0KChhLCBiKSA9PiAoYi5vaSB8fCAwKSAtIChhLm9pIHx8IDApKS5zbGljZSgwLCAxMDAwKTsKICB9LCBbbWV0cmljc10pOwoKICByZXR1cm4gKAogICAgPFF1YW50Q29udGV4dC5Qcm92aWRlcgogICAgICB2YWx1ZT17ewogICAgICAgIG1ldHJpY3MsCiAgICAgICAgcGFpcnNMaXN0LAogICAgICAgIHNlbGVjdGVkU3ltYm9sLAogICAgICAgIHNldFNlbGVjdGVkU3ltYm9sLAogICAgICAgIHdzU3RhdHVzLAogICAgICAgIHVwdGltZVBjdCwKICAgICAgICBhbGVydHMsCiAgICAgICAgcmVmcmVzaCwKICAgICAgfX0KICAgID4KICAgICAge2NoaWxkcmVufQogICAgPC9RdWFudENvbnRleHQuUHJvdmlkZXI+CiAgKTsKfTsK",
        "summary": "152L | QuantContext.jsx | .jsx | 5.0 KB"
      },
      {
        "path": "frontend\\src\\pages\\Alerts.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFsZXJ0cygpIHsKICBjb25zdCB7IGFsZXJ0cyB9ID0gdXNlUXVhbnQoKTsKICByZXR1cm4gKAogICAgPGRpdj4KICAgICAgPGgyIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1lZGl1bSI+QWxlcnRzPC9oMj4KICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTMgbXQtMyI+CiAgICAgICAge2FsZXJ0cy5sZW5ndGggPT09IDAgJiYgPENhcmQ+Tm8gYWxlcnRzIOKAlCBldmVyeXRoaW5nIGNhbG0uPC9DYXJkPn0KICAgICAgICB7YWxlcnRzLm1hcCgoYSwgaSkgPT4gKAogICAgICAgICAgPENhcmQga2V5PXtpfT4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LXNlbWlib2xkIj57YS5zeW1ib2x9PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj57YS5yZWFzb259PC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQtc20gb3BhY2l0eS02MCI+e25ldyBEYXRlKGEudHMpLnRvTG9jYWxlU3RyaW5nKCl9PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9DYXJkPgogICAgICAgICkpfQogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICk7Cn0K",
        "summary": "26L | Alerts.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\pages\\Diagnostics.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpYWdub3N0aWNzKCkgewogIGNvbnN0IHsgd3NTdGF0dXMsIHVwdGltZVBjdCwgcmVmcmVzaCB9ID0gdXNlUXVhbnQoKTsKICByZXR1cm4gKAogICAgPGRpdiBjbGFzc05hbWU9InNwYWNlLXktNCI+CiAgICAgIDxoMiBjbGFzc05hbWU9InRleHQtbGcgZm9udC1tZWRpdW0iPkRpYWdub3N0aWNzPC9oMj4KICAgICAgPENhcmQ+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTMgZ2FwLTMiPgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQteHMgb3BhY2l0eS03MCI+V1MgU3RhdHVzPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LW1vbm8iPnt3c1N0YXR1c308L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQteHMgb3BhY2l0eS03MCI+VXB0aW1lPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LW1vbm8iPnt1cHRpbWVQY3R9JTwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj4mbmJzcDs8L2Rpdj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9InB4LTMgcHktMSBiZy1ncmF5LTgwMCByb3VuZGVkIiBvbkNsaWNrPXtyZWZyZXNofT5Gb3JjZSByZWZyZXNoPC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9DYXJkPgogICAgPC9kaXY+CiAgKTsKfQo=",
        "summary": "28L | Diagnostics.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\pages\\Market.jsx",
        "type": ".jsx",
        "size_kb": 1.6,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQsIFRhYmxlLCBUYWJsZUhlYWQsIFRhYmxlUm93LCBUYWJsZUNlbGwsIFRhYmxlQm9keSB9IGZyb20gIkB0cmVtb3IvcmVhY3QiOwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWFya2V0KCkgewogIGNvbnN0IHsgcGFpcnNMaXN0LCBzZXRTZWxlY3RlZFN5bWJvbCB9ID0gdXNlUXVhbnQoKTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIj4KICAgICAgICA8aDIgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbWVkaXVtIj5NYXJrZXQg4oCUIFBhaXJzPC9oMj4KICAgICAgPC9kaXY+CgogICAgICA8Q2FyZD4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ib3ZlcmZsb3ctYXV0byBtYXgtaC1bNjB2aF0iPgogICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT0idy1mdWxsIHRhYmxlLWZpeGVkIHRleHQtc20iPgogICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPSJ0ZXh0LWxlZnQgdGV4dC14cyBvcGFjaXR5LTcwIHVwcGVyY2FzZSI+CiAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0icC0yIj5TeW1ib2w8L3RoPgogICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0icC0yIj5PSTwvdGg+CiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJwLTIiPkxTPC90aD4KICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9InAtMiI+RnVuZGluZzwvdGg+CiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJwLTIiPlo8L3RoPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICB7cGFpcnNMaXN0Lm1hcCgocCkgPT4gKAogICAgICAgICAgICAgICAgPHRyIGtleT17cC5zeW1ib2x9IGNsYXNzTmFtZT0iaG92ZXI6YmctZ3JheS04NTAgY3Vyc29yLXBvaW50ZXIiIG9uQ2xpY2s9eygpID0+IHNldFNlbGVjdGVkU3ltYm9sKHAuc3ltYm9sKX0+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMiBmb250LW1lZGl1bSI+e3Auc3ltYm9sfTwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMiI+eyhwLm9pIHx8IDApLnRvTG9jYWxlU3RyaW5nKCl9PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0yIj57cC5MUz8udG9GaXhlZD8uKDIpID8/ICItIn08L3RkPgogICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPSJwLTIiPntwLmZ1bmRpbmc/LnRvRml4ZWQ/Lig0KSA/PyAiLSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0yIj57cC5aPy50b0ZpeGVkPy4oMikgPz8gIi0ifTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICkpfQogICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9DYXJkPgogICAgPC9kaXY+CiAgKTsKfQo=",
        "summary": "42L | Market.jsx | .jsx | 1.6 KB"
      },
      {
        "path": "frontend\\src\\pages\\Monitor.jsx",
        "type": ".jsx",
        "size_kb": 1.9,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKaW1wb3J0IHsKICBSZXNwb25zaXZlQ29udGFpbmVyLAogIENvbXBvc2VkQ2hhcnQsCiAgWEF4aXMsCiAgWUF4aXMsCiAgVG9vbHRpcCwKICBBcmVhLAogIExpbmUsCiAgQmFyLAp9IGZyb20gInJlY2hhcnRzIjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vbml0b3IoKSB7CiAgY29uc3QgeyBzZWxlY3RlZFN5bWJvbCwgbWV0cmljcyB9ID0gdXNlUXVhbnQoKTsKICBjb25zdCBtZXRyaWMgPSBtZXRyaWNzW3NlbGVjdGVkU3ltYm9sXSB8fCBudWxsOwoKICAvLyBwbGFjZWhvbGRlciB0aW1lc2VyaWVzIGdlbmVyYXRvciBpZiBiYWNrZW5kIHByb3ZpZGVzIG5vIHNlcmllczogYWRhcHQgdG8geW91ciBwYXlsb2FkIHNoYXBlCiAgY29uc3QgbW9ja1RzID0gKG1ldHJpYykgPT4gewogICAgaWYgKCFtZXRyaWMgfHwgIW1ldHJpYy5oaXN0b3J5KSB7CiAgICAgIC8vIGNyZWF0ZSBzbWFsbCBtb2NrCiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7CiAgICAgIHJldHVybiBuZXcgQXJyYXkoMzApLmZpbGwoMCkubWFwKChfLCBpKSA9PiAoeyB0OiBub3cgLSAoMzAgLSBpKSAqIDYwXzAwMCwgcHJpY2U6IChtZXRyaWM/LnByaWNlIHx8IDEwMCkgKyBNYXRoLnNpbihpKSAqIDIsIG9pOiAobWV0cmljPy5vaSB8fCAwKSAqICgxICsgaSAvIDEwMCkgfSkpOwogICAgfQogICAgcmV0dXJuIG1ldHJpYy5oaXN0b3J5OwogIH07CgogIGNvbnN0IGRhdGEgPSBtb2NrVHMobWV0cmljKTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICA8aDIgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbWVkaXVtIj57c2VsZWN0ZWRTeW1ib2wgPyBgTW9uaXRvciDigJQgJHtzZWxlY3RlZFN5bWJvbH1gIDogIk1vbml0b3Ig4oCUIHNlbGVjdCBhIHN5bWJvbCJ9PC9oMj4KICAgICAgPENhcmQ+CiAgICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6IDQyMCB9fT4KICAgICAgICAgIDxSZXNwb25zaXZlQ29udGFpbmVyIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiPgogICAgICAgICAgICA8Q29tcG9zZWRDaGFydCBkYXRhPXtkYXRhfT4KICAgICAgICAgICAgICA8WEF4aXMgZGF0YUtleT0idCIgdGlja0Zvcm1hdHRlcj17KHRzKSA9PiBuZXcgRGF0ZSh0cykudG9Mb2NhbGVUaW1lU3RyaW5nKCl9IC8+CiAgICAgICAgICAgICAgPFlBeGlzIHlBeGlzSWQ9ImxlZnQiIGRvbWFpbj17WyJhdXRvIiwgImF1dG8iXX0gLz4KICAgICAgICAgICAgICA8WUF4aXMgeUF4aXNJZD0icmlnaHQiIG9yaWVudGF0aW9uPSJyaWdodCIgLz4KICAgICAgICAgICAgICA8VG9vbHRpcCBsYWJlbEZvcm1hdHRlcj17KHRzKSA9PiBuZXcgRGF0ZSh0cykudG9Mb2NhbGVTdHJpbmcoKX0gLz4KICAgICAgICAgICAgICA8QXJlYSB5QXhpc0lkPSJsZWZ0IiBkYXRhS2V5PSJvaSIgbmFtZT0iT3BlbiBJbnRlcmVzdCIgZmlsbE9wYWNpdHk9ezAuMDh9IHN0cm9rZVdpZHRoPXswfSAvPgogICAgICAgICAgICAgIDxMaW5lIHlBeGlzSWQ9ImxlZnQiIGRhdGFLZXk9InByaWNlIiBuYW1lPSJQcmljZSIgc3Ryb2tlV2lkdGg9ezJ9IGRvdD17ZmFsc2V9IC8+CiAgICAgICAgICAgICAgPEJhciB5QXhpc0lkPSJyaWdodCIgZGF0YUtleT0ibHNfZGVsdGEiIG5hbWU9IkxTIGRlbHRhIiBiYXJTaXplPXs4fSAvPgogICAgICAgICAgICA8L0NvbXBvc2VkQ2hhcnQ+CiAgICAgICAgICA8L1Jlc3BvbnNpdmVDb250YWluZXI+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvQ2FyZD4KICAgIDwvZGl2PgogICk7Cn0K",
        "summary": "51L | Monitor.jsx | .jsx | 1.9 KB"
      },
      {
        "path": "backend\\tests\\test_metrics.py",
        "type": ".py",
        "size_kb": 0.4,
        "content": "aW1wb3J0IGFzeW5jaW8KZnJvbSBiYWNrZW5kLnNyYy5mdXR1cmVzYm9hcmQubWV0cmljcyBpbXBvcnQgZ2V0X2FsbF9tZXRyaWNzICAjIEFic29sdXRlIGZyb20gYmFja2VuZC90ZXN0cwoKZGVmIHRlc3Rfd2VpZ2h0ZWRfb2koKToKICAgIG1ldHJpY3MgPSBhc3luY2lvLnJ1bihnZXRfYWxsX21ldHJpY3MobGltaXQ9NSkpCiAgICBhc3NlcnQgbGVuKG1ldHJpY3MpID49IDQgICMgVG9wLXZvbCBqaXR0ZXIgOyA+PTQgc3RhYmxlIFAzCiAgICBhc3NlcnQgJ3dlaWdodGVkX29pX3VzZCcgaW4gbWV0cmljc1swXQogICAgYXNzZXJ0IG1ldHJpY3NbMF1bJ3dlaWdodGVkX29pX3VzZCddID4gMAoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHRlc3Rfd2VpZ2h0ZWRfb2koKQ==",
        "summary": "11L | test_metrics.py | .py | 0.4 KB"
      },
      {
        "path": "docs\\api_guide.md",
        "type": ".md",
        "size_kb": 1.2,
        "content": "IyBBUEkgR3VpZGUgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpCYXNlOiBodHRwOi8vMTI3LjAuMC4xOjUwMDAgfCBBdXRoOiBOb25lIChSZWFkLU9ubHkpIHwgRm9ybWF0OiBKU09OIChDb250ZW50LVJhbmdlIHBhZykuCgojIyBFbmRwb2ludHMKCnwgUm91dGUgfCBNZXRob2QgfCBQYXJhbXMgfCBEZXNjIHwgRXhhbXBsZSBDdXJsIHwgUmVzcG9uc2UgVGVhc2UgfAp8LS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwKfCAvYXBpL21ldHJpY3MgfCBHRVQgfCA/dGY9MTVtJmxpbWl0PTIwIHwgUGFnaW5hdGVkIHF1YW50cyAoT0kvTFPOlC9aIGV0Yy4pIHwgYGN1cmwgImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0iIHwganEgJy5bXSB8IHtzeW0sIHpfc2NvcmV9J2AgfCAyMDAge2RhdGE6IFt7c3ltOiJFVEgiLCB6OjEuMjAsIGNvbmZsdWVuY2U6MC4zM31dLCByYW5nZTowLTE5LzIwfSB8CnwgL2hlYWx0aCB8IEdFVCB8IE5vbmUgfCBVcHRpbWUvcmF0ZS9lcnJvcnMgfCBgY3VybCBodHRwOi8vMTI3LjAuMC4xOjUwMDAvaGVhbHRoYCB8IDIwMCB7InVwdGltZSI6OTkuOSwgInJlcV9yYXRlIjozNTAsICJlcnJvcnMiOjB9IHwKfCAvYXBpL3JlcGxheSAoUDQpIHwgR0VUIHwgP3RmPTFoJnN0YXJ0X3RzPS4uLiB8IEJpc2VjdCB0cyBqb2lucyBzaW0gfCBgY3VybCAiL2FwaS9yZXBsYXk/dGY9MWgiIHwganEgJy5ldmVudHNbXSdgIHwgVGVhc2U6IHtldmVudHM6IFt7dHMsIHpfc3Bpa2U6dHJ1ZX1dfSB8CnwgV1MgL3NvY2tldC5pbyB8IFdTIHwgRW1pdDogbWV0cmljc191cGRhdGUgfCBCYXRjaCB0ZiBxdWFudHMgKyBhbGVydHMgfCBGcm9udGVuZDogc29ja2V0LmlvLWNsaWVudCBjb25uZWN0IHwgT246ICdhbGVydF90b2FzdCcge3N5bToiQlRDIiwgdHlwZToiWl9zcGlrZSIsIHZhbDoyLjZ9IHwKCiMjIFZhbGlkYXRpb24gKGNvZGVfZXhlY3V0aW9uIFRlYXNlKQpgYGBweXRob24KaW1wb3J0IHJlcXVlc3RzCnIgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0nKQpkYXRhID0gci5qc29uKCkKcHJpbnQobGVuKGRhdGFbJ2RhdGEnXSksICdwYWlyczsgWiBmaW5pdGU6JywgYWxsKGFicyhkWyd6X3Njb3JlJ10pIDwgMTAgZm9yIGQgaW4gZGF0YVsnZGF0YSddKSkKIyBPdXRwdXQ6IDIwIHBhaXJzOyBaIGZpbml0ZTogVHJ1ZQ==",
        "summary": "20L | api_guide.md | .md | 1.2 KB"
      },
      {
        "path": "docs\\codegen.py",
        "type": ".py",
        "size_kb": 3.2,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKRnVsbCBDb250aW51aXR5IEV4cG9ydCAodjAuNCkKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClNjYW5zIHByb2plY3QgZGlyZWN0b3JpZXMgYW5kIGV4cG9ydHMgYWxsIHNvdXJjZSBmaWxlcyAoUHl0aG9uLCBKUywgUmVhY3QsIENTUywgSFRNTCwgY29uZmlncywgZG9jcykKaW50byBhIHNpbmdsZSBKU09OIGZpbGUgd2l0aCBiYXNlNjQtZW5jb2RlZCBjb250ZW50LgoKT3V0cHV0OiBkb2NzL3Byb2plY3RfZGF0YS5qc29uCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IGJhc2U2NAppbXBvcnQgb3MKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgojID09PSBDT05GSUcgPT09ClBST0pFQ1RfUk9PVCA9IFBhdGgob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguZGlybmFtZShfX2ZpbGVfXykpKS5yZXNvbHZlKCkKSlNPTl9QQVRIID0gUFJPSkVDVF9ST09UIC8gJ2RvY3MnIC8gJ3Byb2plY3RfZGF0YS5qc29uJwoKIyBEaXJlY3RvcmllcyB0byBpbmNsdWRlCkNPREVfRElSUyA9IFsKICAgICdiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQnLAogICAgJ2Zyb250ZW5kL3NyYycsCiAgICAnYmFja2VuZC90ZXN0cycsCiAgICAnZnJvbnRlbmQvcHVibGljJywKICAgICdkb2NzJwpdCgojIEZpbGUgdHlwZXMgdG8gaW5jbHVkZQpBTExPV0VEX0VYVFMgPSBbCiAgICAnLnB5JywgJy5qcycsICcuanN4JywgJy50cycsICcudHN4JywgJy5qc29uJywgJy5tZCcsCiAgICAnLmNzcycsICcuc2NzcycsICcuaHRtbCcsICcueW1sJywgJy55YW1sJywgJy50b21sJywgJy50eHQnLCAnLmluaScKXQoKIyBNYXggZmlsZSBzaXplIChpbiBieXRlcykg4oCUIGluY3JlYXNlIGZvciBmdWxsIHByb2plY3QKTUFYX0ZJTEVfU0laRSA9IDEwMDBfMDAwICAjIH4yNTAgS0IKCiMgPT09IExPR0lDID09PQpkZWYgZ2VuX2NvZGVfc2VjdGlvbigpOgogICAgZmlsZXMgPSBbXQogICAgZm9yIGRpcl9yZWwgaW4gQ09ERV9ESVJTOgogICAgICAgIGRpcl9wYXRoID0gUFJPSkVDVF9ST09UIC8gZGlyX3JlbAogICAgICAgIGlmIG5vdCBkaXJfcGF0aC5leGlzdHMoKToKICAgICAgICAgICAgcHJpbnQoZiLimqDvuI8gIE1pc3NpbmcgZGlyZWN0b3J5OiB7ZGlyX3BhdGh9IikKICAgICAgICAgICAgY29udGludWUKICAgICAgICBmb3IgZmlsZV9wYXRoIGluIGRpcl9wYXRoLnJnbG9iKCcqJyk6CiAgICAgICAgICAgIGlmIG5vdCBmaWxlX3BhdGguaXNfZmlsZSgpOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgc3VmZml4ID0gZmlsZV9wYXRoLnN1ZmZpeC5sb3dlcigpCiAgICAgICAgICAgIGlmIHN1ZmZpeCBpbiBBTExPV0VEX0VYVFMgYW5kIGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSA8IE1BWF9GSUxFX1NJWkU6CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwgJ3InLCBlbmNvZGluZz0ndXRmLTgnLCBlcnJvcnM9J2lnbm9yZScpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQogICAgICAgICAgICAgICAgICAgIGI2NCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoKSkuZGVjb2RlKCkKICAgICAgICAgICAgICAgICAgICBzdW1tYXJ5ID0gZiJ7bGVuKGNvbnRlbnQuc3BsaXRsaW5lcygpKX1MIHwge2ZpbGVfcGF0aC5uYW1lfSB8IHtzdWZmaXh9IHwge3JvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpfSBLQiIKICAgICAgICAgICAgICAgICAgICBmaWxlcy5hcHBlbmQoewogICAgICAgICAgICAgICAgICAgICAgICAicGF0aCI6IHN0cihmaWxlX3BhdGgucmVsYXRpdmVfdG8oUFJPSkVDVF9ST09UKSksCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogc3VmZml4LAogICAgICAgICAgICAgICAgICAgICAgICAic2l6ZV9rYiI6IHJvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpLAogICAgICAgICAgICAgICAgICAgICAgICAiY29udGVudCI6IGI2NCwKICAgICAgICAgICAgICAgICAgICAgICAgInN1bW1hcnkiOiBzdW1tYXJ5CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKchSB7ZmlsZV9wYXRoLm5hbWU6NDB9IHwge3N1bW1hcnl9IikKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKdjCBSZWFkIGZhaWxlZCB7ZmlsZV9wYXRofToge2V9IikKICAgIHJldHVybiB7ImZpbGVzIjogZmlsZXN9CgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgIyBMb2FkIGV4aXN0aW5nIGRhdGEgaWYgcHJlc2VudAogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihKU09OX1BBVEgsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZGF0YSA9IGpzb24ubG9hZChmKQogICAgICAgIHByaW50KCJNZXJnaW5nIGludG8gZXhpc3RpbmcgcHJvamVjdF9kYXRhLmpzb24g4oCmIikKICAgIGV4Y2VwdCAoRmlsZU5vdEZvdW5kRXJyb3IsIGpzb24uSlNPTkRlY29kZUVycm9yKToKICAgICAgICBkYXRhID0geyJwcm9qZWN0IjogeyJuYW1lIjogIkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCIsICJ2ZXJzaW9uIjogInYwLjQifX0KICAgICAgICBwcmludCgiSW5pdGlhbGl6aW5nIG5ldyBKU09OIOKApiIpCgogICAgIyBHZW5lcmF0ZSBjb2RlIHNlY3Rpb24KICAgIGNvZGVfZGF0YSA9IGdlbl9jb2RlX3NlY3Rpb24oKQogICAgZGF0YVsiY29kZSJdID0gY29kZV9kYXRhCiAgICBkYXRhWyJtZXRhZGF0YSJdID0gewogICAgICAgICJ1cGRhdGVkIjogZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVZLSVtLSVkICVIOiVNOiVTIiksCiAgICAgICAgInRvdGFsX2ZpbGVzIjogbGVuKGNvZGVfZGF0YVsiZmlsZXMiXSksCiAgICAgICAgIm1heF9maWxlX3NpemVfa2IiOiByb3VuZChNQVhfRklMRV9TSVpFIC8gMTAyNCwgMSkKICAgIH0KCiAgICAjIFdyaXRlIEpTT04KICAgIHdpdGggb3BlbihKU09OX1BBVEgsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICBqc29uLmR1bXAoZGF0YSwgZiwgaW5kZW50PTIsIGVuc3VyZV9hc2NpaT1GYWxzZSkKCiAgICBwcmludChmIlxu8J+foiBFeHBvcnQgQ29tcGxldGU6IHtsZW4oY29kZV9kYXRhWydmaWxlcyddKX0gZmlsZXMgc2F2ZWQg4oaSIHtKU09OX1BBVEh9IikK",
        "summary": "92L | codegen.py | .py | 3.2 KB"
      },
      {
        "path": "docs\\continuity_log.json",
        "type": ".json",
        "size_kb": 3.7,
        "content": "77u/WwogICAgewogICAgICAgICJ0aW1lc3RhbXAiOiAgIjIwMjUtMTAtMjFUMTI6MTI6MDYiLAogICAgICAgICJwaGFzZSI6ICAiUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMiLAogICAgICAgICJiYWNrZW5kIjogICJoZWFsdGh5IiwKICAgICAgICAidXB0aW1lUGN0IjogIDEwMC4wLAogICAgICAgICJ0b3RhbF9ydW50aW1lIjogIDAuMCwKICAgICAgICAiZG93bnRpbWUiOiAgMC4wLAogICAgICAgICJzdGF0dXMiOiAgImFjdGl2ZSIKICAgIH0sCiAgICB7CiAgICAgICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMVQxMjoxNzowNiIsCiAgICAgICAgInBoYXNlIjogICJQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyIsCiAgICAgICAgImJhY2tlbmQiOiAgImhlYWx0aHkiLAogICAgICAgICJ1cHRpbWVQY3QiOiAgMTAwLjAsCiAgICAgICAgInRvdGFsX3J1bnRpbWUiOiAgMzAwLjAsCiAgICAgICAgImRvd250aW1lIjogIDAuMCwKICAgICAgICAic3RhdHVzIjogICJhY3RpdmUiCiAgICB9LAogICAgewogICAgICAgICJ0aW1lc3RhbXAiOiAgIjIwMjUtMTAtMjFUMTI6MTg6MDciLAogICAgICAgICJwaGFzZSI6ICAiUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMiLAogICAgICAgICJiYWNrZW5kIjogICJoZWFsdGh5IiwKICAgICAgICAidXB0aW1lUGN0IjogIDEwMC4wLAogICAgICAgICJ0b3RhbF9ydW50aW1lIjogIDMwMC4wLAogICAgICAgICJkb3dudGltZSI6ICAwLjAsCiAgICAgICAgInN0YXR1cyI6ICAiYWN0aXZlIgogICAgfSwKICAgIHsKICAgICAgICAidGltZXN0YW1wIjogICIyMDI1LTEwLTIxVDEyOjIwOjAwIiwKICAgICAgICAicGhhc2UiOiAgIlAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIiwKICAgICAgICAiYmFja2VuZCI6ICAiaGVhbHRoeSIsCiAgICAgICAgInVwdGltZVBjdCI6ICAxMDAuMCwKICAgICAgICAidG90YWxfcnVudGltZSI6ICAzMDAuMCwKICAgICAgICAiZG93bnRpbWUiOiAgMC4wLAogICAgICAgICJzdGF0dXMiOiAgImFjdGl2ZSIKICAgIH0sCiAgICB7CiAgICAgICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAxOTozOTozNSIsCiAgICAgICAgInBoYXNlIjogICJQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSIsCiAgICAgICAgImJhY2tlbmQiOiAgInVuaGVhbHRoeSIsCiAgICAgICAgImhhc2hlcyI6ICB7CiAgICAgICAgICAgICAgICAgICAgICAgIm1ldHJpY3MucHkiOiAgIjE3MkUzOTEiLAogICAgICAgICAgICAgICAgICAgICAgICJibHVlcHJpbnQucHkiOiAgIjJFMzBGMDEiLAogICAgICAgICAgICAgICAgICAgICAgICJ1dGlscy5weSI6ICAiNTNDN0JBRSIsCiAgICAgICAgICAgICAgICAgICAgICAgInF1YW50X2VuZ2luZS5weSI6ICAiOTQ5MDZDQSIsCiAgICAgICAgICAgICAgICAgICAgICAgImJpbmFuY2Vfd3NfY2xpZW50LnB5IjogICI3Nzk0N0Q5IiwKICAgICAgICAgICAgICAgICAgICAgICAid3NnaS5weSI6ICAiQUZFQTdGNiIsCiAgICAgICAgICAgICAgICAgICAgICAgIkFwcC5qc3giOiAgIjEwMEMxN0QiLAogICAgICAgICAgICAgICAgICAgICAgICJhcHAucHkiOiAgIjUzRUY0RUUiLAogICAgICAgICAgICAgICAgICAgICAgICJkYi5weSI6ICAiODMxQTBDOCIsCiAgICAgICAgICAgICAgICAgICAgICAgImNsaS5weSI6ICAiMDQwRDUyNCIsCiAgICAgICAgICAgICAgICAgICAgICAgInNjcmFwZXIucHkiOiAgIkVCREQ2M0YiLAogICAgICAgICAgICAgICAgICAgICAgICJjb25maWcucHkiOiAgIjk3NEZDRUEiLAogICAgICAgICAgICAgICAgICAgICAgICJ2ZXJzaW9uLnB5IjogICJBMjg1NDhCIiwKICAgICAgICAgICAgICAgICAgICAgICAiX19pbml0X18ucHkiOiAgIkQyODM1QkYiCiAgICAgICAgICAgICAgICAgICB9CiAgICB9LAogICAgewogICAgICAgICJ0aW1lc3RhbXAiOiAgIjIwMjUtMTAtMjEgMjE6MzM6NDEiLAogICAgICAgICJwaGFzZSI6ICAiUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUiLAogICAgICAgICJiYWNrZW5kIjogICJ1bmhlYWx0aHkiLAogICAgICAgICJoYXNoZXMiOiAgewogICAgICAgICAgICAgICAgICAgICAgICJtZXRyaWNzLnB5IjogICIxNzJFMzkxIiwKICAgICAgICAgICAgICAgICAgICAgICAiYmx1ZXByaW50LnB5IjogICIyRTMwRjAxIiwKICAgICAgICAgICAgICAgICAgICAgICAidXRpbHMucHkiOiAgIjUzQzdCQUUiLAogICAgICAgICAgICAgICAgICAgICAgICJxdWFudF9lbmdpbmUucHkiOiAgIjk0OTA2Q0EiLAogICAgICAgICAgICAgICAgICAgICAgICJiaW5hbmNlX3dzX2NsaWVudC5weSI6ICAiNzc5NDdEOSIsCiAgICAgICAgICAgICAgICAgICAgICAgIndzZ2kucHkiOiAgIkFGRUE3RjYiLAogICAgICAgICAgICAgICAgICAgICAgICJBcHAuanN4IjogICJGRTg3RDhCIiwKICAgICAgICAgICAgICAgICAgICAgICAiYXBwLnB5IjogICI1M0VGNEVFIiwKICAgICAgICAgICAgICAgICAgICAgICAiZGIucHkiOiAgIjgzMUEwQzgiLAogICAgICAgICAgICAgICAgICAgICAgICJjbGkucHkiOiAgIjA0MEQ1MjQiLAogICAgICAgICAgICAgICAgICAgICAgICJzY3JhcGVyLnB5IjogICJFQkRENjNGIiwKICAgICAgICAgICAgICAgICAgICAgICAiY29uZmlnLnB5IjogICI5NzRGQ0VBIiwKICAgICAgICAgICAgICAgICAgICAgICAidmVyc2lvbi5weSI6ICAiQTI4NTQ4QiIsCiAgICAgICAgICAgICAgICAgICAgICAgIl9faW5pdF9fLnB5IjogICJEMjgzNUJGIgogICAgICAgICAgICAgICAgICAgfQogICAgfSwKICAgIHsKICAgICAgICAidGltZXN0YW1wIjogICIyMDI1LTEwLTIxIDIyOjAxOjQ1IiwKICAgICAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICAgICAiYmFja2VuZCI6ICAidW5oZWFsdGh5IiwKICAgICAgICAiaGFzaGVzIjogIHsKICAgICAgICAgICAgICAgICAgICAgICAibWV0cmljcy5weSI6ICAiMTcyRTM5MSIsCiAgICAgICAgICAgICAgICAgICAgICAgImJsdWVwcmludC5weSI6ICAiMkUzMEYwMSIsCiAgICAgICAgICAgICAgICAgICAgICAgInV0aWxzLnB5IjogICI1M0M3QkFFIiwKICAgICAgICAgICAgICAgICAgICAgICAicXVhbnRfZW5naW5lLnB5IjogICI5NDkwNkNBIiwKICAgICAgICAgICAgICAgICAgICAgICAiYmluYW5jZV93c19jbGllbnQucHkiOiAgIjc3OTQ3RDkiLAogICAgICAgICAgICAgICAgICAgICAgICJ3c2dpLnB5IjogICJBRkVBN0Y2IiwKICAgICAgICAgICAgICAgICAgICAgICAiQXBwLmpzeCI6ICAiRkU4N0Q4QiIsCiAgICAgICAgICAgICAgICAgICAgICAgImFwcC5weSI6ICAiNTNFRjRFRSIsCiAgICAgICAgICAgICAgICAgICAgICAgImRiLnB5IjogICI4MzFBMEM4IiwKICAgICAgICAgICAgICAgICAgICAgICAiY2xpLnB5IjogICIwNDBENTI0IiwKICAgICAgICAgICAgICAgICAgICAgICAic2NyYXBlci5weSI6ICAiRUJERDYzRiIsCiAgICAgICAgICAgICAgICAgICAgICAgImNvbmZpZy5weSI6ICAiOTc0RkNFQSIsCiAgICAgICAgICAgICAgICAgICAgICAgInZlcnNpb24ucHkiOiAgIkEyODU0OEIiLAogICAgICAgICAgICAgICAgICAgICAgICJfX2luaXRfXy5weSI6ICAiRDI4MzVCRiIKICAgICAgICAgICAgICAgICAgIH0KICAgIH0KXQo=",
        "summary": "101L | continuity_log.json | .json | 3.7 KB"
      },
      {
        "path": "docs\\continuity_state.json",
        "type": ".json",
        "size_kb": 0.9,
        "content": "77u/ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMjowMTo0NSIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kIjogICJ1bmhlYWx0aHkiLAogICAgInVwdGltZVBjdCI6ICA1Ny4xLAogICAgImZpbGVfaGFzaGVzIjogIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1ldHJpY3MucHkiOiAgIjE3MkUzOTEiLAogICAgICAgICAgICAgICAgICAgICAgICAiYmx1ZXByaW50LnB5IjogICIyRTMwRjAxIiwKICAgICAgICAgICAgICAgICAgICAgICAgInV0aWxzLnB5IjogICI1M0M3QkFFIiwKICAgICAgICAgICAgICAgICAgICAgICAgInF1YW50X2VuZ2luZS5weSI6ICAiOTQ5MDZDQSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJiaW5hbmNlX3dzX2NsaWVudC5weSI6ICAiNzc5NDdEOSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ3c2dpLnB5IjogICJBRkVBN0Y2IiwKICAgICAgICAgICAgICAgICAgICAgICAgIkFwcC5qc3giOiAgIkZFODdEOEIiLAogICAgICAgICAgICAgICAgICAgICAgICAiYXBwLnB5IjogICI1M0VGNEVFIiwKICAgICAgICAgICAgICAgICAgICAgICAgImRiLnB5IjogICI4MzFBMEM4IiwKICAgICAgICAgICAgICAgICAgICAgICAgImNsaS5weSI6ICAiMDQwRDUyNCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJzY3JhcGVyLnB5IjogICJFQkRENjNGIiwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbmZpZy5weSI6ICAiOTc0RkNFQSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ2ZXJzaW9uLnB5IjogICJBMjg1NDhCIiwKICAgICAgICAgICAgICAgICAgICAgICAgIl9faW5pdF9fLnB5IjogICJEMjgzNUJGIgogICAgICAgICAgICAgICAgICAgIH0KfQo=",
        "summary": "22L | continuity_state.json | .json | 0.9 KB"
      },
      {
        "path": "docs\\continuity_state.md",
        "type": ".md",
        "size_kb": 1.3,
        "content": "77u/IyBDb250aW51aXR5IFN0YXRlIC0gQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkCkxhc3QgU3luYzogMjAyNS0xMC0yMSAyMjowMTo0NQpQaGFzZTogUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUKCiMjIENvcmUgRmlsZSBWZXJzaW9ucwp8IG1ldHJpY3MucHkgfCAyMDI1LTEwLTIxIDIyOjAxOjQ1IHwgMTcyRTM5MSB8CnwgYmx1ZXByaW50LnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IDJFMzBGMDEgfAp8IHV0aWxzLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IDUzQzdCQUUgfAp8IHF1YW50X2VuZ2luZS5weSB8IDIwMjUtMTAtMjEgMjI6MDE6NDUgfCA5NDkwNkNBIHwKfCBiaW5hbmNlX3dzX2NsaWVudC5weSB8IDIwMjUtMTAtMjEgMjI6MDE6NDUgfCA3Nzk0N0Q5IHwKfCB3c2dpLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IEFGRUE3RjYgfAp8IEFwcC5qc3ggfCAyMDI1LTEwLTIxIDIyOjAxOjQ1IHwgRkU4N0Q4QiB8CnwgYXBwLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IDUzRUY0RUUgfAp8IGRiLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IDgzMUEwQzggfAp8IGNsaS5weSB8IDIwMjUtMTAtMjEgMjI6MDE6NDUgfCAwNDBENTI0IHwKfCBzY3JhcGVyLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IEVCREQ2M0YgfAp8IGNvbmZpZy5weSB8IDIwMjUtMTAtMjEgMjI6MDE6NDUgfCA5NzRGQ0VBIHwKfCB2ZXJzaW9uLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IEEyODU0OEIgfAp8IF9faW5pdF9fLnB5IHwgMjAyNS0xMC0yMSAyMjowMTo0NSB8IEQyODM1QkYgfAoKIyMgQmFja2VuZCBIZWFsdGgKSGVhbHRoIGNoZWNrIGZhaWxlZAoKIyMgUmVjZW50IFNuYXBzaG90cwp8IFRpbWVzdGFtcCB8IEJhY2tlbmQgfCBQaGFzZSB8CnwtLS0tLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IDIwMjUtMTAtMjFUMTI6MTI6MDYgfCBHcmVlbiAoaGVhbHRoeSkgfCBQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyB8CnwgMjAyNS0xMC0yMVQxMjoxNzowNiB8IEdyZWVuIChoZWFsdGh5KSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE4OjA3IHwgR3JlZW4gKGhlYWx0aHkpIHwgUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMgfAp8IDIwMjUtMTAtMjFUMTI6MjA6MDAgfCBHcmVlbiAoaGVhbHRoeSkgfCBQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyB8CnwgMjAyNS0xMC0yMSAxOTozOTozNSB8IFJlZCAodW5oZWFsdGh5KSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKVXB0aW1lIChsYXN0IDcpOiA0LzcgLT4gNTcuMSUKCg==",
        "summary": "33L | continuity_state.md | .md | 1.3 KB"
      },
      {
        "path": "docs\\gen_blueprint.py",
        "type": ".py",
        "size_kb": 3.4,
        "content": "IyBnZW5fYmx1ZXByaW50LnB5IHYxLjQgKE9jdCAyMCwgMjAyNSkg4oCUIENyb3NzLURyaXZlIEZpeCArIER1cGUgR3VhcmQKIyBSdW46IGNkIGRvY3MgOyBweXRob24gZ2VuX2JsdWVwcmludC5weQppbXBvcnQgc3FsaXRlMwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcmUKaW1wb3J0IHRlbXBmaWxlCmltcG9ydCBvcwppbXBvcnQgc2h1dGlsCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQoKREJfUEFUSCA9IFBhdGgociJFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZFxmdXR1cmVzLmRiIikKTURfUEFUSCA9IFBhdGgoInF1YW50X2JsdWVwcmludC5tZCIpCgpkZWYgY2xlYW5fb2xkX2twaShjb250ZW50OiBzdHIpIC0+IHN0cjoKICAgICIiIlphcCBvbGQgJyMjIEF1dG8tS1BJJyBibG9ja3MgdG8gcHJldmVudCBkdXBlcy4iIiIKICAgIHBhdHRlcm4gPSByIiMjIEF1dG8tS1BJIFVwZGF0ZS4qPyg/PVxuIyMgfFxaKSIKICAgIHJldHVybiByZS5zdWIocGF0dGVybiwgIiIsIGNvbnRlbnQsIGZsYWdzPXJlLkRPVEFMTCkKCmRlZiBzYWZlX3dyaXRlKHBhdGg6IHN0ciwgZGF0YTogc3RyKToKICAgICIiIlRlbXAgaW4gc2FtZSBkaXIgKyBzaHV0aWwubW92ZSBmb3IgY3Jvc3MtZHJpdmUgc2FmZS4iIiIKICAgIGRpcl9wYXRoID0gb3MucGF0aC5kaXJuYW1lKHBhdGgpIG9yICIuIgogICAgd2l0aCB0ZW1wZmlsZS5OYW1lZFRlbXBvcmFyeUZpbGUobW9kZT0idyIsIGRlbGV0ZT1GYWxzZSwgZW5jb2Rpbmc9InV0Zi04Iiwgc3VmZml4PSIubWQiLCBkaXI9ZGlyX3BhdGgpIGFzIHRtcDoKICAgICAgICB0bXAud3JpdGUoZGF0YSkKICAgICAgICB0bXBfcGF0aCA9IHRtcC5uYW1lCiAgICB0cnk6CiAgICAgICAgc2h1dGlsLm1vdmUodG1wX3BhdGgsIHBhdGgpICAjIEhhbmRsZXMgY3Jvc3MtZGV2aWNlCiAgICBleGNlcHQgc2h1dGlsLkVycm9yOgogICAgICAgIG9zLnJlcGxhY2UodG1wX3BhdGgsIHBhdGgpICAjIEZhbGxiYWNrIHNhbWUtZGV2aWNlCgpkZWYgbWFpbigpOgogICAgcHJpbnQoZiJbaV0gREI6IHtEQl9QQVRIfSB8IE1EOiB7TURfUEFUSH0iKQogICAga3BpID0gIiIKCiAgICAjIENvbm4gKyBxdWVyeSAod2l0aCBndWFyZDsgY29sPXZvbF91c2QgbWF0Y2ggc2VlZCkKICAgIHRyeToKICAgICAgICB3aXRoIHNxbGl0ZTMuY29ubmVjdChEQl9QQVRIKSBhcyBjb246CiAgICAgICAgICAgIGN1ciA9IGNvbi5jdXJzb3IoKQogICAgICAgICAgICBjdXIuZXhlY3V0ZSgiU0VMRUNUIENPVU5UKCopIEZST00gbWV0cmljcyIpCiAgICAgICAgICAgIHRvdGFsX3Jvd3MgPSBjdXIuZmV0Y2hvbmUoKVswXQogICAgICAgICAgICBwcmludChmIlvinJNdIFJvd3MgVG90YWw6IHt0b3RhbF9yb3dzfSIpCgogICAgICAgICAgICBjdXIuZXhlY3V0ZSgiU0VMRUNUIENPVU5UKCopIEZST00gbWV0cmljcyBXSEVSRSBvaV9hYnNfdXNkID4gMCBBTkQgdm9sX3VzZCA+IDAiKQogICAgICAgICAgICB2YWxpZF9yb3dzID0gY3VyLmZldGNob25lKClbMF0KICAgICAgICAgICAgcHJpbnQoZiJb4pyTXSBWYWxpZCBPSS9Wb2w6IHt2YWxpZF9yb3dzfSIpCgogICAgICAgICAgICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1Qgb2lfYWJzX3VzZCwgdm9sX3VzZCBGUk9NIG1ldHJpY3MgT1JERVIgQlkgdGltZXN0YW1wIERFU0MgTElNSVQgMjAiLCBjb24pCiAgICAgICAgICAgIHByaW50KGYiW+Kck10gUXVlcnkgUm93czoge2xlbihkZil9IikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlvinJddIENvbm4gRXJyb3I6IHtlfSIpCiAgICAgICAgZGYgPSBwZC5EYXRhRnJhbWUoKQoKICAgICMgS1BJIGdlbgogICAgaWYgZGYuZW1wdHk6CiAgICAgICAga3BpID0gIiMjIEF1dG8tS1BJIFVwZGF0ZSAoTm8gRGF0YSlcbnwgV2VpZ2h0ZWQgT0kgfCBDdXJyZW50IHxcbnwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXxcbnwgJDAuMDBCIHwgTm8gcm93cyB8XG4iCiAgICBlbGlmIGRmWyJ2b2xfdXNkIl0uZmlsbG5hKDApLnN1bSgpID09IDA6CiAgICAgICAga3BpID0gZiIjIyBBdXRvLUtQSSBVcGRhdGUgKFplcm8vTmFOIFZvbClcbnwgV2VpZ2h0ZWQgT0kgfCBDdXJyZW50IHxcbnwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXxcbnwgJDAuMDBCIHwgQXZnIHtsZW4oZGYpfSBwYWlycyB8XG4iCiAgICBlbHNlOgogICAgICAgIGRmX2NsZWFuID0gZGYuZHJvcG5hKHN1YnNldD1bIm9pX2Fic191c2QiLCAidm9sX3VzZCJdKQogICAgICAgIGlmIGRmX2NsZWFuLmVtcHR5OgogICAgICAgICAgICBrcGkgPSAiIyMgQXV0by1LUEkgVXBkYXRlIChBbGwgTmFOKVxufCBXZWlnaHRlZCBPSSB8IEN1cnJlbnQgfFxufC0tLS0tLS0tLS0tLS18LS0tLS0tLS0tfFxufCAkMC4wMEIgfCBObyB2YWxpZCByb3dzIHxcbiIKICAgICAgICBlbHNlOgogICAgICAgICAgICB3ZWlnaHRzID0gZGZfY2xlYW5bInZvbF91c2QiXSAvIGRmX2NsZWFuWyJ2b2xfdXNkIl0uc3VtKCkKICAgICAgICAgICAgd19vaSA9IG5wLmF2ZXJhZ2UoZGZfY2xlYW5bIm9pX2Fic191c2QiXSwgd2VpZ2h0cz13ZWlnaHRzKQogICAgICAgICAgICBrcGkgPSBmIiMjIEF1dG8tS1BJIFVwZGF0ZSAoV2VpZ2h0ZWQgT0kgVGVhc2Uge2RhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCclWS0lbS0lZCAlSDolTScpfSlcbnwgV2VpZ2h0ZWQgT0kgfCBDdXJyZW50IHxcbnwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXxcbnwgJHt3X29pLzFlOTouMmZ9QiB8IEF2ZyB7bGVuKGRmX2NsZWFuKX0gcGFpcnMgfFxuIgoKICAgICMgQ2xlYW4gKyB3cml0ZSAobm8gZHVwZTsgc2FmZSBzd2FwKQogICAgdHJ5OgogICAgICAgIGlmIE1EX1BBVEguZXhpc3RzKCk6CiAgICAgICAgICAgIHdpdGggb3BlbihNRF9QQVRILCAiciIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgICAgICAgICBjb250ZW50ID0gY2xlYW5fb2xkX2twaShmLnJlYWQoKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBjb250ZW50ID0gIiMgUXVhbnQgQmx1ZXByaW50XG4iCiAgICAgICAgdXBkYXRlZCA9IGNvbnRlbnQgKyAiXG4iICsga3BpCiAgICAgICAgc2FmZV93cml0ZShNRF9QQVRILCB1cGRhdGVkKQogICAgICAgIHByaW50KGYiW+Kck10gTUQgVXBkYXRlZDoge3dfb2kvMWU5Oi4yZiBpZiAnd19vaScgaW4gbG9jYWxzKCkgZWxzZSAwOi4yZn1CIHwgU2luZ2xlIEtQSSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJb4pyXXSBXcml0ZSBFcnJvcjoge2V9IikKCiAgICBwcmludChrcGkpICAjIEVjaG8KCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCk=",
        "summary": "84L | gen_blueprint.py | .py | 3.4 KB"
      },
      {
        "path": "docs\\gen_tracker.py",
        "type": ".py",
        "size_kb": 3.2,
        "content": "IyBSdW46IFBTOiBjZCBkb2NzIDsgcHl0aG9uIGdlbl90cmFja2VyLnB5IChBcHBlbmRzIEtQSSByb3cgdy8gZ2l0IGRpZmY7IHVzZXMgJzVtJyBkYXRhKSAgCmltcG9ydCBzcWxpdGUzICAKaW1wb3J0IHBhbmRhcyBhcyBwZCAgCmltcG9ydCBzdWJwcm9jZXNzICAjIE5ldzogR2l0IGRpZmYgdGVhc2UKaW1wb3J0IG9zCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgpjb24gPSBzcWxpdGUzLmNvbm5lY3QocidFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZFxiYWNrZW5kXHNyY1xmdXR1cmVzYm9hcmRcZnV0dXJlcy5kYicpCiMgQXV0by1maXggTlVMTCB0ZiAgCmNvbi5leGVjdXRlKCJVUERBVEUgbWV0cmljcyBTRVQgdGltZWZyYW1lID0gJzVtJyBXSEVSRSB0aW1lZnJhbWUgSVMgTlVMTCIpICAKY29uLmNvbW1pdCgpICAKdHJ5OiAgCiAgIyBUcnkgJzE1bScgZmlyc3QsIGZhbGxiYWNrIHRvICc1bScgb3IgdG90YWwgIAogICMgTDE1IEZpeDogQ2hhaW4gZmFsbGJhY2sgJzE1bScg4oaSICc1bScg4oaSIHRvdGFsIGlmIDAKICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196LCBDT1VOVCgqKSBhcyByb3dzIEZST00gbWV0cmljcyBXSEVSRSB0aW1lZnJhbWU9JzE1bSciLCBjb24pCiAgaWYgZGZbJ3Jvd3MnXVswXSA9PSAwOgogICAgICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196LCBDT1VOVCgqKSBhcyByb3dzIEZST00gbWV0cmljcyBXSEVSRSB0aW1lZnJhbWU9JzVtJyIsIGNvbikKICAgICAgaWYgZGZbJ3Jvd3MnXVswXSA9PSAwOgogICAgICAgICAgZGYgPSBwZC5yZWFkX3NxbCgiU0VMRUNUIEFWRyh6X3Njb3JlKSBhcyBhdmdfeiwgQ09VTlQoKikgYXMgcm93cyBGUk9NIG1ldHJpY3MiLCBjb24pICAjIFRvdGFsIGZhbGxiYWNrCiAgcHJpbnQoZiJRdWVyeSBmYWxsYmFjazogdGY9JzE1bScgcm93cyB7ZGZbJ3Jvd3MnXVswXX0gKGNoYWluIHRvICc1bScvdG90YWwgaWYgMCkiKQogICMgT3B0aW06IEdpdCBkaWZmIGFwcGVuZCAoZmlsZXNfY2hhbmdlZCBlbnYgb3IgZGVmYXVsdCAwKQogIGZpbGVzX2NoYW5nZWQgPSBpbnQob3MuZ2V0ZW52KCdGSUxFU19DSEFOR0VEJywgJzAnKSkKICB0cyA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTSIpCiAgcm93ID0gZiJ8IFAzIHwgMjUlIHwgRnJhbWV3b3JrIHYxLjMgc3luYyAoe2ZpbGVzX2NoYW5nZWR9IGZpbGVzLCB7dHN9KSB8XG4iICAjIFRlYXNlIGFwcGVuZCAoZWRpdCBwaGFzZS9wY3QpCiAgd2l0aCBvcGVuKCJxdWFudF9wcm9ncmVzc190cmFja2VyLm1kIiwgImEiLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmOiAgIyBOZXc6ID4+IE1EIHZzIHByaW50CiAgICAgIGYud3JpdGUocm93KQogIHByaW50KGYiQXBwZW5kZWQgS1BJIHJvdzoge3Jvdy5zdHJpcCgpfSIpCiAgcHJpbnQoInwgQXZnIFotU2NvcmUgKCc1bScpIHwgREIgUm93cyAoJzVtJykgfCIpICAKICBwcmludCgifC0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfCIpICAKICAjIEwyNiBGaXg6IE5vbmUgZ3VhcmQgZm9yIGF2Z196IChOL0EgaWYgcm93cz09MCkKICBhdmdfel92YWwgPSBkZlsnYXZnX3onXS5maWxsbmEoMClbMF0gaWYgZGZbJ3Jvd3MnXVswXSA+IDAgZWxzZSAnTi9BJwogIHByaW50KGYifCB7YXZnX3pfdmFsfSB8IHtkZlsncm93cyddWzBdfSB8IikgCmV4Y2VwdCBzcWxpdGUzLk9wZXJhdGlvbmFsRXJyb3IgYXMgZTogIAogIGlmICd6X3Njb3JlJyBpbiBzdHIoZSk6ICAKICAgIHByaW50KCIjIyBEQiBOb3RlOiB6X3Njb3JlIG1pc3Npbmcg4oCTIFJ1biBhbHRlcl9kYi5weSArIHJlLXNlZWQiKSAgCiAgICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1QgQVZHKGdsb2JhbF9scykgYXMgYXZnX2xzLCBDT1VOVCgqKSBhcyByb3dzIEZST00gbWV0cmljcyIsIGNvbikgIAogICAgcm93ID0gZiJ8IFAzIHwgMjUlIHwgRnJhbWV3b3JrIHYxLjMgc3luYyAoel9zY29yZSBwZW5kaW5nLCB7dHN9KSB8XG4iCiAgICB3aXRoIG9wZW4oInF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQiLCAiYSIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgZi53cml0ZShyb3cpCiAgICBwcmludChmIkFwcGVuZGVkIGZhbGxiYWNrIHJvdzoge3Jvdy5zdHJpcCgpfSIpCiAgICBwcmludCgifCBBdmcgR2xvYmFsIExTIChUb3RhbCkgfCBEQiBSb3dzIChUb3RhbCkgfCIpICAKICAgIHByaW50KCJ8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tfCIpICAKICAgIHByaW50KGYifCB7ZGZbJ2F2Z19scyddWzBdOi4yZn0gfCB7ZGZbJ3Jvd3MnXVswXX0gfCIpICAKICBlbHNlOiAgCiAgICByYWlzZSBlICAKCiMgT3B0aW0gVGVhc2U6IFotcm9sbCBwbG90IChtYXRwbG90bGliOyBzYXZlIHBuZyBlbWJlZCkg4oCTIEJlZm9yZSBjb24uY2xvc2UoKQp0cnk6CiAgICBpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0CiAgICBkZl9wbG90ID0gcGQucmVhZF9zcWwoIlNFTEVDVCB6X3Njb3JlLCB0aW1lc3RhbXAgRlJPTSBtZXRyaWNzIE9SREVSIEJZIHRpbWVzdGFtcCBERVNDIExJTUlUIDEwMCIsIGNvbikKICAgIGRmX3Bsb3RbJ3RpbWVzdGFtcCddID0gcGQudG9fZGF0ZXRpbWUoZGZfcGxvdFsndGltZXN0YW1wJ10pCiAgICBkZl9wbG90LnNldF9pbmRleCgndGltZXN0YW1wJywgaW5wbGFjZT1UcnVlKQogICAgZGZfcGxvdFsnel9yb2xsJ10gPSBkZl9wbG90Wyd6X3Njb3JlJ10ucm9sbGluZygyMCkubWVhbigpCiAgICBwbHQucGxvdChkZl9wbG90Wyd6X3JvbGwnXSkKICAgIHBsdC50aXRsZSgnWi1Sb2xsIE1lYW4gVHJlbmQgKExhc3QgMTAwKScpCiAgICBwbHQuc2F2ZWZpZygnel90cmVuZC5wbmcnLCBkcGk9MTAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgcHJpbnQoIlotdHJlbmQgcGxvdCBzYXZlZDogel90cmVuZC5wbmcgKGVtYmVkIGluIHByb2dyZXNzX3RyYWNrZXIubWQpIikKZXhjZXB0IEltcG9ydEVycm9yOgogICAgcHJpbnQoIk1hdHBsb3RsaWIgbWlzc2luZzogcGlwIGluc3RhbGwgbWF0cGxvdGxpYiAoYmFja2VuZC9yZXFzLnR4dCkiKQpleGNlcHQgRXhjZXB0aW9uIGFzIHBsb3RfZToKICAgIHByaW50KGYiUGxvdCBlcnJvcjoge3Bsb3RfZX0gLSBDaGVjayBEQiByb3dzID4xMDAiKQpjb24uY2xvc2UoKQ==",
        "summary": "62L | gen_tracker.py | .py | 3.2 KB"
      },
      {
        "path": "docs\\project_context_v3.json",
        "type": ".json",
        "size_kb": 0.6,
        "content": "77u/ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMjowMTo0NSIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kX2hlYWx0aCI6ICAiSGVhbHRoIGNoZWNrIGZhaWxlZCIsCiAgICAiYmFja2VuZF9jb25maWciOiAgewoKICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgInNhbXBsZV9tZXRyaWMiOiAgewoKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAicmVwb19zdW1tYXJ5IjogIHsKCiAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAidXB0aW1lX3BjdCI6ICA1Ny4xLAogICAgImJhY2tlbmRfbmFtZSI6ICAiZnV0dXJlc2JvYXJkIiwKICAgICJkYl9wYXRoIjogICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIsCiAgICAic3lzdGVtIjogIHsKICAgICAgICAgICAgICAgICAgICJub2RlIjogICJ2MjIuMjAuMCIsCiAgICAgICAgICAgICAgICAgICAidXNlciI6ICAiTGlhbiIsCiAgICAgICAgICAgICAgICAgICAib3MiOiAgIk1pY3Jvc29mdCBXaW5kb3dzIDEwIFBybyIsCiAgICAgICAgICAgICAgICAgICAicHl0aG9uIjogICJQeXRob24gMy4xMy4xIgogICAgICAgICAgICAgICB9Cn0K",
        "summary": "23L | project_context_v3.json | .json | 0.6 KB"
      },
      {
        "path": "docs\\project_data.json",
        "type": ".json",
        "size_kb": 358.0,
        "content": "",
        "summary": "312L | project_data.json | .json | 358.0 KB"
      },
      {
        "path": "docs\\quant_blueprint.md",
        "type": ".md",
        "size_kb": 7.1,
        "content": "",
        "summary": "93L | quant_blueprint.md | .md | 7.1 KB"
      },
      {
        "path": "docs\\quant_progress_tracker.md",
        "type": ".md",
        "size_kb": 8.1,
        "content": "",
        "summary": "127L | quant_progress_tracker.md | .md | 8.1 KB"
      },
      {
        "path": "docs\\README.md",
        "type": ".md",
        "size_kb": 2.4,
        "content": "IyDwn5OaIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCDigJMgRG9jdW1lbnRhdGlvbiBJbmRleAoKX1VwZGF0ZWQ6IDIwMjUtMTAtMjAgfCBWZXJzaW9uOiB2Mi4zIChQaGFzZSAzIOKAkyBXZWlnaHRlZCBPSSAmIEFsZXJ0cylfCgotLS0KCiMjIPCfp60gQ29yZSBPdmVydmlldwoKLSAqKlByb2plY3Q6KiogUmVhbC10aW1lIENyeXB0byBGdXR1cmVzIFF1YW50IERhc2hib2FyZCAgCi0gKipPd25lcjoqKiBMaWFuIElzYWFjICAKLSAqKkJhY2tlbmQ6KiogRmxhc2sgKyBTUUxBbGNoZW15ICsgU29ja2V0SU8gIAotICoqRnJvbnRlbmQ6KiogVml0ZSArIFRyZW1vciArIFJlY2hhcnRzICAKLSAqKlBoYXNlOioqIFAzIOKAkyBXZWlnaHRlZCBPSSwgVG9wIEwvUywgQWxlcnRzICAKLSAqKkdvYWw6KiogRGV0ZWN0IGRpcmVjdGlvbmFsIGJpYXMgKFo+Mi41LCBMUz4yLCBJbWI+MyUpIGFuZCBzaW11bGF0ZSBjb25mbHVlbmNlIOKGkiBQNCByZXBsYXkuCgotLS0KCiMjIPCflJcgRG9jdW1lbnRhdGlvbiBNYXAKCnwgRmlsZSB8IERlc2NyaXB0aW9uIHwgTGFzdCBVcGRhdGVkIHwKfC0tLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfAp8IFtjb250aW51aXR5X3N0YXRlLm1kXShjb250aW51aXR5X3N0YXRlLm1kKSB8IExpdmUgc3lzdGVtIHNuYXBzaG90IChhdXRvLXVwZGF0ZWQgYnkgUG93ZXJTaGVsbCkgfCBEeW5hbWljIHwKfCBbYXBpX2d1aWRlLm1kXShhcGlfZ3VpZGUubWQpIHwgUkVTVCArIFdTIGVuZHBvaW50cyByZWZlcmVuY2UgfCAyMDI1LTEwLTE4IHwKfCBbcXVhbnRfYmx1ZXByaW50Lm1kXShxdWFudF9ibHVlcHJpbnQubWQpIHwgQXJjaGl0ZWN0dXJlLCBtZXRyaWNzLCBhbmQgcXVhbnQgZW5naW5lZXJpbmcgYmx1ZXByaW50IHwgMjAyNS0xMC0xOCB8CnwgW3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWRdKHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQpIHwgUHJvZ3Jlc3MgYnkgcGhhc2UsIEtQSXMsIGFuZCBtZXRyaWNzIGV2b2x1dGlvbiB8IDIwMjUtMTAtMTggfAp8IFtyb2FkbWFwLm1kXShyb2FkbWFwLm1kKSB8IEV4ZWN1dGlvbiBtYXRyaXggYWNyb3NzIGJhY2tlbmQsIFVYLCBvcHMgfCAyMDI1LTEwLTE4IHwKfCBbdGVzdGluZ19oYXJuZXNzLm1kXSh0ZXN0aW5nX2hhcm5lc3MubWQpIHwgUHl0ZXN0IGFuZCBxdWFudCB2YWxpZGF0aW9uIGhhcm5lc3MgfCAyMDI1LTEwLTE4IHwKCi0tLQoKIyMg8J+nqSBBdXRvbWF0aW9uIFNjcmlwdHMKCnwgU2NyaXB0IHwgRnVuY3Rpb24gfCBDb21tYW5kIHwKfC0tLS0tLS0tLXwtLS0tLS0tLS0tLXwtLS0tLS0tLS0tfAp8IGBnZW5fYmx1ZXByaW50LnB5YCB8IFVwZGF0ZXMgYmx1ZXByaW50IEtQSXMgYW5kIGZvcm11bGFzIHwgYHB5dGhvbiBkb2NzL2dlbl9ibHVlcHJpbnQucHlgIHwKfCBgZ2VuX3RyYWNrZXIucHlgIHwgVXBkYXRlcyBwaGFzZSBwcm9ncmVzcyAmIEtQSXMgZnJvbSBEQiB8IGBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weWAgfAp8IGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCB8IFVwZGF0ZXMgc3lzdGVtIHNuYXBzaG90IGF1dG9tYXRpY2FsbHkgfCBQb3dlclNoZWxsIGZ1bmN0aW9uIHwKCi0tLQoKIyMg8J+nriBRdWFudCBNb2RlbCBTdW1tYXJ5Cgp8IE1ldHJpYyB8IFB1cnBvc2UgfCBQaGFzZSB8CnwtLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IFotU2NvcmUgfCBEZXZpYXRpb24vQW5vbWFseSBkZXRlY3Rpb24gfCBQMiB8CnwgTFMgUmF0aW8gfCBTZW50aW1lbnQgc2tldyB8IFAxIHwKfCBXZWlnaHRlZCBPSSB8IFZvbHVtZS13ZWlnaHRlZCBPSSBzdHJlbmd0aCB8IFAzIHwKfCBDb25mbHVlbmNlIHwgQ29tYmluZWQgYmlhcyB0cmlnZ2VyIChaL0xTL0ltYikgfCBQMyB8CnwgQ29yciBSZXBsYXkgfCBSb2xsaW5nIGNvcnJlbGF0aW9uIHJlcGxheSBzaW0gfCBQNCB8CgotLS0KCiMjIPCfp7EgUGhhc2UgU3VtbWFyeQoKfCBQaGFzZSB8IEZvY3VzIHwgU3RhdHVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tfAp8IDEuNSB8IFNjYWZmb2xkICsgV1MgRW1pdCB8IOKchSBDb21wbGV0ZSB8CnwgMiB8IENvcmUgVEYgKyBFeHBvcnRzIHwg4pyFIENvbXBsZXRlIHwKfCAzIHwgV2VpZ2h0ZWQgT0kgKyBBbGVydHMgfCDwn5SEIEluIFByb2dyZXNzIHwKfCA0IHwgUmVwbGF5ICsgQ29yciBTaW0gfCDij7MgUGxhbm5lZCB8CgotLS0KCiMjIPCfp6ogVGVzdGluZyBIb29rcwoKUnVuIHRoZSBmdWxsIHZhbGlkYXRpb24gaGFybmVzczoKCmBgYHBvd2Vyc2hlbGwKcHl0ZXN0IC1xCmN1cmwgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9tZXRyaWNzP3RmPTE1bSB8IGpxIGxlbmd0aApweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQo=",
        "summary": "71L | README.md | .md | 2.4 KB"
      },
      {
        "path": "docs\\roadmap.md",
        "type": ".md",
        "size_kb": 6.0,
        "content": "",
        "summary": "43L | roadmap.md | .md | 6.0 KB"
      },
      {
        "path": "docs\\testing_harness.md",
        "type": ".md",
        "size_kb": 1.3,
        "content": "IyBUZXN0aW5nIEhhcm5lc3MgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpGb2N1czogU21va2UgKDw1cyksIEJlbmNoICg8MTBzLzUwIHBhaXJzKSwgUXVhbnQgVmFsIChaIGZpbml0ZS9mYWxzZS1wb3MpLiBSdW46IHB5dGVzdCAtcSA7IGNvZGVfZXhlY3V0aW9uIHNuaXBwZXRzLgoKIyMgUHl0ZXN0IFN1aXRlIChweXRlc3QuaW5pICsgRmlsZXMpCi0gdGVzdF9tZXRyaWNzLnB5OiBgZGVmIHRlc3RfZ2V0X2FsbCgpOiBtZXRyaWNzID0gZ2V0X2FsbF9tZXRyaWNzKHRmPScxNW0nKTsgYXNzZXJ0IGxlbihtZXRyaWNzKSA9PSAyMDsgYXNzZXJ0IGFsbChucC5pc2Zpbml0ZShtWyd6X3Njb3JlJ10pIGZvciBtIGluIG1ldHJpY3MpYAotIHRlc3Rfd3MucHk6IGBkZWYgdGVzdF9lbWl0KCk6IC4uLiBhc3NlcnQgJ21ldHJpY3NfdXBkYXRlJyBpbiBzb2NrZXRpby5ldmVudHNgCi0gQmVuY2g6IGBweXRlc3QgLS1iZW5jaG1hcmstb25seWAgKFRhcmdldDogPDVzIGxvYWQsIG5vIGJsYW5rcykuCgojIyBUb29sIFNuaXBwZXRzIChjb2RlX2V4ZWN1dGlvbikKfCBUZXN0IHwgU25pcHBldCB8IEV4cGVjdGVkIHwKfC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBaIEZpbml0ZSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IHogPSBucC5yYW5kb20ubm9ybWFsKDAsMSwyMCk7IGFzc2VydCBucC5hbGwobnAuaXNmaW5pdGUoeikpICYgKG5wLmFicyh6KSA8IDEwKWAgfCBUcnVlIHwKfCBXZWlnaHRlZCBPSSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IG9pID0gbnAuYXJyYXkoWzFlOSwyZTldKTsgdm9scyA9IG5wLmFycmF5KFsxZTksMmU5XSk7IHcgPSBucC5hdmVyYWdlKG9pLCB3ZWlnaHRzPXZvbHMvdm9scy5zdW0oKSk7IHByaW50KHcpYCB8IDEuNjY2ZTkgfAp8IENvbmZsdWVuY2UgfCBgZGVmIGNhbGMoeixscyxpbWIpOiByZXR1cm4gc3VtKFt6PjIuNSwgbHM+MiwgYWJzKGltYik+M10pLzM7IHByaW50KGNhbGMoMi42LDIuMSwtMy4xKSlgIHwgMS4wIHwKfCBEQiBSb3dzIHwgQXMgZ2VuX3RyYWNrZXIucHkgfCA+NTgxIHwKCiMjIDI0aCBIYXJuZXNzIChQUyBDaGFpbikKYGBgcG93ZXJzaGVsbApweXRlc3QgLXEgOyBjdXJsIC9hcGkvbWV0cmljcz90Zj0xNW0gfCBqcSAnbGVuZ3RoJyA7IEdldC1Db250ZW50IGJhY2tlbmQvbG9ncy9hcHAubG9nIC1UYWlsIDEwIHwgU2VsZWN0LVN0cmluZyAiZW1pdHxlcnJvciIgOyBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQojIE91dHB1dDogLi4uLi4uLi4gMjAgOyBFbWl0dGVkMjAgKG5vIGVycm9yKQ==",
        "summary": "21L | testing_harness.md | .md | 1.3 KB"
      }
    ]
  },
  "metadata": {
    "updated": "2025-10-21 22:02:13",
    "total_files": 51,
    "max_file_size_kb": 976.6
  }
}