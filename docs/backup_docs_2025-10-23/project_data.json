{
  "project": {
    "name": "Crypto Futures Dashboard",
    "version": "v1.0",
    "phase": "P3.8 - Confluence Layer",
    "uptime_pct": 40,
    "backend_status": "unhealthy",
    "last_sync": "2025-10-23 23:02:37"
  },
  "code": {
    "files": [
      {
        "path": "backend\\src\\futuresboard\\app.py",
        "type": ".py",
        "size_kb": 24.3,
        "lines": 598,
        "content": "",
        "summary": "598L | app.py | .py | 24.3 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\binance_ws_client_legacy.py",
        "type": ".py",
        "size_kb": 4.7,
        "lines": 122,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvYmluYW5jZV93c19jbGllbnQucHkKIiIiCkFzeW5jIENDWFQtYmFzZWQgc3RyZWFtIHdvcmtlciB1c2luZyB3YXRjaF8qIChjY3h0IHY0Lnggd2l0aCBjY3h0LnBybyBtZXJnZWQpLgpUaGlzIHdpbGwgc3Vic2NyaWJlIHRvIHRpY2tlcnMgYW5kIG9wdGlvbmFsbHkgb3RoZXIgd2F0Y2hfKiBlbmRwb2ludHMuCiIiIgoKaW1wb3J0IGFzeW5jaW8KaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IG9zCmltcG9ydCBtYXRoCmltcG9ydCBqc29uCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCByYW5kb20KaW1wb3J0IGNjeHQuYXN5bmNfc3VwcG9ydCBhcyBjY3h0ICAjIGNjeHQgdjQrICh3aXRoIHBybyBtZXJnZWQpCgpsb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcigiZnV0dXJlc2JvYXJkLmJpbmFuY2Vfd3NfY2xpZW50IikKbG9nZ2VyLnNldExldmVsKGxvZ2dpbmcuSU5GTykKCiMgRGVmYXVsdCBzdWJzY3JpYmUgc2V0IChsb3dlcmNhc2Ugc3ltYm9sIG5hbWVzIGZvciB3YXRjaFRpY2tlcikKREVGQVVMVF9QQUlSUyA9IFsiQlRDL1VTRFQ6VVNEVCIsICJFVEgvVVNEVDpVU0RUIiwgIlNPTC9VU0RUOlVTRFQiXQoKIyBIZWxwZXIgdG8gbm9ybWFsaXplIHN5bWJvbCB0byByZXBvIGZvcm1hdCAoQlRDVVNEVCkKZGVmIG5vcm1fc3ltKGNjeHRfc3ltOiBzdHIpIC0+IHN0cjoKICAgICMgaGFuZGxlIGJvdGggIkJUQy9VU0RUOlVTRFQiIGFuZCAiQlRDL1VTRFQiCiAgICByZXR1cm4gY2N4dF9zeW0ucmVwbGFjZSgiLyIsICIiKS5yZXBsYWNlKCI6VVNEVCIsICIiKQoKYXN5bmMgZGVmIHN0YXJ0X2NjeHRfc3RyZWFtKGV4Y2hhbmdlX2lkOiBzdHIgPSAiYmluYW5jZSIsIHN5bWJvbHM6IExpc3Rbc3RyXSA9IE5vbmUsIG9uX21lc3NhZ2U9Tm9uZSk6CiAgICAiIiIKICAgIFN0YXJ0IGFuIGFzeW5jIENDWFQgZXhjaGFuZ2UgaW5zdGFuY2UgYW5kIHdhdGNoIHRpY2tlcnMgZm9yIGBzeW1ib2xzYC4KICAgIG9uX21lc3NhZ2UgaXMgYSBjb3JvdXRpbmUgY2FsbGJhY2sgcmVjZWl2aW5nIChzeW1ib2wsIHBheWxvYWRfZGljdCkuCiAgICAiIiIKICAgIGlmIHN5bWJvbHMgaXMgTm9uZSBvciBub3Qgc3ltYm9sczoKICAgICAgICBzeW1ib2xzID0gREVGQVVMVF9QQUlSUwoKICAgICMgaW5zdGFudGlhdGUgZXhjaGFuZ2UKICAgIGV4X2NscyA9IGdldGF0dHIoY2N4dCwgZXhjaGFuZ2VfaWQsIE5vbmUpCiAgICBpZiBleF9jbHMgaXMgTm9uZToKICAgICAgICBsb2dnZXIuZXJyb3IoZiJFeGNoYW5nZSB7ZXhjaGFuZ2VfaWR9IG5vdCBmb3VuZCBpbiBjY3h0LmFzeW5jX3N1cHBvcnQiKQogICAgICAgIHJldHVybgoKICAgIGV4Y2hhbmdlID0gZXhfY2xzKHsKICAgICAgICAiZW5hYmxlUmF0ZUxpbWl0IjogVHJ1ZSwKICAgICAgICAib3B0aW9ucyI6IHsiZGVmYXVsdFR5cGUiOiAiZnV0dXJlIn0sCiAgICAgICAgKiooeyJhcGlLZXkiOiBvcy5nZXRlbnYoIkFQSV9LRVkiKSwgInNlY3JldCI6IG9zLmdldGVudigiQVBJX1NFQ1JFVCIpfSBpZiBvcy5nZXRlbnYoIkFQSV9LRVkiKSBlbHNlIHt9KQogICAgfSkKCiAgICAjIGVuc3VyZSBtYXJrZXRzIGxvYWRlZAogICAgdHJ5OgogICAgICAgIGF3YWl0IGV4Y2hhbmdlLmxvYWRfbWFya2V0cygpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgbG9nZ2VyLndhcm5pbmcoZiJsb2FkX21hcmtldHMgZmFpbGVkIGZvciB7ZXhjaGFuZ2VfaWR9OiB7ZX0iKQoKICAgICMgd2F0Y2ggbG9vcCB3aXRoIGJhY2tvZmYKICAgIGJhY2tvZmYgPSAxCiAgICB3aGlsZSBUcnVlOgogICAgICAgIHRyeToKICAgICAgICAgICAgIyB3YXRjaFRpY2tlcnMgc3VwcG9ydHMgYSBsaXN0OyBmYWxsYmFjayB0byB3YXRjaFRpY2tlciBwZXIgc3ltYm9sIGlmIG5vdAogICAgICAgICAgICAjIEF0dGVtcHQgdG8gd2F0Y2ggbXVsdGlwbGUgdGlja2VycyBhcyBvbmUgKGRlcGVuZHMgb24gZXhjaGFuZ2UpCiAgICAgICAgICAgIGZvciBzeW0gaW4gc3ltYm9sczoKICAgICAgICAgICAgICAgICMgTWFueSBleGNoYW5nZXMgYWNjZXB0IG1hcmtldCBzeW1ib2xzIGxpa2UgIkJUQy9VU0RUIgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIHRpY2tlciA9IGF3YWl0IGV4Y2hhbmdlLndhdGNoX3RpY2tlcihzeW0pCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGVfc3ltOgogICAgICAgICAgICAgICAgICAgICMgZmFsbGJhY2s6IHRyeSBub3JtYWxpemVkIHN5bWJvbAogICAgICAgICAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhmIndhdGNoX3RpY2tlciB7c3ltfSBmYWlsZWQ6IHtlX3N5bX0iKQogICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgIyBtYXliZSBuZWVkIHRvIHRyeSBzeW1ib2wgd2l0aG91dCA6VVNEVCBzdWZmaXgKICAgICAgICAgICAgICAgICAgICAgICAgY2FuZGlkYXRlID0gc3ltLnJlcGxhY2UoIjpVU0RUIiwgIiIpCiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tlciA9IGF3YWl0IGV4Y2hhbmdlLndhdGNoX3RpY2tlcihjYW5kaWRhdGUpCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlMjoKICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKGYid2F0Y2hfdGlja2VyIGZhbGxiYWNrIGZhaWxlZCBmb3Ige3N5bX06IHtlMn0iKQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgICAgICMgQnVpbGQgYSBzaW1wbGUgcGF5bG9hZCBhbmQgc2VuZCB0byBvbl9tZXNzYWdlCiAgICAgICAgICAgICAgICBpZiBvbl9tZXNzYWdlOgogICAgICAgICAgICAgICAgICAgIHBheWxvYWQgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICJzeW1ib2wiOiBub3JtX3N5bSh0aWNrZXIuZ2V0KCJzeW1ib2wiLCBzeW0pKSwKICAgICAgICAgICAgICAgICAgICAgICAgInRpbWVzdGFtcCI6IGRhdGV0aW1lLnV0Y25vdygpLmlzb2Zvcm1hdCgpLAogICAgICAgICAgICAgICAgICAgICAgICAibGFzdCI6IHRpY2tlci5nZXQoImxhc3QiKSwKICAgICAgICAgICAgICAgICAgICAgICAgImJpZCI6IHRpY2tlci5nZXQoImJpZCIpLAogICAgICAgICAgICAgICAgICAgICAgICAiYXNrIjogdGlja2VyLmdldCgiYXNrIiksCiAgICAgICAgICAgICAgICAgICAgICAgICJpbmZvIjogdGlja2VyLmdldCgiaW5mbyIsIHt9KSwKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBvbl9tZXNzYWdlKHBheWxvYWQpCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBvb206CiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5leGNlcHRpb24oZiJvbl9tZXNzYWdlIGZhaWxlZDoge29vbX0iKQoKICAgICAgICAgICAgICAgICMgc21hbGwgc2xlZXAgdG8geWllbGQgY29udHJvbCAocGVyLXN5bWJvbCBjYWRlbmNlKQogICAgICAgICAgICAgICAgYXdhaXQgYXN5bmNpby5zbGVlcCgwLjAxKQoKICAgICAgICAgICAgYmFja29mZiA9IDEgICMgcmVzZXQgc3VjY2VzcyBiYWNrb2ZmCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIkNDWFQgd2F0Y2ggbG9vcCBlcnJvcjoge2V9OyBiYWNraW5nIG9mZiB7YmFja29mZn1zIikKICAgICAgICAgICAgYXdhaXQgYXN5bmNpby5zbGVlcChtaW4oYmFja29mZiwgNjApICsgKDAuNSAqIChyYW5kb20ucmFuZG9tKCkpKSkKICAgICAgICAgICAgYmFja29mZiA9IG1pbihiYWNrb2ZmICogMiBpZiBiYWNrb2ZmIDwgNjAgZWxzZSA2MCwgNjApCiAgICAgICAgIyBzaG9ydCBnbG9iYWwgeWllbGQKICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDAuMDEpCgogICAgIyBjbGVhbnVwIChuZXZlciByZWFjaGVkIGluIG5vcm1hbCBsb29wKQogICAgdHJ5OgogICAgICAgIGF3YWl0IGV4Y2hhbmdlLmNsb3NlKCkKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcGFzcwoKCiMgRXhhbXBsZSBvbl9tZXNzYWdlIC0gaW50ZWdyYXRlIHdpdGggeW91ciBEQiBwdXNoIG9yIHNvY2tldGlvCmFzeW5jIGRlZiBkZWZhdWx0X29uX21lc3NhZ2UocGF5bG9hZCk6CiAgICAjIEV4YW1wbGU6IHByaW50IGFuZCBvcHRpb25hbGx5IHdyaXRlIHRvIERCCiAgICBsb2dnZXIuZGVidWcoZiJbV1NdIHtwYXlsb2FkLmdldCgnc3ltYm9sJyl9IGxhc3Q9e3BheWxvYWQuZ2V0KCdsYXN0Jyl9IikKICAgICMgSWYgeW91IHdhbnQgREIgcHVzaCBoZXJlLCBpbXBvcnQgeW91ciBkYiBoZWxwZXIgYW5kIGNhbGwgaXQgKGJlIGNhcmVmdWwgd2l0aCBjb25jdXJyZW5jeSkKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBpbXBvcnQgc3lzCiAgICBwYWlycyA9IG9zLmdldGVudigiU1lNQk9MUyIsICJCVENVU0RULEVUSFVTRFQsU09MVVNEVCIpLnNwbGl0KCIsIikKICAgICMgdHJhbnNmb3JtIHRvIENDWFQgZm9ybWF0OiBCVEMvVVNEVAogICAgY2N4dF9wYWlycyA9IFtwLnJlcGxhY2UoIlVTRFQiLCAiL1VTRFQiKSBmb3IgcCBpbiBwYWlyc10KICAgIHRyeToKICAgICAgICBhc3luY2lvLnJ1bihzdGFydF9jY3h0X3N0cmVhbSgiYmluYW5jZSIsIGNjeHRfcGFpcnMsIGRlZmF1bHRfb25fbWVzc2FnZSkpCiAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6CiAgICAgICAgcGFzcwo=",
        "summary": "122L | binance_ws_client_legacy.py | .py | 4.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\blueprint.py",
        "type": ".py",
        "size_kb": 50.2,
        "lines": 1426,
        "content": "",
        "summary": "1426L | blueprint.py | .py | 50.2 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\cli.py",
        "type": ".py",
        "size_kb": 3.8,
        "lines": 111,
        "content": "IyBGaXhlZDogYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2NsaS5weQojIEFkZGl0aW9uYWwgRml4OiBBZGRlZCBpbXBvcnQgYXN5bmNpbyBmb3Igc2luZ2xlX3NjcmFwZSBsb29wLgoKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBsb2dnaW5nCmltcG9ydCBwYXRobGliCmltcG9ydCBzeXMKaW1wb3J0IG9zICAjIEZvciBzdHIoKSBjb21wYXQgaWYgbmVlZGVkCmltcG9ydCB0cmFjZWJhY2sgICMgRm9yIGVycm9yIHByaW50CmltcG9ydCBhc3luY2lvICAjIEFkZGVkIGZvciBzaW5nbGVfc2NyYXBlCgppbXBvcnQgZnV0dXJlc2JvYXJkLmFwcAppbXBvcnQgZnV0dXJlc2JvYXJkLnNjcmFwZXIKZnJvbSBmdXR1cmVzYm9hcmQgaW1wb3J0IF9fdmVyc2lvbl9fICAjIHR5cGU6IGlnbm9yZVthdHRyLWRlZmluZWRdCmZyb20gZnV0dXJlc2JvYXJkLmNvbmZpZyBpbXBvcnQgQ29uZmlnCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudiAgIyBFeHBsaWNpdCAuZW52IGxvYWQKCmxvZyA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKCmRlZiBtYWluKCk6CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihwcm9nPSJmdXR1cmVzYm9hcmQiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS12ZXJzaW9uIiwgYWN0aW9uPSJ2ZXJzaW9uIiwgdmVyc2lvbj1mIiUocHJvZylzIHtfX3ZlcnNpb25fX30iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLWMiLAogICAgICAgICItLWNvbmZpZy1kaXIiLAogICAgICAgIHR5cGU9cGF0aGxpYi5QYXRoLAogICAgICAgIGRlZmF1bHQ9Tm9uZSwKICAgICAgICBoZWxwPSJQYXRoIHRvIGNvbmZpZ3VyYXRpb24gZGlyZWN0b3J5LiBEZWZhdWx0cyB0byB0aGUgYGNvbmZpZy9gIHN1Yi1kaXJlY3Rvcnkgb24gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IiwKICAgICkKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoCiAgICAgICAgIi0tc2NyYXBlLW9ubHkiLCBkZWZhdWx0PUZhbHNlLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJSdW4gb25seSB0aGUgc2NyYXBlciBjb2RlIgogICAgKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1kaXNhYmxlLWF1dG8tc2NyYXBlciIsCiAgICAgICAgZGVmYXVsdD1GYWxzZSwKICAgICAgICBhY3Rpb249InN0b3JlX3RydWUiLAogICAgICAgIGhlbHA9IkRpc2FibGUgdGhlIHJvdXRpbmVzIHdoaWNoIHNjcmFwZSB3aGlsZSB0aGUgd2Vic2VydmljZSBpcyBydW5uaW5nIiwKICAgICkKICAgIHNlcnZlcl9zZXR0aW5ncyA9IHBhcnNlci5hZGRfYXJndW1lbnRfZ3JvdXAoIlNlcnZlciBTZXR0aW5ncyIpCiAgICBzZXJ2ZXJfc2V0dGluZ3MuYWRkX2FyZ3VtZW50KAogICAgICAgICItLWhvc3QiLAogICAgICAgIGRlZmF1bHQ9JzAuMC4wLjAnLAogICAgICAgIGhlbHA9IlNlcnZlciBob3N0LiBEZWZhdWx0OiAwLjAuMC4wIiwKICAgICAgICB0eXBlPXN0ciwgICMgU3RyIGZvciBhcmdwYXJzZSAodjEgY29tcGF0KQogICAgKQogICAgc2VydmVyX3NldHRpbmdzLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1wb3J0IiwgdHlwZT1pbnQsIGRlZmF1bHQ9Tm9uZSwgaGVscD0iU2VydmVyIHBvcnQuIERlZmF1bHQ6IDUwMDAiCiAgICApCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgICMgRGVmYXVsdCBjb25maWdfZGlyIHRvIHJvb3QvY29uZmlnIChiYWNrZW5kLyAtPiAuLi9jb25maWcgZm9yIGpzb24vZGIpCiAgICBpZiBhcmdzLmNvbmZpZ19kaXIgaXMgTm9uZToKICAgICAgICBhcmdzLmNvbmZpZ19kaXIgPSBwYXRobGliLlBhdGguY3dkKCkucGFyZW50IC8gImNvbmZpZyIKICAgIGVsc2U6CiAgICAgICAgYXJncy5jb25maWdfZGlyID0gYXJncy5jb25maWdfZGlyLnJlc29sdmUoKQoKICAgICMgLmVudiBsb2FkIGZyb20gYmFja2VuZC8gKGN3ZD1iYWNrZW5kLCBzZWxmKQogICAgYmFja2VuZF9kaXIgPSBwYXRobGliLlBhdGguY3dkKCkKICAgIGRvdGVudl9wYXRoID0gYmFja2VuZF9kaXIgLyAiLmVudiIKICAgIGxvYWRfZG90ZW52KGRvdGVudl9wYXRoPXN0cihkb3RlbnZfcGF0aCkpCiAgICAjIERlYnVnIHByaW50OiBDb25maXJtIGxvYWQgYmVmb3JlIENvbmZpZwogICAgcHJpbnQoZiJEZWJ1ZzogTG9hZGVkIEFQSV9LRVkgZnJvbSAuZW52OiB7b3MuZ2V0ZW52KCdBUElfS0VZJylbOjEwXSArICcuLi4nIGlmIG9zLmdldGVudignQVBJX0tFWScpIGVsc2UgJ01JU1NJTkcnfSIpCiAgICBwcmludChmIkRlYnVnOiAuZW52IHBhdGggcmVzb2x2ZWQ6IHtkb3RlbnZfcGF0aC5yZXNvbHZlKCl9IChleGlzdHM/IHtkb3RlbnZfcGF0aC5leGlzdHMoKX0pIikKCiAgICBwcmludCgiUHJlLUNvbmZpZzogQWJvdXQgdG8gY2FsbCBmcm9tX2NvbmZpZ19kaXIuLi4iKSAgIyBEZWJ1ZzogQmVmb3JlIGNhbGwKICAgIHRyeToKICAgICAgICBjb25maWcgPSBDb25maWcuZnJvbV9jb25maWdfZGlyKGFyZ3MuY29uZmlnX2RpcikKICAgICAgICBwcmludCgiUG9zdC1Db25maWc6IENvbmZpZyBsb2FkZWQgT0shIikgICMgSWYgcmVhY2hlcywgdmFsaWRhdGlvbiBwYXNzZWQKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIkNvbmZpZyBFcnJvcjoge2V9IikKICAgICAgICB0cmFjZWJhY2sucHJpbnRfZXhjKCkKICAgICAgICBzeXMuZXhpdCgxKQogICAgaWYgbm90IGFyZ3MuaG9zdDoKICAgICAgICBhcmdzLmhvc3QgPSBjb25maWcuSE9TVAogICAgaWYgbm90IGFyZ3MucG9ydDoKICAgICAgICBhcmdzLnBvcnQgPSBjb25maWcuUE9SVAoKICAgICMgUnVuIHRoZSBhcHBsaWNhdGlvbgogICAgdHJ5OgogICAgICAgIGFwcCA9IGZ1dHVyZXNib2FyZC5hcHAuaW5pdF9hcHAoY29uZmlnKQogICAgICAgIHByaW50KCJJbml0IEFwcCBPSyEiKSAgIyBDb25maXJtcyBpbml0X2FwcCAoREIvYmx1ZXByaW50L3NjcmFwZXIgc2V0dXApCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJJbml0IEFwcCBFcnJvcjoge2V9IikKICAgICAgICB0cmFjZWJhY2sucHJpbnRfZXhjKCkKICAgICAgICBzeXMuZXhpdCgxKQoKICAgIGlmIGFyZ3Muc2NyYXBlX29ubHk6CiAgICAgICAgIyBTaW5nbGUtcnVuIHNjcmFwZSAobm9uLWxvb3ApCiAgICAgICAgZGVmIHNpbmdsZV9zY3JhcGUoYXBwKToKICAgICAgICAgICAgZnJvbSAubWV0cmljcyBpbXBvcnQgZ2V0X2FsbF9tZXRyaWNzCiAgICAgICAgICAgIGZyb20gLmRiIGltcG9ydCBzYXZlX21ldHJpY3NfdjMgYXMgc2F2ZV9tZXRyaWNzCiAgICAgICAgICAgIGxvb3AgPSBhc3luY2lvLm5ld19ldmVudF9sb29wKCkKICAgICAgICAgICAgYXN5bmNpby5zZXRfZXZlbnRfbG9vcChsb29wKQogICAgICAgICAgICB0ZiA9ICI1bSIgICMgRGVmYXVsdAogICAgICAgICAgICBtZXRyaWNzID0gbG9vcC5ydW5fdW50aWxfY29tcGxldGUoZ2V0X2FsbF9tZXRyaWNzKHRmPXRmKSkKICAgICAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgICAgIHNhdmVkID0gc2F2ZV9tZXRyaWNzKG1ldHJpY3MsIHRpbWVmcmFtZT10ZikKICAgICAgICAgICAgICAgIHByaW50KGYiU2luZ2xlIHNjcmFwZSBzYXZlZCB7c2F2ZWR9IGZvciB7dGZ9IikKICAgICAgICAgICAgbG9vcC5jbG9zZSgpCiAgICAgICAgd2l0aCBhcHAuYXBwX2NvbnRleHQoKToKICAgICAgICAgICAgc2luZ2xlX3NjcmFwZShhcHApCiAgICAgICAgc3lzLmV4aXQoMCkKCiAgICBhcHAucnVuKGhvc3Q9YXJncy5ob3N0LCBwb3J0PWFyZ3MucG9ydCkgICMgRGlyZWN0IHN0ciBob3N0CgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIG1haW4oKQ==",
        "summary": "111L | cli.py | .py | 3.8 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\config.py",
        "type": ".py",
        "size_kb": 9.0,
        "lines": 273,
        "content": "",
        "summary": "273L | config.py | .py | 9.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\db.py",
        "type": ".py",
        "size_kb": 34.2,
        "lines": 862,
        "content": "",
        "summary": "862L | db.py | .py | 34.2 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\metrics.py",
        "type": ".py",
        "size_kb": 10.1,
        "lines": 251,
        "content": "",
        "summary": "251L | metrics.py | .py | 10.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\quant_engine.py",
        "type": ".py",
        "size_kb": 37.7,
        "lines": 880,
        "content": "",
        "summary": "880L | quant_engine.py | .py | 37.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\rest_collector.py",
        "type": ".py",
        "size_kb": 10.3,
        "lines": 233,
        "content": "",
        "summary": "233L | rest_collector.py | .py | 10.3 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\run_migrations.py",
        "type": ".py",
        "size_kb": 4.6,
        "lines": 138,
        "content": "IiIiClRpbWVzY2FsZURCIC8gUG9zdGdyZVNRTCBzY2hlbWEgaW5pdGlhbGl6ZXIgZm9yIGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZC4KRml4ZXMgcHJpbWFyeSBrZXkgaXNzdWVzIGFuZCBzYWZlbHkgZW5hYmxlcyBoeXBlcnRhYmxlcy4KIiIiCgppbXBvcnQgYXN5bmNpbwppbXBvcnQgYXN5bmNwZwppbXBvcnQgb3MKCkRBVEFCQVNFX1VSTCA9IG9zLmdldGVudigiREFUQUJBU0VfVVJMIiwgInBvc3RncmVzcWw6Ly9wb3N0Z3Jlczpwb3N0Z3Jlc0Bsb2NhbGhvc3Q6NTQzMi9mdXR1cmVzIikKCkNSRUFURV9UQUJMRVNfU1FMID0gIiIiCkNSRUFURSBFWFRFTlNJT04gSUYgTk9UIEVYSVNUUyB0aW1lc2NhbGVkYjsKCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIG1ldHJpY3MgKAogICAgaWQgQklHU0VSSUFMLAogICAgc3ltYm9sIFRFWFQgTk9UIE5VTEwsCiAgICB0aW1lZnJhbWUgVEVYVCBOT1QgTlVMTCwKICAgIHByaWNlIERPVUJMRSBQUkVDSVNJT04sCiAgICBwcmljZV9jaGFuZ2VfMjRoX3BjdCBET1VCTEUgUFJFQ0lTSU9OLAogICAgdm9sdW1lXzI0aCBET1VCTEUgUFJFQ0lTSU9OLAogICAgdm9sdW1lX2NoYW5nZV8yNGhfcGN0IERPVUJMRSBQUkVDSVNJT04sCiAgICBtYXJrZXRfY2FwIERPVUJMRSBQUkVDSVNJT04sCiAgICBvaV91c2QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIG9pX2Fic191c2QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIG9pX2NoYW5nZV8yNGhfcGN0IERPVUJMRSBQUkVDSVNJT04sCiAgICBvaV9jaGFuZ2VfNW1fcGN0IERPVUJMRSBQUkVDSVNJT04sCiAgICBvaV9jaGFuZ2VfMTVtX3BjdCBET1VCTEUgUFJFQ0lTSU9OLAogICAgb2lfY2hhbmdlXzMwbV9wY3QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIG9pX2NoYW5nZV8xaF9wY3QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIG9pX2RlbHRhX3BjdCBET1VCTEUgUFJFQ0lTSU9OLAogICAgcHJpY2VfY2hhbmdlXzVtX3BjdCBET1VCTEUgUFJFQ0lTSU9OLAogICAgcHJpY2VfY2hhbmdlXzE1bV9wY3QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIHByaWNlX2NoYW5nZV8zMG1fcGN0IERPVUJMRSBQUkVDSVNJT04sCiAgICBwcmljZV9jaGFuZ2VfMWhfcGN0IERPVUJMRSBQUkVDSVNJT04sCiAgICBnbG9iYWxfbHNfNW0gRE9VQkxFIFBSRUNJU0lPTiwKICAgIGdsb2JhbF9sc18xNW0gRE9VQkxFIFBSRUNJU0lPTiwKICAgIGdsb2JhbF9sc18zMG0gRE9VQkxFIFBSRUNJU0lPTiwKICAgIGdsb2JhbF9sc18xaCBET1VCTEUgUFJFQ0lTSU9OLAogICAgbG9uZ19hY2NvdW50X3BjdCBET1VCTEUgUFJFQ0lTSU9OLAogICAgc2hvcnRfYWNjb3VudF9wY3QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIHRvcF9scyBET1VCTEUgUFJFQ0lTSU9OLAogICAgdG9wX2xzX2FjY291bnRzIERPVUJMRSBQUkVDSVNJT04sCiAgICB0b3BfbHNfcG9zaXRpb25zIERPVUJMRSBQUkVDSVNJT04sCiAgICB0b3BfbHNfZGVsdGFfcGN0IERPVUJMRSBQUkVDSVNJT04sCiAgICBsc19kZWx0YV9wY3QgRE9VQkxFIFBSRUNJU0lPTiwKICAgIGN2ZCBET1VCTEUgUFJFQ0lTSU9OLAogICAgel9sc192YWwgRE9VQkxFIFBSRUNJU0lPTiwKICAgIHpfc2NvcmUgRE9VQkxFIFBSRUNJU0lPTiwKICAgIHpfdG9wX2xzX2FjYyBET1VCTEUgUFJFQ0lTSU9OLAogICAgel90b3BfbHNfcG9zIERPVUJMRSBQUkVDSVNJT04sCiAgICBpbWJhbGFuY2UgRE9VQkxFIFBSRUNJU0lPTiwKICAgIGZ1bmRpbmcgRE9VQkxFIFBSRUNJU0lPTiwKICAgIHJzaSBET1VCTEUgUFJFQ0lTSU9OLAogICAgdm9sX3VzZCBET1VCTEUgUFJFQ0lTSU9OLAogICAgd2VpZ2h0ZWRfb2kgRE9VQkxFIFBSRUNJU0lPTiwKICAgIHZwaSBET1VCTEUgUFJFQ0lTSU9OLAogICAgenNjIERPVUJMRSBQUkVDSVNJT04sCiAgICBsc20gRE9VQkxFIFBSRUNJU0lPTiwKICAgIHVwZGF0ZWRfYXQgVElNRVNUQU1QVFogREVGQVVMVCBub3coKSwKICAgIHJhd19qc29uIEpTT05CIERFRkFVTFQgJ3t9Jzo6anNvbmIKKTsKCkNSRUFURSBJTkRFWCBJRiBOT1QgRVhJU1RTIG1ldHJpY3Nfc3ltYm9sX3RmX2lkeAogICAgT04gbWV0cmljcyhzeW1ib2wsIHRpbWVmcmFtZSwgdXBkYXRlZF9hdCBERVNDKTsKCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHF1YW50X3N1bW1hcnkgKAogICAgaWQgQklHU0VSSUFMLAogICAgc3ltYm9sIFRFWFQsCiAgICB0aW1lZnJhbWUgVEVYVCwKICAgIG9pX3ogRE9VQkxFIFBSRUNJU0lPTiwKICAgIGxzX2RlbHRhX3BjdCBET1VCTEUgUFJFQ0lTSU9OLAogICAgaW1iYWxhbmNlIERPVUJMRSBQUkVDSVNJT04sCiAgICBmdW5kaW5nIERPVUJMRSBQUkVDSVNJT04sCiAgICBjb25mbHVlbmNlX3Njb3JlIERPVUJMRSBQUkVDSVNJT04sCiAgICBiaWFzIFRFWFQsCiAgICB1cGRhdGVkX2F0IFRJTUVTVEFNUFRaIERFRkFVTFQgbm93KCkKKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgbWFya2V0X3Jlc3RfbWV0cmljcyAoCiAgICBpZCBTRVJJQUwgUFJJTUFSWSBLRVksCiAgICB0cyBUSU1FU1RBTVBUWiBOT1QgTlVMTCwKICAgIHN5bWJvbCBURVhUIE5PVCBOVUxMLAogICAgb3BlbiBET1VCTEUgUFJFQ0lTSU9OLAogICAgaGlnaCBET1VCTEUgUFJFQ0lTSU9OLAogICAgbG93IERPVUJMRSBQUkVDSVNJT04sCiAgICBjbG9zZSBET1VCTEUgUFJFQ0lTSU9OLAogICAgdm9sdW1lIERPVUJMRSBQUkVDSVNJT04sCiAgICB0cmFkZXMgSU5ULAogICAgb2kgRE9VQkxFIFBSRUNJU0lPTiwKICAgIGZ1bmRpbmdfcmF0ZSBET1VCTEUgUFJFQ0lTSU9OLAogICAgbWFya19wcmljZSBET1VCTEUgUFJFQ0lTSU9OLAogICAgZ2xvYmFsX2xvbmdfc2hvcnRfcmF0aW8gRE9VQkxFIFBSRUNJU0lPTiwKICAgIHRvcF90cmFkZXJfbG9uZ19zaG9ydF9yYXRpbyBET1VCTEUgUFJFQ0lTSU9OLAogICAgdG9wX3RyYWRlcl9hY2NvdW50X3JhdGlvIERPVUJMRSBQUkVDSVNJT04sCiAgICBvcGVuX2ludGVyZXN0X2hpc3RfdXNkIERPVUJMRSBQUkVDSVNJT04sCiAgICBtZXRhZGF0YSBKU09OQiwKICAgIGNyZWF0ZWRfYXQgVElNRVNUQU1QVFogREVGQVVMVCBOT1coKQopOwoiIiIKCmFzeW5jIGRlZiBydW5fbWlncmF0aW9ucygpOgogICAgcHJpbnQoZiLwn5SMIENvbm5lY3RpbmcgdG8ge0RBVEFCQVNFX1VSTH0iKQogICAgY29ubiA9IGF3YWl0IGFzeW5jcGcuY29ubmVjdChEQVRBQkFTRV9VUkwpCiAgICB0cnk6CiAgICAgICAgIyBTdGVwIDE6IEVuc3VyZSBiYXNlIHNjaGVtYQogICAgICAgIGF3YWl0IGNvbm4uZXhlY3V0ZShDUkVBVEVfVEFCTEVTX1NRTCkKICAgICAgICBwcmludCgi4pyFIFRhYmxlcyBjcmVhdGVkIG9yIHZlcmlmaWVkLiIpCgogICAgICAgICMgU3RlcCAyOiBFbnN1cmUgY29tcG9zaXRlIHByaW1hcnkga2V5cwogICAgICAgIGZvciB0YWJsZSBpbiBbIm1ldHJpY3MiLCAicXVhbnRfc3VtbWFyeSJdOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBhd2FpdCBjb25uLmV4ZWN1dGUoZiJBTFRFUiBUQUJMRSB7dGFibGV9IERST1AgQ09OU1RSQUlOVCBJRiBFWElTVFMge3RhYmxlfV9wa2V5OyIpCiAgICAgICAgICAgICAgICBhd2FpdCBjb25uLmV4ZWN1dGUoZiJBTFRFUiBUQUJMRSB7dGFibGV9IEFERCBDT05TVFJBSU5UIHt0YWJsZX1fcGtleSBQUklNQVJZIEtFWSAoaWQsIHVwZGF0ZWRfYXQpOyIpCiAgICAgICAgICAgICAgICBwcmludChmIvCflJEgUHJpbWFyeSBrZXkgcmVzZXQgZm9yIHt0YWJsZX0gKGlkLCB1cGRhdGVkX2F0KS4iKQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBwcmludChmIuKaoO+4jyBDb3VsZCBub3QgYWx0ZXIgcHJpbWFyeSBrZXkgZm9yIHt0YWJsZX06IHtlfSIpCgogICAgICAgICMgU3RlcCAzOiBDcmVhdGUgaHlwZXJ0YWJsZXMgc2FmZWx5CiAgICAgICAgZm9yIHRhYmxlIGluIFsibWV0cmljcyIsICJxdWFudF9zdW1tYXJ5Il06CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGF3YWl0IGNvbm4uZXhlY3V0ZShmIiIiCiAgICAgICAgICAgICAgICAgICAgU0VMRUNUIGNyZWF0ZV9oeXBlcnRhYmxlKAogICAgICAgICAgICAgICAgICAgICAgICAne3RhYmxlfScsCiAgICAgICAgICAgICAgICAgICAgICAgICd1cGRhdGVkX2F0JywKICAgICAgICAgICAgICAgICAgICAgICAgaWZfbm90X2V4aXN0cyA9PiBUUlVFLAogICAgICAgICAgICAgICAgICAgICAgICBtaWdyYXRlX2RhdGEgPT4gVFJVRQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICAiIiIpCiAgICAgICAgICAgICAgICBwcmludChmIvCfk4ggSHlwZXJ0YWJsZSBlbnN1cmVkIGZvciB7dGFibGV9LiIpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHByaW50KGYi4pqg77iPIFNraXBwZWQgaHlwZXJ0YWJsZSBjcmVhdGlvbiBmb3Ige3RhYmxlfToge2V9IikKCiAgICBmaW5hbGx5OgogICAgICAgIGF3YWl0IGNvbm4uY2xvc2UoKQogICAgICAgIHByaW50KCLwn5SSIENvbm5lY3Rpb24gY2xvc2VkLiIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXN5bmNpby5ydW4ocnVuX21pZ3JhdGlvbnMoKSkK",
        "summary": "138L | run_migrations.py | .py | 4.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\scraper.py",
        "type": ".py",
        "size_kb": 4.0,
        "lines": 103,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvc2NyYXBlci5weQoiIiIKQXN5bmMgc2NyYXBpbmcgbG9vcCB1c2VkIGZvciBzY2hlZHVsZWQgVEYgc25hcHNob3RzLgpOb3cgYXN5bmMtZnJpZW5kbHkgYW5kIGVtaXRzIHZpYSBhIHNtYWxsIHF1ZXVlIGZvciBub24tYmxvY2tpbmcgc29ja2V0IGVtaXNzaW9uLgoiIiIKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwppbXBvcnQgb3MKaW1wb3J0IHRpbWUKaW1wb3J0IGFzeW5jaW8KaW1wb3J0IHRocmVhZGluZwppbXBvcnQgcmFuZG9tCmZyb20gcXVldWUgaW1wb3J0IFF1ZXVlLCBFbXB0eQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQppbXBvcnQgbG9nZ2luZwoKbG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoImZ1dHVyZXNib2FyZC5zY3JhcGVyIikKbG9nZ2VyLnNldExldmVsKG9zLmdldGVudigiTE9HX0xFVkVMIiwgIklORk8iKSkKCmZyb20gLm1ldHJpY3MgaW1wb3J0IGdldF9hbGxfbWV0cmljcwpmcm9tIC5kYiBpbXBvcnQgc2F2ZV9tZXRyaWNzX3YzX2FzeW5jCmZyb20gLnF1YW50X2VuZ2luZSBpbXBvcnQgY29tcHV0ZV9xdWFudF9tZXRyaWNzLCB1cGRhdGVfcXVhbnRfc3VtbWFyeQoKX2VtaXRfcXVldWU6IFF1ZXVlID0gUXVldWUobWF4c2l6ZT0xMDAwKQoKZGVmIGVtaXRfd29ya2VyKHNvY2tldGlvKToKICAgIGxvZ2dlci5pbmZvKCJbc2NyYXBlci5lbWl0X3dvcmtlcl0gc3RhcnRlZCIpCiAgICB3aGlsZSBUcnVlOgogICAgICAgIHRyeToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcGF5bG9hZCA9IF9lbWl0X3F1ZXVlLmdldF9ub3dhaXQoKQogICAgICAgICAgICBleGNlcHQgRW1wdHk6CiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuMSkKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIGlmIHBheWxvYWQgYW5kIHNvY2tldGlvOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICMgTm9uLWJsb2NraW5nIGVtaXQgLSBpZiBzb2NrZXRpbyBpcyBub3QgYXN5bmMsIHRoaXMgaXMgZmluZQogICAgICAgICAgICAgICAgICAgIHNvY2tldGlvLmVtaXQoIm1ldHJpY3NfdXBkYXRlIiwgcGF5bG9hZCkKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZygiW3NjcmFwZXIuZW1pdF93b3JrZXJdIGVtaXQgZXJyb3I6ICVzIiwgZSkKICAgICAgICAgICAgX2VtaXRfcXVldWUudGFza19kb25lKCkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGxvZ2dlci5leGNlcHRpb24oIltzY3JhcGVyLmVtaXRfd29ya2VyXSBmYXRhbDogJXMiLCBlKQogICAgICAgICAgICB0aW1lLnNsZWVwKDEpCgphc3luYyBkZWYgc2NyYXBlX3RmX2xvb3AodGY6IHN0ciwgaW50ZXJ2YWw6IGludCA9IDMwMCwgc29ja2V0aW89Tm9uZSk6CiAgICAiIiIKICAgIFNpbmdsZSBURiBsb29wOiBmZXRjaCBtZXRyaWNzICh2aWEgZ2V0X2FsbF9tZXRyaWNzKSwgc2F2ZSB0byBEQiwgZW1pdCB0byBzb2NrZXQuCiAgICAiIiIKICAgIGxvZ2dlci5pbmZvKCJbc2NyYXBlcl0gc3RhcnRpbmcgc2NyYXBlIGxvb3AgZm9yICVzIChpbnRlcnZhbD0lcykiLCB0ZiwgaW50ZXJ2YWwpCiAgICB3aGlsZSBUcnVlOgogICAgICAgIHRyeToKICAgICAgICAgICAgbWV0cmljcyA9IGF3YWl0IGdldF9hbGxfbWV0cmljcyh0Zj10ZikKICAgICAgICAgICAgaWYgbWV0cmljczoKICAgICAgICAgICAgICAgICMgU2F2ZSBpbiBhc3luYyBEQgogICAgICAgICAgICAgICAgc2F2ZWQgPSBhd2FpdCBzYXZlX21ldHJpY3NfdjNfYXN5bmMobWV0cmljcywgdGltZWZyYW1lPXRmKQogICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oIltzY3JhcGVyXSBzYXZlZCAlZCByb3dzIGZvciB0Zj0lcyIsIHNhdmVkLCB0ZikKICAgICAgICAgICAgICAgICMgdXBkYXRlIHF1YW50IHN1bW1hcnkgYXN5bmMgKG5vbi1ibG9ja2luZykKICAgICAgICAgICAgICAgIGFzeW5jaW8uY3JlYXRlX3Rhc2sodXBkYXRlX3F1YW50X3N1bW1hcnkoKSkKICAgICAgICAgICAgICAgICMgRW1pdCBwYXlsb2FkCiAgICAgICAgICAgICAgICBwYXlsb2FkID0geyJkYXRhIjogbWV0cmljcywgInBoYXNlIjogb3MuZ2V0ZW52KCJQSEFTRSIsICJQMyIpLCAidGltZXN0YW1wIjogZGF0ZXRpbWUudXRjbm93KCkuaXNvZm9ybWF0KCl9CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgX2VtaXRfcXVldWUucHV0X25vd2FpdChwYXlsb2FkKQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZygiW3NjcmFwZXJdIGVtaXQgcXVldWUgZnVsbCAtIGRyb3BwaW5nIHBheWxvYWQiKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoIltzY3JhcGVyXSBubyBtZXRyaWNzIHJldHVybmVkIGZvciB0Zj0lcyIsIHRmKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgbG9nZ2VyLmV4Y2VwdGlvbigiW3NjcmFwZXJdIHNjcmFwZSBlcnJvcjogJXMiLCBlKQogICAgICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKG1pbigxMjAsIGludGVydmFsICogMikpCiAgICAgICAgYXdhaXQgYXN5bmNpby5zbGVlcChpbnRlcnZhbCkKCmRlZiBzdGFydF9iYWNrZ3JvdW5kX3NjcmFwZXIoc29ja2V0aW89Tm9uZSk6CiAgICAiIiIKICAgIFN0YXJ0IGVtaXQgd29ya2VyIHRocmVhZCBhbmQgc3Bhd24gYXN5bmMgZXZlbnQgbG9vcCBpbiBiYWNrZ3JvdW5kIHRocmVhZHMgZm9yIHNjcmFwZSBsb29wcy4KICAgICIiIgogICAgIyBzdGFydCBlbWl0IHdvcmtlciBpbiBhIHRocmVhZAogICAgdCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PWVtaXRfd29ya2VyLCBhcmdzPShzb2NrZXRpbywpLCBkYWVtb249VHJ1ZSkKICAgIHQuc3RhcnQoKQoKICAgICMgc3RhcnQgYXN5bmMgc2NyYXBlciBsb29wcyBpbiBhIHNlcGFyYXRlIHRocmVhZCB3aXRoIGV2ZW50IGxvb3AKICAgIGRlZiBfcnVubmVyKCk6CiAgICAgICAgbG9vcCA9IGFzeW5jaW8ubmV3X2V2ZW50X2xvb3AoKQogICAgICAgIGFzeW5jaW8uc2V0X2V2ZW50X2xvb3AobG9vcCkKICAgICAgICB0Zl9pbnRlcnZhbHMgPSB7IjVtIjogMzAwLCAiMTVtIjogOTAwLCAiMzBtIjogMTgwMCwgIjFoIjogMzYwMH0KICAgICAgICB0YXNrcyA9IFtdCiAgICAgICAgZm9yIHRmLCBpbnRlcnZhbCBpbiB0Zl9pbnRlcnZhbHMuaXRlbXMoKToKICAgICAgICAgICAgIyBzdGFnZ2VyIGEgYml0IHRvIGF2b2lkIHNwaWtlIGF0IHN0YXJ0dXAKICAgICAgICAgICAgZGVsYXkgPSByYW5kb20udW5pZm9ybSgwLCA1KQogICAgICAgICAgICBhc3luYyBkZWYgc3RhcnRlcih0Zj10ZiwgaW50ZXJ2YWw9aW50ZXJ2YWwsIGRlbGF5PWRlbGF5KToKICAgICAgICAgICAgICAgIGF3YWl0IGFzeW5jaW8uc2xlZXAoZGVsYXkpCiAgICAgICAgICAgICAgICBhd2FpdCBzY3JhcGVfdGZfbG9vcCh0ZiwgaW50ZXJ2YWwsIHNvY2tldGlvPXNvY2tldGlvKQogICAgICAgICAgICB0YXNrcy5hcHBlbmQobG9vcC5jcmVhdGVfdGFzayhzdGFydGVyKCkpKQogICAgICAgIHRyeToKICAgICAgICAgICAgbG9vcC5ydW5fZm9yZXZlcigpCiAgICAgICAgZmluYWxseToKICAgICAgICAgICAgZm9yIHRzayBpbiB0YXNrczoKICAgICAgICAgICAgICAgIHRzay5jYW5jZWwoKQogICAgICAgICAgICBsb29wLnJ1bl91bnRpbF9jb21wbGV0ZShsb29wLnNodXRkb3duX2FzeW5jZ2VucygpKQogICAgICAgICAgICBsb29wLmNsb3NlKCkKICAgIHRociA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PV9ydW5uZXIsIGRhZW1vbj1UcnVlKQogICAgdGhyLnN0YXJ0KCkKICAgIGxvZ2dlci5pbmZvKCJbc2NyYXBlcl0gYmFja2dyb3VuZCBzY3JhcGVyIHN0YXJ0ZWQiKQogICAgcmV0dXJuIHRocgo=",
        "summary": "103L | scraper.py | .py | 4.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\utils.py",
        "type": ".py",
        "size_kb": 2.8,
        "lines": 62,
        "content": "IyBGaXhlZDogYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL3V0aWxzLnB5CiMgQ2hhbmdlczoKIyAtIEdQVCBQYXRjaCBEOiBDb25zaXN0ZW50IHR1cGxlIHJldHVybiwgdGltZW91dD01LCBzZXNzaW9uLmNsb3NlKCkuCiMgLSBHUFQgUGF0Y2ggRTogUGFyYW1zIGZvciBrZXkvc2VjcmV0IHdpdGggZW52IGZhbGxiYWNrOyBubyBjdXJyZW50X2FwcC4KCmltcG9ydCByZXF1ZXN0cwpmcm9tIGNvbGxlY3Rpb25zIGltcG9ydCBPcmRlcmVkRGljdApmcm9tIHVybGxpYi5wYXJzZSBpbXBvcnQgdXJsZW5jb2RlCmZyb20gZmxhc2sgaW1wb3J0IGN1cnJlbnRfYXBwCmltcG9ydCBvcwoKZGVmIHNlbmRfcHVibGljX3JlcXVlc3QodXJsX3BhdGgsIHBheWxvYWQ9Tm9uZSwgYXBpX2Jhc2U9Tm9uZSwgdGltZW91dD01KToKICAgICIiIlJldHVybiAoaGVhZGVycywganNvbl9ib2R5KSBvciAoaGVhZGVycywgW10pIG9uIGVycm9yLiBBbHdheXMgcmV0dXJucyB0dXBsZS4iIiIKICAgIGZyb20gcmVxdWVzdHMgaW1wb3J0IFNlc3Npb24sIGV4Y2VwdGlvbnMKICAgIHBheWxvYWQgPSBwYXlsb2FkIG9yIHt9CiAgICBiYXNlID0gYXBpX2Jhc2Ugb3IgY3VycmVudF9hcHAuY29uZmlnLmdldCgiQVBJX0JBU0VfVVJMIiwgImh0dHBzOi8vZmFwaS5iaW5hbmNlLmNvbSIpIGlmIGN1cnJlbnRfYXBwIGVsc2UgImh0dHBzOi8vZmFwaS5iaW5hbmNlLmNvbSIKICAgIHF1ZXJ5X3N0cmluZyA9IHVybGVuY29kZShwYXlsb2FkLCBUcnVlKQogICAgdXJsID0gYmFzZSArIHVybF9wYXRoCiAgICBpZiBxdWVyeV9zdHJpbmc6CiAgICAgICAgdXJsID0gdXJsICsgIj8iICsgcXVlcnlfc3RyaW5nCiAgICBzZXNzaW9uID0gU2Vzc2lvbigpCiAgICB0cnk6CiAgICAgICAgc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7IkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgifSkKICAgICAgICByZXNwb25zZSA9IHNlc3Npb24uZ2V0KHVybCwgdGltZW91dD10aW1lb3V0KQogICAgICAgIGlmIHJlc3BvbnNlLnN0YXR1c19jb2RlICE9IDIwMDoKICAgICAgICAgICAgY3VycmVudF9hcHAubG9nZ2VyLndhcm5pbmcoZiJOb24tMjAwIHN0YXR1cyBmb3Ige3VybH06IHtyZXNwb25zZS5zdGF0dXNfY29kZX0iKSBpZiBjdXJyZW50X2FwcCBhbmQgY3VycmVudF9hcHAubG9nZ2VyIGVsc2UgcHJpbnQoZiJOb24tMjAwIHN0YXR1cyBmb3Ige3VybH06IHtyZXNwb25zZS5zdGF0dXNfY29kZX0iKQogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuaGVhZGVycyBvciB7fSwgW10KICAgICAgICB0ZXh0ID0gcmVzcG9uc2UudGV4dCBvciAiIgogICAgICAgIGlmIG5vdCB0ZXh0LnN0cmlwKCk6CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5oZWFkZXJzIG9yIHt9LCBbXQogICAgICAgIGlmIHRleHQuc3RhcnRzd2l0aCgiPCFET0NUWVBFIikgb3IgImJpbmFuY2UuY29tL2VuL2Vycm9yIiBpbiB0ZXh0Lmxvd2VyKCk6CiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5oZWFkZXJzIG9yIHt9LCBbXQogICAgICAgIHRyeToKICAgICAgICAgICAganNvbl9yZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuaGVhZGVycyBvciB7fSwgW10KICAgICAgICAjIEFQSSBlcnJvciBzaWduYWwKICAgICAgICBpZiBpc2luc3RhbmNlKGpzb25fcmVzcG9uc2UsIGRpY3QpIGFuZCAiY29kZSIgaW4ganNvbl9yZXNwb25zZSBhbmQganNvbl9yZXNwb25zZVsiY29kZSJdIDwgMDoKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmhlYWRlcnMgb3Ige30sIFtdCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmhlYWRlcnMgb3Ige30sIGpzb25fcmVzcG9uc2UKICAgIGV4Y2VwdCBleGNlcHRpb25zLlJlcXVlc3RFeGNlcHRpb24gYXMgZToKICAgICAgICBpZiBjdXJyZW50X2FwcCBhbmQgY3VycmVudF9hcHAubG9nZ2VyOgogICAgICAgICAgICBjdXJyZW50X2FwcC5sb2dnZXIud2FybmluZyhmIkNvbm5lY3Rpb24gZXJyb3IgZm9yIHt1cmx9OiB7ZX0iKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KGYiQ29ubmVjdGlvbiBlcnJvciBmb3Ige3VybH06IHtlfSIpCiAgICAgICAgcmV0dXJuIHt9LCBbXQogICAgZmluYWxseToKICAgICAgICBzZXNzaW9uLmNsb3NlKCkKCmRlZiBoYXNoaW5nKHF1ZXJ5X3N0cmluZywgZXhjaGFuZ2U9ImJpbmFuY2UiLCB0aW1lc3RhbXA9Tm9uZSwgYXBpX3NlY3JldD1Ob25lLCBhcGlfa2V5PU5vbmUpOgogICAgIiIiU2lnbmF0dXJlIGhhc2hpbmcgKGZyb20gc2NyYXBlci5weSkuIiIiCiAgICBpbXBvcnQgaG1hYwogICAgaW1wb3J0IGhhc2hsaWIKICAgIHNlY3JldCA9IGFwaV9zZWNyZXQgb3Igb3MuZ2V0ZW52KCJBUElfU0VDUkVUIikgb3IgY3VycmVudF9hcHAuY29uZmlnLmdldCgiQVBJX1NFQ1JFVCIsICIiKSBpZiBjdXJyZW50X2FwcCBlbHNlICIiCiAgICBrZXkgPSBhcGlfa2V5IG9yIG9zLmdldGVudigiQVBJX0tFWSIpIG9yIGN1cnJlbnRfYXBwLmNvbmZpZy5nZXQoIkFQSV9LRVkiLCAiIikgaWYgY3VycmVudF9hcHAgZWxzZSAiIgogICAgaWYgZXhjaGFuZ2UgPT0gImJ5Yml0IjoKICAgICAgICBxdWVyeV9zdHJpbmcgPSBmInt0aW1lc3RhbXB9e2tleX01MDAwIiArIHF1ZXJ5X3N0cmluZwogICAgcmV0dXJuIGhtYWMubmV3KAogICAgICAgIHNlY3JldC5lbmNvZGUoInV0Zi04IiksCiAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICBoYXNobGliLnNoYTI1NiwKICAgICkuaGV4ZGlnZXN0KCk=",
        "summary": "62L | utils.py | .py | 2.8 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\version.py",
        "type": ".py",
        "size_kb": 0.1,
        "lines": 3,
        "content": "IyBweWxpbnQ6IHNraXAtZmlsZQoKX192ZXJzaW9uX18gPSAiMC4zLjQuZGV2MCtnNTcxMzdkNGU4LmQyMDI1MTAxNiI=",
        "summary": "3L | version.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\wsgi.py",
        "type": ".py",
        "size_kb": 0.1,
        "lines": 6,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGZ1dHVyZXNib2FyZC5hcHAKCgphcHAgPSBmdXR1cmVzYm9hcmQuYXBwLmluaXRfYXBwKCkK",
        "summary": "6L | wsgi.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\ws_manager.py",
        "type": ".py",
        "size_kb": 8.7,
        "lines": 227,
        "content": "",
        "summary": "227L | ws_manager.py | .py | 8.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\__init__.py",
        "type": ".py",
        "size_kb": 1.1,
        "lines": 33,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvX19pbml0X18ucHkKIyBFYXJseSBhc3luYyBkZXRlY3Rpb24gKyBwYWNrYWdlIG1ldGFkYXRhCmZyb20gX19mdXR1cmVfXyBpbXBvcnQgYW5ub3RhdGlvbnMKaW1wb3J0IHBhdGhsaWIKCiMgUGFja2FnZSBpbml0OiBkbyBub3QgbW9ua2V5LXBhdGNoIGV2ZW50bGV0L2dldmVudC4KIyBQcmVmZXIgYXN5bmNpbyBhcyBjYW5vbmljYWwgYXN5bmMgcnVudGltZSBmb3IgdGhpcyBhcHAuCl9BU1lOQ19NT0RFID0gImFzeW5jaW8iCgpQQUNLQUdFX1JPT1QgPSBwYXRobGliLlBhdGgoX19maWxlX18pLnJlc29sdmUoKS5wYXJlbnQKCnRyeToKICAgIGZyb20gLnZlcnNpb24gaW1wb3J0IF9fdmVyc2lvbl9fCmV4Y2VwdCBJbXBvcnRFcnJvcjogICMgcHJhZ21hOiBubyBjb3ZlcgogICAgX192ZXJzaW9uX18gPSAiMC4wLjAubm90LWluc3RhbGxlZCIKICAgIHRyeToKICAgICAgICBmcm9tIGltcG9ydGxpYi5tZXRhZGF0YSBpbXBvcnQgUGFja2FnZU5vdEZvdW5kRXJyb3IsIHZlcnNpb24KICAgICAgICB0cnk6CiAgICAgICAgICAgIF9fdmVyc2lvbl9fID0gdmVyc2lvbigiZnV0dXJlc2JvYXJkIikKICAgICAgICBleGNlcHQgUGFja2FnZU5vdEZvdW5kRXJyb3I6CiAgICAgICAgICAgIHBhc3MKICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGZyb20gcGtnX3Jlc291cmNlcyBpbXBvcnQgZ2V0X2Rpc3RyaWJ1dGlvbiwgRGlzdHJpYnV0aW9uTm90Rm91bmQgICMgdHlwZTogaWdub3JlCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIF9fdmVyc2lvbl9fID0gZ2V0X2Rpc3RyaWJ1dGlvbigiZnV0dXJlc2JvYXJkIikudmVyc2lvbgogICAgICAgICAgICBleGNlcHQgRGlzdHJpYnV0aW9uTm90Rm91bmQ6CiAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgZXhjZXB0IEltcG9ydEVycm9yOgogICAgICAgICAgICBwYXNzCgpfX2FsbF9fID0gWyJfQVNZTkNfTU9ERSIsICJfX3ZlcnNpb25fXyJdCl9fYWxsX18uZXh0ZW5kKFsiY29uZmlnIiwgImRiIiwgIm1vZGVscyIsICJzY3JhcGVyIiwgInNlcnZlciIsICJ1dGlscyJdKSAgICMgc3VibW9kdWxlcw==",
        "summary": "33L | __init__.py | .py | 1.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\base.html",
        "type": ".html",
        "size_kb": 10.5,
        "lines": 141,
        "content": "",
        "summary": "141L | base.html | .html | 10.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\coin.html",
        "type": ".html",
        "size_kb": 30.7,
        "lines": 707,
        "content": "",
        "summary": "707L | coin.html | .html | 30.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\error.html",
        "type": ".html",
        "size_kb": 0.4,
        "lines": 10,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfTQwNHslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZSI+PC9pPiBFcnJvciA0MDQ8L2gzPgogICAgPC9kaXY+CiAgICA8cCBjbGFzcz0iaW1wb3J0YW50Ij4KICAgICAgICBQYWdlIG5vdCBmb3VuZAogICAgPC9wPgp7JSBlbmRibG9jayAlfQo=",
        "summary": "10L | error.html | .html | 0.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\history.html",
        "type": ".html",
        "size_kb": 3.6,
        "lines": 87,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9eyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgdGl0bGUgJX1JbmNvbWUgaGlzdG9yeXslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWhpc3RvcnkiPjwvaT4gSW5jb21lIGhpc3Rvcnk8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIHslIGlmIGZpbGVuYW1lICE9ICItIiAlfQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtaW5mbyIgcm9sZT0iYWxlcnQiPjxpIGNsYXNzPSJmYXMgZmEtZmlsZS1kb3dubG9hZCI+PC9pPiBZb3VyIGZpbGUgaGFzIGJlZW4gc2F2ZWQgdG8gPGNvZGU+e3sgZm5hbWUgfX08L2NvZGU+IHdoaWNoIGNhbiBiZSBkb3dubG9hZGVkIGJ5IGNsaWNraW5nIDxhIGhyZWY9ICJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1mbmFtZSkgfX0iPmhlcmU8L2E+PC9kaXY+PGJyPgogICAgICAgICAgICB7JSBlbmRpZiAlfQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0ib3JkZXJzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+VGltZSBwZXJpb2Q8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlRvdGFsIHJlY29yZHM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvbCBpbiBoaXN0b3J5WyJjb2x1bW5zIl0gJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+e3sgY29sIH19PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgdGltZWZyYW1lIGluIGhpc3RvcnkgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGlmIHRpbWVmcmFtZSAhPSAiY29sdW1ucyIgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmhpc3RvcnlfcGFnZV90aW1lZnJhbWUiLCBzdGFydD1oaXN0b3J5W3RpbWVmcmFtZV1bInN0YXJ0Il0sIGVuZD1oaXN0b3J5W3RpbWVmcmFtZV1bImVuZCJdKSB9fSIgcm9sZT0iYnV0dG9uIj5TYXZlIHRvIGZpbGU8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHRpbWVmcmFtZSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBoaXN0b3J5W3RpbWVmcmFtZV1bInRvdGFsIl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgY29sIGluIGhpc3RvcnlbImNvbHVtbnMiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGhpc3RvcnlbdGltZWZyYW1lXVtjb2xdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGJyPjxocj48YnI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8dGFibGUgaWQ9Im9sZGZpbGVzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+RmlsZW5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgZmlsZSBpbiBmaWxlcyAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1maWxlKSB9fSIgcm9sZT0iYnV0dG9uIj5Eb3dubG9hZDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBmaWxlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKCgoKCiAgICA8c2NyaXB0PgogICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICQoJyNvcmRlcnMnKS5EYXRhVGFibGUoewogICAgICAgICAgICAgICAgInBhZ2luZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgIm9yZGVyIjogW10sCiAgICAgICAgICAgICAgICAiaW5mbyI6IGZhbHNlLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJCgnI29sZGZpbGVzJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgICAgICJwYWdpbmciOiB0cnVlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IHRydWUsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWyAxLCAnZGVzYycgXV0sCiAgICAgICAgICAgICAgICAiaW5mbyI6IHRydWUsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "87L | history.html | .html | 3.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\home.html",
        "type": ".html",
        "size_kb": 9.4,
        "lines": 300,
        "content": "",
        "summary": "300L | home.html | .html | 9.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\positions.html",
        "type": ".html",
        "size_kb": 4.5,
        "lines": 84,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9PG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iNjAiPnslIGVuZGJsb2NrICV9CnslIGJsb2NrIHRpdGxlICV9UG9zaXRpb25zeyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgY29udGVudCAlfQogICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGZsZXgtd3JhcCBmbGV4LW1kLW5vd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyBwYi0yIG1iLTMgYm9yZGVyLWJvdHRvbSI+CiAgICAgICAgPGgzPjxpIGNsYXNzPSJmYXMgZmEtaGFuZC1ob2xkaW5nLXVzZCI+PC9pPiBQb3NpdGlvbnM8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiB0YWJsZS1yZXNwb25zaXZlIj4KICAgICAgICAgICAgPHRhYmxlIGlkPSJvcmRlcnMiIGNsYXNzPSd0YWJsZSB0YWJsZS1zbSB0YWJsZS1ib3JkZXJlZCB0ZXh0LWNlbnRlcic+CiAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9InRoZWFkLWRhcmsiPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlN5bWJvbDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5MZXZlcmFnZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFZvbHVtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFByaWNlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlBvcy4gVmFsdWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+VW5yZWFsaXNlZCBQbkw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q3VycmVudCBQcmljZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+QnV5cyBsZWZ0PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0YWJsZS1zdWNjZXNzIj5OZXh0IGJ1eTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLXN1Y2Nlc3MiPkRpc3RhbmNlICU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+U2VsbHMgbGVmdDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtZGFuZ2VyIj5OZXh0IHNlbGw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2UgJTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvaW4gaW4gcG9zaXRpb25zICV9CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBjb2luIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNV19fSB7eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bM10gfX14PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKHBvc2l0aW9uc1tjb2luXVswXVswXVs2XSAqIHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSl8cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7ICIkJS4yZiJ8Zm9ybWF0KHBvc2l0aW9uc1tjb2luXVswXVswXVsyXSkgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IG1hcmtwcmljZXNbY29pbl18cm91bmQoOCl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzBdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVs0XX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNV19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+eyUgaWYgcG9zaXRpb25zW2NvaW5dWzJdWzRdICE9ICItIiAlfXt7ICgocG9zaXRpb25zW2NvaW5dWzJdWzVdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsxXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNl19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzddfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs2XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs3XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICB7JSBpZiBwb3NpdGlvbnNbY29pbl1bMF18bGVuZ3RoID4gMSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgY29pbiB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzVdfX0ge3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzNdIH19eDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzZdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IChwb3NpdGlvbnNbY29pbl1bMF1bMV1bNl0gKiBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0pfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyAiJCUuMmYifGZvcm1hdChwb3NpdGlvbnNbY29pbl1bMF1bMV1bMl0pIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBtYXJrcHJpY2VzW2NvaW5dfHJvdW5kKDgpfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsyXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bOF19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzldfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs4XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs5XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bM119fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzEwXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bMTFdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVsxMF0gIT0gIi0iICV9e3sgKChwb3NpdGlvbnNbY29pbl1bMl1bMTFdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdD4KCiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCgnI29yZGVycycpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWzAsImFzYyJdXSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfSApOwoKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "84L | positions.html | .html | 4.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\projection.html",
        "type": ".html",
        "size_kb": 5.0,
        "lines": 135,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfVByb2plY3Rpb257JSBlbmRibG9jayAlfQp7JSBibG9jayBjb250ZW50ICV9CiAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gZmxleC13cmFwIGZsZXgtbWQtbm93cmFwIGFsaWduLWl0ZW1zLWNlbnRlciBwdC0zIHBiLTIgbWItMyBib3JkZXItYm90dG9tIj4KICAgICAgICA8aDM+PGkgY2xhc3M9ImZhcyBmYS1jaGFydC1saW5lIj48L2k+IFByb2plY3Rpb248L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgQmFsYW5jZSBwcm9qZWN0aW9uIHZpc3VhbGlzZWQKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibGluZUNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8YnI+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIEJhbGFuY2UgcHJvamVjdGlvbiBicmVha2Rvd24KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHRhYmxlIGlkPSJoeXBlIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EYWlseSAlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4zMCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD42MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD45MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4xMjAgZGF5czwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+MjQwIGRheXM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjM2NSBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIHZhbHVlIGluIGRhdGFbInByb2oiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKCh2YWx1ZSAtIDEpICogMTAwKXxyb3VuZCgyKSB9fSU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMzBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVs5MF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMTIwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWy0xXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbV92YWx1ZSJdIH19JSAoYXZnIHBhc3QgNyBkYXlzKTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzMwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzkwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzEyMF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInBjdXN0b20iXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwY3VzdG9tIl1bLTFdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8c2NyaXB0PgoKICAgICAgICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkKCcjaHlwZScpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAic2VhcmNoaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbXSwKICAgICAgICAgICAgICAgICJpbmZvIjogZmFsc2UsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKCiAgICAgICAgQ2hhcnQucmVnaXN0ZXIoQ2hhcnREYXRhTGFiZWxzKTsKCiAgICAgICAgY29uc3QgZmxhdF9jb2xvdXJzID0gWwogICAgICAgICAgICAicmdiYSg0NiwgMjA0LCAxMTMsIDAuMykiLCAicmdiYSg1MiwgMTUyLCAyMTksIDAuMykiLCAicmdiYSgxNTUsIDg5LCAxODIsIDAuMykiLCAicmdiYSg1MiwgNzMsIDk0LCAwLjMpIiwgInJnYmEoMjQxLCAxOTYsIDE1LCAwLjMpIiwgCiAgICAgICAgICAgICJyZ2JhKDIzMCwgMTI2LCAzNCwgMC4zKSIsICJyZ2JhKDIzMSwgNzYsIDYwLCAwLjMpIiwgInJnYmEoMTI3LCAxNDAsIDE0MSwgMC4zKSIsICJyZ2JhKDQ0LCA2MiwgODAsIDAuMykiLCAicmdiYSgyNiwgMTg4LCAxNTYsIDAuMykiLAogICAgICAgICAgICAKICAgICAgICBdCiAgICAgICAgCiAgICAgICAgY29uc3QgZGF0YSA9IHsKICAgICAgICAgICAgbGFiZWxzOiB7eyBkYXRhWyJkYXRlcyJdIHwgc2FmZSB9fSwKICAgICAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgICAgICAgIHslIGZvciB2YWx1ZSBpbiBkYXRhWyJwcm9qIl0gJX0KICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3t7ICgodmFsdWUgLSAxKSAqIDEwMCl8cm91bmQoMikgfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwcm9qIl1bdmFsdWVdIH19LAogICAgICAgICAgICAgICAgICAgIGZpbGw6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBmbGF0X2NvbG91cnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmZsYXRfY29sb3Vycy5sZW5ndGgpXSwKICAgICAgICAgICAgICAgICAgICB0ZW5zaW9uOiAwLjEsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICd7eyBkYXRhWyJwY3VzdG9tX3ZhbHVlIl0gfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwY3VzdG9tIl0gfX0sCiAgICAgICAgICAgICAgICAgICAgZmlsbDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDc1LCAxOTIsIDE5MiwgMC4zKScsCiAgICAgICAgICAgICAgICAgICAgdGVuc2lvbjogMC4xLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgXQogICAgICAgIH07CiAgICAgICAgY29uc3QgY29uZmlnMiA9IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgICAgICAgICAgbGF5b3V0OiB7CiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogewogICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHBsdWdpbnM6ewogICAgICAgICAgICAgICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvU2tpcDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydCgKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpbmVDaGFydCcpLAogICAgICAgICAgICBjb25maWcyCiAgICAgICAgKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "135L | projection.html | .html | 5.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\chartjs-chart-financial.js",
        "type": ".js",
        "size_kb": 14.6,
        "lines": 522,
        "content": "LyohCiAqIEBsaWNlbnNlCiAqIGNoYXJ0anMtY2hhcnQtZmluYW5jaWFsCiAqIGh0dHA6Ly9jaGFydGpzLm9yZy8KICogVmVyc2lvbjogMC4xLjAKICoKICogQ29weXJpZ2h0IDIwMjEgQ2hhcnQuanMgQ29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZQogKiBodHRwczovL2dpdGh1Yi5jb20vY2hhcnRqcy9jaGFydGpzLWNoYXJ0LWZpbmFuY2lhbC9ibG9iL21hc3Rlci9MSUNFTlNFLm1kCiAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewp0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYWN0b3J5KHJlcXVpcmUoJ2NoYXJ0LmpzJyksIHJlcXVpcmUoJ2NoYXJ0LmpzL2hlbHBlcnMnKSkgOgp0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWydjaGFydC5qcycsICdjaGFydC5qcy9oZWxwZXJzJ10sIGZhY3RvcnkpIDoKKGdsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFRoaXMgOiBnbG9iYWwgfHwgc2VsZiwgZmFjdG9yeShnbG9iYWwuQ2hhcnQsIGdsb2JhbC5DaGFydC5oZWxwZXJzKSk7Cn0odGhpcywgKGZ1bmN0aW9uIChjaGFydF9qcywgaGVscGVycykgeyAndXNlIHN0cmljdCc7CgovKioKICogQ29tcHV0ZXMgdGhlICJvcHRpbWFsIiBzYW1wbGUgc2l6ZSB0byBtYWludGFpbiBiYXJzIGVxdWFsbHkgc2l6ZWQgd2hpbGUgcHJldmVudGluZyBvdmVybGFwLgogKiBAcHJpdmF0ZQogKi8KZnVuY3Rpb24gY29tcHV0ZU1pblNhbXBsZVNpemUoc2NhbGUsIHBpeGVscykgewoJbGV0IG1pbiA9IHNjYWxlLl9sZW5ndGg7CglsZXQgcHJldiwgY3VyciwgaSwgaWxlbjsKCglmb3IgKGkgPSAxLCBpbGVuID0gcGl4ZWxzLmxlbmd0aDsgaSA8IGlsZW47ICsraSkgewoJCW1pbiA9IE1hdGgubWluKG1pbiwgTWF0aC5hYnMocGl4ZWxzW2ldIC0gcGl4ZWxzW2kgLSAxXSkpOwoJfQoKCWZvciAoaSA9IDAsIGlsZW4gPSBzY2FsZS50aWNrcy5sZW5ndGg7IGkgPCBpbGVuOyArK2kpIHsKCQljdXJyID0gc2NhbGUuZ2V0UGl4ZWxGb3JUaWNrKGkpOwoJCW1pbiA9IGkgPiAwID8gTWF0aC5taW4obWluLCBNYXRoLmFicyhjdXJyIC0gcHJldikpIDogbWluOwoJCXByZXYgPSBjdXJyOwoJfQoKCXJldHVybiBtaW47Cn0KCi8qKgogKiBUaGlzIGNsYXNzIGlzIGJhc2VkIG9mZiBjb250cm9sbGVyLmJhci5qcyBmcm9tIHRoZSB1cHN0cmVhbSBDaGFydC5qcyBsaWJyYXJ5CiAqLwpjbGFzcyBGaW5hbmNpYWxDb250cm9sbGVyIGV4dGVuZHMgY2hhcnRfanMuQmFyQ29udHJvbGxlciB7CgoJZ2V0TGFiZWxBbmRWYWx1ZShpbmRleCkgewoJCWNvbnN0IG1lID0gdGhpczsKCQljb25zdCBwYXJzZWQgPSBtZS5nZXRQYXJzZWQoaW5kZXgpOwoJCWNvbnN0IGF4aXMgPSBtZS5fY2FjaGVkTWV0YS5pU2NhbGUuYXhpczsKCgkJY29uc3Qge28sIGgsIGwsIGN9ID0gcGFyc2VkOwoJCWNvbnN0IHZhbHVlID0gYE86ICR7b30gIEg6ICR7aH0gIEw6ICR7bH0gIEM6ICR7Y31gOwoKCQlyZXR1cm4gewoJCQlsYWJlbDogYCR7bWUuX2NhY2hlZE1ldGEuaVNjYWxlLmdldExhYmVsRm9yVmFsdWUocGFyc2VkW2F4aXNdKX1gLAoJCQl2YWx1ZQoJCX07Cgl9CgoJZ2V0QWxsUGFyc2VkVmFsdWVzKCkgewoJCWNvbnN0IG1ldGEgPSB0aGlzLl9jYWNoZWRNZXRhOwoJCWNvbnN0IGF4aXMgPSBtZXRhLmlTY2FsZS5heGlzOwoJCWNvbnN0IHBhcnNlZCA9IG1ldGEuX3BhcnNlZDsKCQljb25zdCB2YWx1ZXMgPSBbXTsKCQlmb3IgKGxldCBpID0gMDsgaSA8IHBhcnNlZC5sZW5ndGg7ICsraSkgewoJCQl2YWx1ZXMucHVzaChwYXJzZWRbaV1bYXhpc10pOwoJCX0KCQlyZXR1cm4gdmFsdWVzOwoJfQoKCS8qKgoJICogSW1wbGVtZW50IHRoaXMgb3Vyc2VsdmVzIHNpbmNlIGl0IGRvZXNuJ3QgaGFuZGxlIGhpZ2ggYW5kIGxvdyB2YWx1ZXMKCSAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGFydGpzL0NoYXJ0LmpzL2lzc3Vlcy83MzI4CgkgKiBAcHJvdGVjdGVkCgkgKi8KCWdldE1pbk1heChzY2FsZSkgewoJCWNvbnN0IG1ldGEgPSB0aGlzLl9jYWNoZWRNZXRhOwoJCWNvbnN0IF9wYXJzZWQgPSBtZXRhLl9wYXJzZWQ7CgkJY29uc3QgYXhpcyA9IG1ldGEuaVNjYWxlLmF4aXM7CgoJCWlmIChfcGFyc2VkLmxlbmd0aCA8IDIpIHsKCQkJcmV0dXJuIHttaW46IDAsIG1heDogMX07CgkJfQoKCQlpZiAoc2NhbGUgPT09IG1ldGEuaVNjYWxlKSB7CgkJCXJldHVybiB7bWluOiBfcGFyc2VkWzBdW2F4aXNdLCBtYXg6IF9wYXJzZWRbX3BhcnNlZC5sZW5ndGggLSAxXVtheGlzXX07CgkJfQoKCQlsZXQgbWluID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZOwoJCWxldCBtYXggPSBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7CgkJZm9yIChsZXQgaSA9IDA7IGkgPCBfcGFyc2VkLmxlbmd0aDsgaSsrKSB7CgkJCWNvbnN0IGRhdGEgPSBfcGFyc2VkW2ldOwoJCQltaW4gPSBNYXRoLm1pbihtaW4sIGRhdGEubCk7CgkJCW1heCA9IE1hdGgubWF4KG1heCwgZGF0YS5oKTsKCQl9CgkJcmV0dXJuIHttaW4sIG1heH07Cgl9CgoJX2dldFJ1bGVyKCkgewoJCWNvbnN0IG1lID0gdGhpczsKCQljb25zdCBvcHRzID0gbWUub3B0aW9uczsKCQljb25zdCBtZXRhID0gbWUuX2NhY2hlZE1ldGE7CgkJY29uc3QgaVNjYWxlID0gbWV0YS5pU2NhbGU7CgkJY29uc3QgYXhpcyA9IGlTY2FsZS5heGlzOwoJCWNvbnN0IHBpeGVscyA9IFtdOwoJCWZvciAobGV0IGkgPSAwOyBpIDwgbWV0YS5kYXRhLmxlbmd0aDsgKytpKSB7CgkJCXBpeGVscy5wdXNoKGlTY2FsZS5nZXRQaXhlbEZvclZhbHVlKG1lLmdldFBhcnNlZChpKVtheGlzXSkpOwoJCX0KCQljb25zdCBiYXJUaGlja25lc3MgPSBvcHRzLmJhclRoaWNrbmVzczsKCQljb25zdCBtaW4gPSBjb21wdXRlTWluU2FtcGxlU2l6ZShpU2NhbGUsIHBpeGVscyk7CgkJcmV0dXJuIHsKCQkJbWluLAoJCQlwaXhlbHMsCgkJCXN0YXJ0OiBpU2NhbGUuX3N0YXJ0UGl4ZWwsCgkJCWVuZDogaVNjYWxlLl9lbmRQaXhlbCwKCQkJc3RhY2tDb3VudDogbWUuX2dldFN0YWNrQ291bnQoKSwKCQkJc2NhbGU6IGlTY2FsZSwKCQkJcmF0aW86IGJhclRoaWNrbmVzcyA/IDEgOiBvcHRzLmNhdGVnb3J5UGVyY2VudGFnZSAqIG9wdHMuYmFyUGVyY2VudGFnZQoJCX07Cgl9CgoJLyoqCgkgKiBAcHJvdGVjdGVkCgkgKi8KCWNhbGN1bGF0ZUVsZW1lbnRQcm9wZXJ0aWVzKGluZGV4LCBydWxlciwgcmVzZXQsIG9wdGlvbnMpIHsKCQljb25zdCBtZSA9IHRoaXM7CgkJY29uc3QgdnNjYWxlID0gbWUuX2NhY2hlZE1ldGEudlNjYWxlOwoJCWNvbnN0IGJhc2UgPSB2c2NhbGUuZ2V0QmFzZVBpeGVsKCk7CgkJY29uc3QgaXBpeGVscyA9IG1lLl9jYWxjdWxhdGVCYXJJbmRleFBpeGVscyhpbmRleCwgcnVsZXIsIG9wdGlvbnMpOwoJCWNvbnN0IGRhdGEgPSBtZS5jaGFydC5kYXRhLmRhdGFzZXRzW21lLmluZGV4XS5kYXRhW2luZGV4XTsKCQljb25zdCBvcGVuID0gdnNjYWxlLmdldFBpeGVsRm9yVmFsdWUoZGF0YS5vKTsKCQljb25zdCBoaWdoID0gdnNjYWxlLmdldFBpeGVsRm9yVmFsdWUoZGF0YS5oKTsKCQljb25zdCBsb3cgPSB2c2NhbGUuZ2V0UGl4ZWxGb3JWYWx1ZShkYXRhLmwpOwoJCWNvbnN0IGNsb3NlID0gdnNjYWxlLmdldFBpeGVsRm9yVmFsdWUoZGF0YS5jKTsKCgkJcmV0dXJuIHsKCQkJYmFzZTogcmVzZXQgPyBiYXNlIDogbG93LAoJCQl4OiBpcGl4ZWxzLmNlbnRlciwKCQkJeTogKGxvdyArIGhpZ2gpIC8gMiwKCQkJd2lkdGg6IGlwaXhlbHMuc2l6ZSwKCQkJb3BlbiwKCQkJaGlnaCwKCQkJbG93LAoJCQljbG9zZQoJCX07Cgl9CgoJZHJhdygpIHsKCQljb25zdCBtZSA9IHRoaXM7CgkJY29uc3QgY2hhcnQgPSBtZS5jaGFydDsKCQljb25zdCByZWN0cyA9IG1lLl9jYWNoZWRNZXRhLmRhdGE7CgkJaGVscGVycy5jbGlwQXJlYShjaGFydC5jdHgsIGNoYXJ0LmNoYXJ0QXJlYSk7CgkJZm9yIChsZXQgaSA9IDA7IGkgPCByZWN0cy5sZW5ndGg7ICsraSkgewoJCQlyZWN0c1tpXS5kcmF3KG1lLl9jdHgpOwoJCX0KCQloZWxwZXJzLnVuY2xpcEFyZWEoY2hhcnQuY3R4KTsKCX0KCn0KCkZpbmFuY2lhbENvbnRyb2xsZXIub3ZlcnJpZGVzID0gewoJbGFiZWw6ICcnLAoKCXBhcnNpbmc6IGZhbHNlLAoKCWhvdmVyOiB7CgkJbW9kZTogJ2xhYmVsJwoJfSwKCglkYXRhc2V0czogewoJCWNhdGVnb3J5UGVyY2VudGFnZTogMC44LAoJCWJhclBlcmNlbnRhZ2U6IDAuOSwKCQlhbmltYXRpb246IHsKCQkJbnVtYmVyczogewoJCQkJdHlwZTogJ251bWJlcicsCgkJCQlwcm9wZXJ0aWVzOiBbJ3gnLCAneScsICdiYXNlJywgJ3dpZHRoJywgJ29wZW4nLCAnaGlnaCcsICdsb3cnLCAnY2xvc2UnXQoJCQl9CgkJfQoJfSwKCglzY2FsZXM6IHsKCQl4OiB7CgkJCXR5cGU6ICd0aW1lc2VyaWVzJywKCQkJb2Zmc2V0OiB0cnVlLAoJCQl0aWNrczogewoJCQkJbWFqb3I6IHsKCQkJCQllbmFibGVkOiB0cnVlLAoJCQkJfSwKCQkJCWZvbnRTdHlsZTogY29udGV4dCA9PiBjb250ZXh0LnRpY2subWFqb3IgPyAnYm9sZCcgOiB1bmRlZmluZWQsCgkJCQlzb3VyY2U6ICdkYXRhJywKCQkJCW1heFJvdGF0aW9uOiAwLAoJCQkJYXV0b1NraXA6IHRydWUsCgkJCQlhdXRvU2tpcFBhZGRpbmc6IDc1LAoJCQkJc2FtcGxlU2l6ZTogMTAwCgkJCX0sCgkJCWFmdGVyQnVpbGRUaWNrczogc2NhbGUgPT4gewoJCQkJY29uc3QgRGF0ZVRpbWUgPSB3aW5kb3cgJiYgd2luZG93Lmx1eG9uICYmIHdpbmRvdy5sdXhvbi5EYXRlVGltZTsKCQkJCWlmICghRGF0ZVRpbWUpIHsKCQkJCQlyZXR1cm47CgkJCQl9CgkJCQljb25zdCBtYWpvclVuaXQgPSBzY2FsZS5fbWFqb3JVbml0OwoJCQkJY29uc3QgdGlja3MgPSBzY2FsZS50aWNrczsKCQkJCWNvbnN0IGZpcnN0VGljayA9IHRpY2tzWzBdOwoJCQkJaWYgKCFmaXJzdFRpY2spIHsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJbGV0IHZhbCA9IERhdGVUaW1lLmZyb21NaWxsaXMoZmlyc3RUaWNrLnZhbHVlKTsKCQkJCWlmICgobWFqb3JVbml0ID09PSAnbWludXRlJyAmJiB2YWwuc2Vjb25kID09PSAwKQoJCQkJCQl8fCAobWFqb3JVbml0ID09PSAnaG91cicgJiYgdmFsLm1pbnV0ZSA9PT0gMCkKCQkJCQkJfHwgKG1ham9yVW5pdCA9PT0gJ2RheScgJiYgdmFsLmhvdXIgPT09IDkpCgkJCQkJCXx8IChtYWpvclVuaXQgPT09ICdtb250aCcgJiYgdmFsLmRheSA8PSAzICYmIHZhbC53ZWVrZGF5ID09PSAxKQoJCQkJCQl8fCAobWFqb3JVbml0ID09PSAneWVhcicgJiYgdmFsLm1vbnRoID09PSAxKSkgewoJCQkJCWZpcnN0VGljay5tYWpvciA9IHRydWU7CgkJCQl9IGVsc2UgewoJCQkJCWZpcnN0VGljay5tYWpvciA9IGZhbHNlOwoJCQkJfQoJCQkJbGV0IGxhc3RNYWpvciA9IHZhbC5nZXQobWFqb3JVbml0KTsKCgkJCQlmb3IgKGxldCBpID0gMTsgaSA8IHRpY2tzLmxlbmd0aDsgaSsrKSB7CgkJCQkJY29uc3QgdGljayA9IHRpY2tzW2ldOwoJCQkJCXZhbCA9IERhdGVUaW1lLmZyb21NaWxsaXModGljay52YWx1ZSk7CgkJCQkJY29uc3QgY3Vyck1ham9yID0gdmFsLmdldChtYWpvclVuaXQpOwoJCQkJCXRpY2subWFqb3IgPSBjdXJyTWFqb3IgIT09IGxhc3RNYWpvcjsKCQkJCQlsYXN0TWFqb3IgPSBjdXJyTWFqb3I7CgkJCQl9CgkJCQlzY2FsZS50aWNrcyA9IHRpY2tzOwoJCQl9CgkJfSwKCQl5OiB7CgkJCXR5cGU6ICdsaW5lYXInCgkJfQoJfSwKCglwbHVnaW5zOiB7CgkJdG9vbHRpcDogewoJCQlpbnRlcnNlY3Q6IGZhbHNlLAoJCQltb2RlOiAnaW5kZXgnLAoJCQljYWxsYmFja3M6IHsKCQkJCWxhYmVsKGN0eCkgewoJCQkJCWNvbnN0IHBvaW50ID0gY3R4LnBhcnNlZDsKCgkJCQkJaWYgKCFoZWxwZXJzLmlzTnVsbE9yVW5kZWYocG9pbnQueSkpIHsKCQkJCQkJcmV0dXJuIGNoYXJ0X2pzLmRlZmF1bHRzLnBsdWdpbnMudG9vbHRpcC5jYWxsYmFja3MubGFiZWwoY3R4KTsKCQkJCQl9CgoJCQkJCWNvbnN0IHtvLCBoLCBsLCBjfSA9IHBvaW50OwoKCQkJCQlyZXR1cm4gYE86ICR7b30gIEg6ICR7aH0gIEw6ICR7bH0gIEM6ICR7Y31gOwoJCQkJfQoJCQl9CgkJfQoJfQp9OwoKY29uc3QgZ2xvYmFsT3B0cyQyID0gY2hhcnRfanMuQ2hhcnQuZGVmYXVsdHM7CgpnbG9iYWxPcHRzJDIuZWxlbWVudHMuZmluYW5jaWFsID0gewoJY29sb3I6IHsKCQl1cDogJ3JnYmEoODAsIDE2MCwgMTE1LCAwLjYpJywKCQlkb3duOiAncmdiYSgyMTUsIDg1LCA2NSwgMC42KScsCgkJdW5jaGFuZ2VkOiAncmdiYSg5MCwgOTAsIDkwLCAwLjYpJywKCX0KfTsKCi8qKgogKiBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IHRoZSBib3VuZHMgb2YgdGhlIGJhciByZWdhcmRsZXNzIG9mIHRoZSBvcmllbnRhdGlvbgogKiBAcGFyYW0ge1JlY3RhbmdsZX0gYmFyIHRoZSBiYXIKICogQHBhcmFtIHtib29sZWFufSBbdXNlRmluYWxQb3NpdGlvbl0KICogQHJldHVybiB7b2JqZWN0fSBib3VuZHMgb2YgdGhlIGJhcgogKiBAcHJpdmF0ZQogKi8KZnVuY3Rpb24gZ2V0QmFyQm91bmRzKGJhciwgdXNlRmluYWxQb3NpdGlvbikgewoJY29uc3Qge3gsIHksIGJhc2UsIHdpZHRoLCBoZWlnaHR9ID0gYmFyLmdldFByb3BzKFsneCcsICdsb3cnLCAnaGlnaCcsICd3aWR0aCcsICdoZWlnaHQnXSwgdXNlRmluYWxQb3NpdGlvbik7CgoJbGV0IGxlZnQsIHJpZ2h0LCB0b3AsIGJvdHRvbSwgaGFsZjsKCglpZiAoYmFyLmhvcml6b250YWwpIHsKCQloYWxmID0gaGVpZ2h0IC8gMjsKCQlsZWZ0ID0gTWF0aC5taW4oeCwgYmFzZSk7CgkJcmlnaHQgPSBNYXRoLm1heCh4LCBiYXNlKTsKCQl0b3AgPSB5IC0gaGFsZjsKCQlib3R0b20gPSB5ICsgaGFsZjsKCX0gZWxzZSB7CgkJaGFsZiA9IHdpZHRoIC8gMjsKCQlsZWZ0ID0geCAtIGhhbGY7CgkJcmlnaHQgPSB4ICsgaGFsZjsKCQl0b3AgPSBNYXRoLm1pbih5LCBiYXNlKTsgLy8gdXNlIG1pbiBiZWNhdXNlIDAgcGl4ZWwgYXQgdG9wIG9mIHNjcmVlbgoJCWJvdHRvbSA9IE1hdGgubWF4KHksIGJhc2UpOwoJfQoKCXJldHVybiB7bGVmdCwgdG9wLCByaWdodCwgYm90dG9tfTsKfQoKZnVuY3Rpb24gaW5SYW5nZShiYXIsIHgsIHksIHVzZUZpbmFsUG9zaXRpb24pIHsKCWNvbnN0IHNraXBYID0geCA9PT0gbnVsbDsKCWNvbnN0IHNraXBZID0geSA9PT0gbnVsbDsKCWNvbnN0IGJvdW5kcyA9ICFiYXIgfHwgKHNraXBYICYmIHNraXBZKSA/IGZhbHNlIDogZ2V0QmFyQm91bmRzKGJhciwgdXNlRmluYWxQb3NpdGlvbik7CgoJcmV0dXJuIGJvdW5kcwoJCSYmIChza2lwWCB8fCB4ID49IGJvdW5kcy5sZWZ0ICYmIHggPD0gYm91bmRzLnJpZ2h0KQoJCSYmIChza2lwWSB8fCB5ID49IGJvdW5kcy50b3AgJiYgeSA8PSBib3VuZHMuYm90dG9tKTsKfQoKY2xhc3MgRmluYW5jaWFsRWxlbWVudCBleHRlbmRzIGNoYXJ0X2pzLkVsZW1lbnQgewoKCWhlaWdodCgpIHsKCQlyZXR1cm4gdGhpcy5iYXNlIC0gdGhpcy55OwoJfQoKCWluUmFuZ2UobW91c2VYLCBtb3VzZVksIHVzZUZpbmFsUG9zaXRpb24pIHsKCQlyZXR1cm4gaW5SYW5nZSh0aGlzLCBtb3VzZVgsIG1vdXNlWSwgdXNlRmluYWxQb3NpdGlvbik7Cgl9CgoJaW5YUmFuZ2UobW91c2VYLCB1c2VGaW5hbFBvc2l0aW9uKSB7CgkJcmV0dXJuIGluUmFuZ2UodGhpcywgbW91c2VYLCBudWxsLCB1c2VGaW5hbFBvc2l0aW9uKTsKCX0KCglpbllSYW5nZShtb3VzZVksIHVzZUZpbmFsUG9zaXRpb24pIHsKCQlyZXR1cm4gaW5SYW5nZSh0aGlzLCBudWxsLCBtb3VzZVksIHVzZUZpbmFsUG9zaXRpb24pOwoJfQoKCWdldFJhbmdlKGF4aXMpIHsKCQlyZXR1cm4gYXhpcyA9PT0gJ3gnID8gdGhpcy53aWR0aCAvIDIgOiB0aGlzLmhlaWdodCAvIDI7Cgl9CgoJZ2V0Q2VudGVyUG9pbnQodXNlRmluYWxQb3NpdGlvbikgewoJCWNvbnN0IHt4LCBsb3csIGhpZ2h9ID0gdGhpcy5nZXRQcm9wcyhbJ3gnLCAnbG93JywgJ2hpZ2gnXSwgdXNlRmluYWxQb3NpdGlvbik7CgkJcmV0dXJuIHsKCQkJeCwKCQkJeTogKGhpZ2ggKyBsb3cpIC8gMgoJCX07Cgl9CgoJdG9vbHRpcFBvc2l0aW9uKHVzZUZpbmFsUG9zaXRpb24pIHsKCQljb25zdCB7eCwgb3BlbiwgY2xvc2V9ID0gdGhpcy5nZXRQcm9wcyhbJ3gnLCAnb3BlbicsICdjbG9zZSddLCB1c2VGaW5hbFBvc2l0aW9uKTsKCQlyZXR1cm4gewoJCQl4LAoJCQl5OiAob3BlbiArIGNsb3NlKSAvIDIKCQl9OwoJfQp9Cgpjb25zdCBnbG9iYWxPcHRzJDEgPSBjaGFydF9qcy5DaGFydC5kZWZhdWx0czsKCmNsYXNzIENhbmRsZXN0aWNrRWxlbWVudCBleHRlbmRzIEZpbmFuY2lhbEVsZW1lbnQgewoJZHJhdyhjdHgpIHsKCQljb25zdCBtZSA9IHRoaXM7CgoJCWNvbnN0IHt4LCBvcGVuLCBoaWdoLCBsb3csIGNsb3NlfSA9IG1lOwoKCQlsZXQgYm9yZGVyQ29sb3JzID0gbWUuYm9yZGVyQ29sb3I7CgkJaWYgKHR5cGVvZiBib3JkZXJDb2xvcnMgPT09ICdzdHJpbmcnKSB7CgkJCWJvcmRlckNvbG9ycyA9IHsKCQkJCXVwOiBib3JkZXJDb2xvcnMsCgkJCQlkb3duOiBib3JkZXJDb2xvcnMsCgkJCQl1bmNoYW5nZWQ6IGJvcmRlckNvbG9ycwoJCQl9OwoJCX0KCgkJbGV0IGJvcmRlckNvbG9yOwoJCWlmIChjbG9zZSA8IG9wZW4pIHsKCQkJYm9yZGVyQ29sb3IgPSBoZWxwZXJzLnZhbHVlT3JEZWZhdWx0KGJvcmRlckNvbG9ycyA/IGJvcmRlckNvbG9ycy51cCA6IHVuZGVmaW5lZCwgZ2xvYmFsT3B0cyQxLmVsZW1lbnRzLmNhbmRsZXN0aWNrLmJvcmRlckNvbG9yKTsKCQkJY3R4LmZpbGxTdHlsZSA9IGhlbHBlcnMudmFsdWVPckRlZmF1bHQobWUuY29sb3IgPyBtZS5jb2xvci51cCA6IHVuZGVmaW5lZCwgZ2xvYmFsT3B0cyQxLmVsZW1lbnRzLmNhbmRsZXN0aWNrLmNvbG9yLnVwKTsKCQl9IGVsc2UgaWYgKGNsb3NlID4gb3BlbikgewoJCQlib3JkZXJDb2xvciA9IGhlbHBlcnMudmFsdWVPckRlZmF1bHQoYm9yZGVyQ29sb3JzID8gYm9yZGVyQ29sb3JzLmRvd24gOiB1bmRlZmluZWQsIGdsb2JhbE9wdHMkMS5lbGVtZW50cy5jYW5kbGVzdGljay5ib3JkZXJDb2xvcik7CgkJCWN0eC5maWxsU3R5bGUgPSBoZWxwZXJzLnZhbHVlT3JEZWZhdWx0KG1lLmNvbG9yID8gbWUuY29sb3IuZG93biA6IHVuZGVmaW5lZCwgZ2xvYmFsT3B0cyQxLmVsZW1lbnRzLmNhbmRsZXN0aWNrLmNvbG9yLmRvd24pOwoJCX0gZWxzZSB7CgkJCWJvcmRlckNvbG9yID0gaGVscGVycy52YWx1ZU9yRGVmYXVsdChib3JkZXJDb2xvcnMgPyBib3JkZXJDb2xvcnMudW5jaGFuZ2VkIDogdW5kZWZpbmVkLCBnbG9iYWxPcHRzJDEuZWxlbWVudHMuY2FuZGxlc3RpY2suYm9yZGVyQ29sb3IpOwoJCQljdHguZmlsbFN0eWxlID0gaGVscGVycy52YWx1ZU9yRGVmYXVsdChtZS5jb2xvciA/IG1lLmNvbG9yLnVuY2hhbmdlZCA6IHVuZGVmaW5lZCwgZ2xvYmFsT3B0cyQxLmVsZW1lbnRzLmNhbmRsZXN0aWNrLmNvbG9yLnVuY2hhbmdlZCk7CgkJfQoKCQljdHgubGluZVdpZHRoID0gaGVscGVycy52YWx1ZU9yRGVmYXVsdChtZS5ib3JkZXJXaWR0aCwgZ2xvYmFsT3B0cyQxLmVsZW1lbnRzLmNhbmRsZXN0aWNrLmJvcmRlcldpZHRoKTsKCQljdHguc3Ryb2tlU3R5bGUgPSBoZWxwZXJzLnZhbHVlT3JEZWZhdWx0KGJvcmRlckNvbG9yLCBnbG9iYWxPcHRzJDEuZWxlbWVudHMuY2FuZGxlc3RpY2suYm9yZGVyQ29sb3IpOwoKCQljdHguYmVnaW5QYXRoKCk7CgkJY3R4Lm1vdmVUbyh4LCBoaWdoKTsKCQljdHgubGluZVRvKHgsIE1hdGgubWluKG9wZW4sIGNsb3NlKSk7CgkJY3R4Lm1vdmVUbyh4LCBsb3cpOwoJCWN0eC5saW5lVG8oeCwgTWF0aC5tYXgob3BlbiwgY2xvc2UpKTsKCQljdHguc3Ryb2tlKCk7CgkJY3R4LmZpbGxSZWN0KHggLSBtZS53aWR0aCAvIDIsIGNsb3NlLCBtZS53aWR0aCwgb3BlbiAtIGNsb3NlKTsKCQljdHguc3Ryb2tlUmVjdCh4IC0gbWUud2lkdGggLyAyLCBjbG9zZSwgbWUud2lkdGgsIG9wZW4gLSBjbG9zZSk7CgkJY3R4LmNsb3NlUGF0aCgpOwoJfQp9CgpDYW5kbGVzdGlja0VsZW1lbnQuaWQgPSAnY2FuZGxlc3RpY2snOwpDYW5kbGVzdGlja0VsZW1lbnQuZGVmYXVsdHMgPSBoZWxwZXJzLm1lcmdlKHt9LCBbZ2xvYmFsT3B0cyQxLmVsZW1lbnRzLmZpbmFuY2lhbCwgewoJYm9yZGVyQ29sb3I6IGdsb2JhbE9wdHMkMS5lbGVtZW50cy5maW5hbmNpYWwuY29sb3IudW5jaGFuZ2VkLAoJYm9yZGVyV2lkdGg6IDEsCn1dKTsKCmNsYXNzIENhbmRsZXN0aWNrQ29udHJvbGxlciBleHRlbmRzIEZpbmFuY2lhbENvbnRyb2xsZXIgewoKCXVwZGF0ZUVsZW1lbnRzKGVsZW1lbnRzLCBzdGFydCwgY291bnQsIG1vZGUpIHsKCQljb25zdCBtZSA9IHRoaXM7CgkJY29uc3QgZGF0YXNldCA9IG1lLmdldERhdGFzZXQoKTsKCQljb25zdCBydWxlciA9IG1lLl9ydWxlciB8fCBtZS5fZ2V0UnVsZXIoKTsKCQljb25zdCBmaXJzdE9wdHMgPSBtZS5yZXNvbHZlRGF0YUVsZW1lbnRPcHRpb25zKHN0YXJ0LCBtb2RlKTsKCQljb25zdCBzaGFyZWRPcHRpb25zID0gbWUuZ2V0U2hhcmVkT3B0aW9ucyhmaXJzdE9wdHMpOwoJCWNvbnN0IGluY2x1ZGVPcHRpb25zID0gbWUuaW5jbHVkZU9wdGlvbnMobW9kZSwgc2hhcmVkT3B0aW9ucyk7CgoJCW1lLnVwZGF0ZVNoYXJlZE9wdGlvbnMoc2hhcmVkT3B0aW9ucywgbW9kZSwgZmlyc3RPcHRzKTsKCgkJZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDwgY291bnQ7IGkrKykgewoJCQljb25zdCBvcHRpb25zID0gc2hhcmVkT3B0aW9ucyB8fCBtZS5yZXNvbHZlRGF0YUVsZW1lbnRPcHRpb25zKGksIG1vZGUpOwoKCQkJY29uc3QgYmFzZVByb3BlcnRpZXMgPSBtZS5jYWxjdWxhdGVFbGVtZW50UHJvcGVydGllcyhpLCBydWxlciwgbW9kZSA9PT0gJ3Jlc2V0Jywgb3B0aW9ucyk7CgkJCWNvbnN0IHByb3BlcnRpZXMgPSB7CgkJCQkuLi5iYXNlUHJvcGVydGllcywKCQkJCWRhdGFzZXRMYWJlbDogZGF0YXNldC5sYWJlbCB8fCAnJywKCQkJCS8vIGxhYmVsOiAnJywgLy8gdG8gZ2V0IGxhYmVsIHZhbHVlIHBsZWFzZSB1c2UgZGF0YXNldC5kYXRhW2luZGV4XS5sYWJlbAoKCQkJCS8vIEFwcGVhcmFuY2UKCQkJCWNvbG9yOiBkYXRhc2V0LmNvbG9yLAoJCQkJYm9yZGVyQ29sb3I6IGRhdGFzZXQuYm9yZGVyQ29sb3IsCgkJCQlib3JkZXJXaWR0aDogZGF0YXNldC5ib3JkZXJXaWR0aCwKCQkJfTsKCgkJCWlmIChpbmNsdWRlT3B0aW9ucykgewoJCQkJcHJvcGVydGllcy5vcHRpb25zID0gb3B0aW9uczsKCQkJfQoJCQltZS51cGRhdGVFbGVtZW50KGVsZW1lbnRzW2ldLCBpLCBwcm9wZXJ0aWVzLCBtb2RlKTsKCQl9Cgl9Cgp9CgpDYW5kbGVzdGlja0NvbnRyb2xsZXIuaWQgPSAnY2FuZGxlc3RpY2snOwpDYW5kbGVzdGlja0NvbnRyb2xsZXIuZGVmYXVsdHMgPSBoZWxwZXJzLm1lcmdlKHsKCWRhdGFFbGVtZW50VHlwZTogQ2FuZGxlc3RpY2tFbGVtZW50LmlkCn0sIGNoYXJ0X2pzLkNoYXJ0LmRlZmF1bHRzLmZpbmFuY2lhbCk7Cgpjb25zdCBnbG9iYWxPcHRzID0gY2hhcnRfanMuQ2hhcnQuZGVmYXVsdHM7CgpjbGFzcyBPaGxjRWxlbWVudCBleHRlbmRzIEZpbmFuY2lhbEVsZW1lbnQgewoJZHJhdyhjdHgpIHsKCQljb25zdCBtZSA9IHRoaXM7CgoJCWNvbnN0IHt4LCBvcGVuLCBoaWdoLCBsb3csIGNsb3NlfSA9IG1lOwoKCQljb25zdCBhcm1MZW5ndGhSYXRpbyA9IGhlbHBlcnMudmFsdWVPckRlZmF1bHQobWUuYXJtTGVuZ3RoUmF0aW8sIGdsb2JhbE9wdHMuZWxlbWVudHMub2hsYy5hcm1MZW5ndGhSYXRpbyk7CgkJbGV0IGFybUxlbmd0aCA9IGhlbHBlcnMudmFsdWVPckRlZmF1bHQobWUuYXJtTGVuZ3RoLCBnbG9iYWxPcHRzLmVsZW1lbnRzLm9obGMuYXJtTGVuZ3RoKTsKCQlpZiAoYXJtTGVuZ3RoID09PSBudWxsKSB7CgkJCS8vIFRoZSB3aWR0aCBvZiBhbiBvaGxjIGlzIGFmZmVjdGVkIGJ5IGJhclBlcmNlbnRhZ2UgYW5kIGNhdGVnb3J5UGVyY2VudGFnZQoJCQkvLyBUaGlzIGJlaGF2aW9yIGlzIGNhdXNlZCBieSBleHRlbmRpbmcgY29udHJvbGxlci5maW5hbmNpYWwsIHdoaWNoIGV4dGVuZHMgY29udHJvbGxlci5iYXIKCQkJLy8gYmFyUGVyY2VudGFnZSBhbmQgY2F0ZWdvcnlQZXJjZW50YWdlIGFyZSBub3cgc2V0IHRvIDEuMCAoc2VlIGNvbnRyb2xsZXIub2hsYykKCQkJLy8gYW5kIGFybUxlbmd0aFJhdGlvIGlzIG11bHRpcGxlZCBieSAwLjUsCgkJCS8vIHNvIHRoYXQgd2hlbiBhcm1MZW5ndGhSYXRpbz0xLjAsIHRoZSBhcm1zIGZyb20gbmVpZ2hib3VyIG9oY2wgdG91Y2gsCgkJCS8vIGFuZCB3aGVuIGFybUxlbmd0aFJhdGlvPTAuMCwgb2hjbCBhcmUganVzdCB2ZXJ0aWNhbCBsaW5lcy4KCQkJYXJtTGVuZ3RoID0gbWUud2lkdGggKiBhcm1MZW5ndGhSYXRpbyAqIDAuNTsKCQl9CgoJCWlmIChjbG9zZSA8IG9wZW4pIHsKCQkJY3R4LnN0cm9rZVN0eWxlID0gaGVscGVycy52YWx1ZU9yRGVmYXVsdChtZS5jb2xvciA/IG1lLmNvbG9yLnVwIDogdW5kZWZpbmVkLCBnbG9iYWxPcHRzLmVsZW1lbnRzLm9obGMuY29sb3IudXApOwoJCX0gZWxzZSBpZiAoY2xvc2UgPiBvcGVuKSB7CgkJCWN0eC5zdHJva2VTdHlsZSA9IGhlbHBlcnMudmFsdWVPckRlZmF1bHQobWUuY29sb3IgPyBtZS5jb2xvci5kb3duIDogdW5kZWZpbmVkLCBnbG9iYWxPcHRzLmVsZW1lbnRzLm9obGMuY29sb3IuZG93bik7CgkJfSBlbHNlIHsKCQkJY3R4LnN0cm9rZVN0eWxlID0gaGVscGVycy52YWx1ZU9yRGVmYXVsdChtZS5jb2xvciA/IG1lLmNvbG9yLnVuY2hhbmdlZCA6IHVuZGVmaW5lZCwgZ2xvYmFsT3B0cy5lbGVtZW50cy5vaGxjLmNvbG9yLnVuY2hhbmdlZCk7CgkJfQoJCWN0eC5saW5lV2lkdGggPSBoZWxwZXJzLnZhbHVlT3JEZWZhdWx0KG1lLmxpbmVXaWR0aCwgZ2xvYmFsT3B0cy5lbGVtZW50cy5vaGxjLmxpbmVXaWR0aCk7CgoJCWN0eC5iZWdpblBhdGgoKTsKCQljdHgubW92ZVRvKHgsIGhpZ2gpOwoJCWN0eC5saW5lVG8oeCwgbG93KTsKCQljdHgubW92ZVRvKHggLSBhcm1MZW5ndGgsIG9wZW4pOwoJCWN0eC5saW5lVG8oeCwgb3Blbik7CgkJY3R4Lm1vdmVUbyh4ICsgYXJtTGVuZ3RoLCBjbG9zZSk7CgkJY3R4LmxpbmVUbyh4LCBjbG9zZSk7CgkJY3R4LnN0cm9rZSgpOwoJfQp9CgpPaGxjRWxlbWVudC5pZCA9ICdvaGxjJzsKT2hsY0VsZW1lbnQuZGVmYXVsdHMgPSBoZWxwZXJzLm1lcmdlKHt9LCBbZ2xvYmFsT3B0cy5lbGVtZW50cy5maW5hbmNpYWwsIHsKCWxpbmVXaWR0aDogMiwKCWFybUxlbmd0aDogbnVsbCwKCWFybUxlbmd0aFJhdGlvOiAwLjgsCn1dKTsKCmNsYXNzIE9obGNDb250cm9sbGVyIGV4dGVuZHMgRmluYW5jaWFsQ29udHJvbGxlciB7CgoJdXBkYXRlRWxlbWVudHMoZWxlbWVudHMsIHN0YXJ0LCBjb3VudCwgbW9kZSkgewoJCWNvbnN0IG1lID0gdGhpczsKCQljb25zdCBkYXRhc2V0ID0gbWUuZ2V0RGF0YXNldCgpOwoJCWNvbnN0IHJ1bGVyID0gbWUuX3J1bGVyIHx8IG1lLl9nZXRSdWxlcigpOwoJCWNvbnN0IGZpcnN0T3B0cyA9IG1lLnJlc29sdmVEYXRhRWxlbWVudE9wdGlvbnMoc3RhcnQsIG1vZGUpOwoJCWNvbnN0IHNoYXJlZE9wdGlvbnMgPSBtZS5nZXRTaGFyZWRPcHRpb25zKGZpcnN0T3B0cyk7CgkJY29uc3QgaW5jbHVkZU9wdGlvbnMgPSBtZS5pbmNsdWRlT3B0aW9ucyhtb2RlLCBzaGFyZWRPcHRpb25zKTsKCgkJZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CgkJCWNvbnN0IG9wdGlvbnMgPSBzaGFyZWRPcHRpb25zIHx8IG1lLnJlc29sdmVEYXRhRWxlbWVudE9wdGlvbnMoaSwgbW9kZSk7CgoJCQljb25zdCBiYXNlUHJvcGVydGllcyA9IG1lLmNhbGN1bGF0ZUVsZW1lbnRQcm9wZXJ0aWVzKGksIHJ1bGVyLCBtb2RlID09PSAncmVzZXQnLCBvcHRpb25zKTsKCQkJY29uc3QgcHJvcGVydGllcyA9IHsKCQkJCS4uLmJhc2VQcm9wZXJ0aWVzLAoJCQkJZGF0YXNldExhYmVsOiBkYXRhc2V0LmxhYmVsIHx8ICcnLAoJCQkJbGluZVdpZHRoOiBkYXRhc2V0LmxpbmVXaWR0aCwKCQkJCWFybUxlbmd0aDogZGF0YXNldC5hcm1MZW5ndGgsCgkJCQlhcm1MZW5ndGhSYXRpbzogZGF0YXNldC5hcm1MZW5ndGhSYXRpbywKCQkJCWNvbG9yOiBkYXRhc2V0LmNvbG9yLAoJCQl9OwoKCQkJaWYgKGluY2x1ZGVPcHRpb25zKSB7CgkJCQlwcm9wZXJ0aWVzLm9wdGlvbnMgPSBvcHRpb25zOwoJCQl9CgkJCW1lLnVwZGF0ZUVsZW1lbnQoZWxlbWVudHNbaV0sIGksIHByb3BlcnRpZXMsIG1vZGUpOwoJCX0KCX0KCn0KCk9obGNDb250cm9sbGVyLmlkID0gJ29obGMnOwpPaGxjQ29udHJvbGxlci5kZWZhdWx0cyA9IGhlbHBlcnMubWVyZ2UoewoJZGF0YUVsZW1lbnRUeXBlOiBPaGxjRWxlbWVudC5pZCwKCWRhdGFzZXRzOiB7CgkJYmFyUGVyY2VudGFnZTogMS4wLAoJCWNhdGVnb3J5UGVyY2VudGFnZTogMS4wCgl9Cn0sIGNoYXJ0X2pzLkNoYXJ0LmRlZmF1bHRzLmZpbmFuY2lhbCk7CgpjaGFydF9qcy5DaGFydC5yZWdpc3RlcihDYW5kbGVzdGlja0NvbnRyb2xsZXIsIE9obGNDb250cm9sbGVyLCBDYW5kbGVzdGlja0VsZW1lbnQsIE9obGNFbGVtZW50KTsKCn0pKSk7Cg==",
        "summary": "522L | chartjs-chart-financial.js | .js | 14.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\hammer.min.js",
        "type": ".js",
        "size_kb": 20.3,
        "lines": 7,
        "content": "LyohIEhhbW1lci5KUyAtIHYyLjAuOCAtIDIwMTYtMDQtMjMKICogaHR0cDovL2hhbW1lcmpzLmdpdGh1Yi5pby8KICoKICogQ29weXJpZ2h0IChjKSAyMDE2IEpvcmlrIFRhbmdlbGRlcjsKICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlICovCiFmdW5jdGlvbihhLGIsYyxkKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZShhLGIsYyl7cmV0dXJuIHNldFRpbWVvdXQoaihhLGMpLGIpfWZ1bmN0aW9uIGYoYSxiLGMpe3JldHVybiBBcnJheS5pc0FycmF5KGEpPyhnKGEsY1tiXSxjKSwhMCk6ITF9ZnVuY3Rpb24gZyhhLGIsYyl7dmFyIGU7aWYoYSlpZihhLmZvckVhY2gpYS5mb3JFYWNoKGIsYyk7ZWxzZSBpZihhLmxlbmd0aCE9PWQpZm9yKGU9MDtlPGEubGVuZ3RoOyliLmNhbGwoYyxhW2VdLGUsYSksZSsrO2Vsc2UgZm9yKGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiZiLmNhbGwoYyxhW2VdLGUsYSl9ZnVuY3Rpb24gaChiLGMsZCl7dmFyIGU9IkRFUFJFQ0FURUQgTUVUSE9EOiAiK2MrIlxuIitkKyIgQVQgXG4iO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPW5ldyBFcnJvcigiZ2V0LXN0YWNrLXRyYWNlIiksZD1jJiZjLnN0YWNrP2Muc3RhY2sucmVwbGFjZSgvXlteXChdKz9bXG4kXS9nbSwiIikucmVwbGFjZSgvXlxzK2F0XHMrL2dtLCIiKS5yZXBsYWNlKC9eT2JqZWN0Ljxhbm9ueW1vdXM+XHMqXCgvZ20sInthbm9ueW1vdXN9KClAIik6IlVua25vd24gU3RhY2sgVHJhY2UiLGY9YS5jb25zb2xlJiYoYS5jb25zb2xlLndhcm58fGEuY29uc29sZS5sb2cpO3JldHVybiBmJiZmLmNhbGwoYS5jb25zb2xlLGUsZCksYi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIGkoYSxiLGMpe3ZhciBkLGU9Yi5wcm90b3R5cGU7ZD1hLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUpLGQuY29uc3RydWN0b3I9YSxkLl9zdXBlcj1lLGMmJmxhKGQsYyl9ZnVuY3Rpb24gaihhLGIpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGIsYXJndW1lbnRzKX19ZnVuY3Rpb24gayhhLGIpe3JldHVybiB0eXBlb2YgYT09b2E/YS5hcHBseShiP2JbMF18fGQ6ZCxiKTphfWZ1bmN0aW9uIGwoYSxiKXtyZXR1cm4gYT09PWQ/YjphfWZ1bmN0aW9uIG0oYSxiLGMpe2cocShiKSxmdW5jdGlvbihiKXthLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX0pfWZ1bmN0aW9uIG4oYSxiLGMpe2cocShiKSxmdW5jdGlvbihiKXthLnJlbW92ZUV2ZW50TGlzdGVuZXIoYixjLCExKX0pfWZ1bmN0aW9uIG8oYSxiKXtmb3IoO2E7KXtpZihhPT1iKXJldHVybiEwO2E9YS5wYXJlbnROb2RlfXJldHVybiExfWZ1bmN0aW9uIHAoYSxiKXtyZXR1cm4gYS5pbmRleE9mKGIpPi0xfWZ1bmN0aW9uIHEoYSl7cmV0dXJuIGEudHJpbSgpLnNwbGl0KC9ccysvZyl9ZnVuY3Rpb24gcihhLGIsYyl7aWYoYS5pbmRleE9mJiYhYylyZXR1cm4gYS5pbmRleE9mKGIpO2Zvcih2YXIgZD0wO2Q8YS5sZW5ndGg7KXtpZihjJiZhW2RdW2NdPT1ifHwhYyYmYVtkXT09PWIpcmV0dXJuIGQ7ZCsrfXJldHVybi0xfWZ1bmN0aW9uIHMoYSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEsMCl9ZnVuY3Rpb24gdChhLGIsYyl7Zm9yKHZhciBkPVtdLGU9W10sZj0wO2Y8YS5sZW5ndGg7KXt2YXIgZz1iP2FbZl1bYl06YVtmXTtyKGUsZyk8MCYmZC5wdXNoKGFbZl0pLGVbZl09ZyxmKyt9cmV0dXJuIGMmJihkPWI/ZC5zb3J0KGZ1bmN0aW9uKGEsYyl7cmV0dXJuIGFbYl0+Y1tiXX0pOmQuc29ydCgpKSxkfWZ1bmN0aW9uIHUoYSxiKXtmb3IodmFyIGMsZSxmPWJbMF0udG9VcHBlckNhc2UoKStiLnNsaWNlKDEpLGc9MDtnPG1hLmxlbmd0aDspe2lmKGM9bWFbZ10sZT1jP2MrZjpiLGUgaW4gYSlyZXR1cm4gZTtnKyt9cmV0dXJuIGR9ZnVuY3Rpb24gdigpe3JldHVybiB1YSsrfWZ1bmN0aW9uIHcoYil7dmFyIGM9Yi5vd25lckRvY3VtZW50fHxiO3JldHVybiBjLmRlZmF1bHRWaWV3fHxjLnBhcmVudFdpbmRvd3x8YX1mdW5jdGlvbiB4KGEsYil7dmFyIGM9dGhpczt0aGlzLm1hbmFnZXI9YSx0aGlzLmNhbGxiYWNrPWIsdGhpcy5lbGVtZW50PWEuZWxlbWVudCx0aGlzLnRhcmdldD1hLm9wdGlvbnMuaW5wdXRUYXJnZXQsdGhpcy5kb21IYW5kbGVyPWZ1bmN0aW9uKGIpe2soYS5vcHRpb25zLmVuYWJsZSxbYV0pJiZjLmhhbmRsZXIoYil9LHRoaXMuaW5pdCgpfWZ1bmN0aW9uIHkoYSl7dmFyIGIsYz1hLm9wdGlvbnMuaW5wdXRDbGFzcztyZXR1cm4gbmV3KGI9Yz9jOnhhP006eWE/UDp3YT9SOkwpKGEseil9ZnVuY3Rpb24geihhLGIsYyl7dmFyIGQ9Yy5wb2ludGVycy5sZW5ndGgsZT1jLmNoYW5nZWRQb2ludGVycy5sZW5ndGgsZj1iJkVhJiZkLWU9PT0wLGc9YiYoR2F8SGEpJiZkLWU9PT0wO2MuaXNGaXJzdD0hIWYsYy5pc0ZpbmFsPSEhZyxmJiYoYS5zZXNzaW9uPXt9KSxjLmV2ZW50VHlwZT1iLEEoYSxjKSxhLmVtaXQoImhhbW1lci5pbnB1dCIsYyksYS5yZWNvZ25pemUoYyksYS5zZXNzaW9uLnByZXZJbnB1dD1jfWZ1bmN0aW9uIEEoYSxiKXt2YXIgYz1hLnNlc3Npb24sZD1iLnBvaW50ZXJzLGU9ZC5sZW5ndGg7Yy5maXJzdElucHV0fHwoYy5maXJzdElucHV0PUQoYikpLGU+MSYmIWMuZmlyc3RNdWx0aXBsZT9jLmZpcnN0TXVsdGlwbGU9RChiKToxPT09ZSYmKGMuZmlyc3RNdWx0aXBsZT0hMSk7dmFyIGY9Yy5maXJzdElucHV0LGc9Yy5maXJzdE11bHRpcGxlLGg9Zz9nLmNlbnRlcjpmLmNlbnRlcixpPWIuY2VudGVyPUUoZCk7Yi50aW1lU3RhbXA9cmEoKSxiLmRlbHRhVGltZT1iLnRpbWVTdGFtcC1mLnRpbWVTdGFtcCxiLmFuZ2xlPUkoaCxpKSxiLmRpc3RhbmNlPUgoaCxpKSxCKGMsYiksYi5vZmZzZXREaXJlY3Rpb249RyhiLmRlbHRhWCxiLmRlbHRhWSk7dmFyIGo9RihiLmRlbHRhVGltZSxiLmRlbHRhWCxiLmRlbHRhWSk7Yi5vdmVyYWxsVmVsb2NpdHlYPWoueCxiLm92ZXJhbGxWZWxvY2l0eVk9ai55LGIub3ZlcmFsbFZlbG9jaXR5PXFhKGoueCk+cWEoai55KT9qLng6ai55LGIuc2NhbGU9Zz9LKGcucG9pbnRlcnMsZCk6MSxiLnJvdGF0aW9uPWc/SihnLnBvaW50ZXJzLGQpOjAsYi5tYXhQb2ludGVycz1jLnByZXZJbnB1dD9iLnBvaW50ZXJzLmxlbmd0aD5jLnByZXZJbnB1dC5tYXhQb2ludGVycz9iLnBvaW50ZXJzLmxlbmd0aDpjLnByZXZJbnB1dC5tYXhQb2ludGVyczpiLnBvaW50ZXJzLmxlbmd0aCxDKGMsYik7dmFyIGs9YS5lbGVtZW50O28oYi5zcmNFdmVudC50YXJnZXQsaykmJihrPWIuc3JjRXZlbnQudGFyZ2V0KSxiLnRhcmdldD1rfWZ1bmN0aW9uIEIoYSxiKXt2YXIgYz1iLmNlbnRlcixkPWEub2Zmc2V0RGVsdGF8fHt9LGU9YS5wcmV2RGVsdGF8fHt9LGY9YS5wcmV2SW5wdXR8fHt9O2IuZXZlbnRUeXBlIT09RWEmJmYuZXZlbnRUeXBlIT09R2F8fChlPWEucHJldkRlbHRhPXt4OmYuZGVsdGFYfHwwLHk6Zi5kZWx0YVl8fDB9LGQ9YS5vZmZzZXREZWx0YT17eDpjLngseTpjLnl9KSxiLmRlbHRhWD1lLngrKGMueC1kLngpLGIuZGVsdGFZPWUueSsoYy55LWQueSl9ZnVuY3Rpb24gQyhhLGIpe3ZhciBjLGUsZixnLGg9YS5sYXN0SW50ZXJ2YWx8fGIsaT1iLnRpbWVTdGFtcC1oLnRpbWVTdGFtcDtpZihiLmV2ZW50VHlwZSE9SGEmJihpPkRhfHxoLnZlbG9jaXR5PT09ZCkpe3ZhciBqPWIuZGVsdGFYLWguZGVsdGFYLGs9Yi5kZWx0YVktaC5kZWx0YVksbD1GKGksaixrKTtlPWwueCxmPWwueSxjPXFhKGwueCk+cWEobC55KT9sLng6bC55LGc9RyhqLGspLGEubGFzdEludGVydmFsPWJ9ZWxzZSBjPWgudmVsb2NpdHksZT1oLnZlbG9jaXR5WCxmPWgudmVsb2NpdHlZLGc9aC5kaXJlY3Rpb247Yi52ZWxvY2l0eT1jLGIudmVsb2NpdHlYPWUsYi52ZWxvY2l0eVk9ZixiLmRpcmVjdGlvbj1nfWZ1bmN0aW9uIEQoYSl7Zm9yKHZhciBiPVtdLGM9MDtjPGEucG9pbnRlcnMubGVuZ3RoOyliW2NdPXtjbGllbnRYOnBhKGEucG9pbnRlcnNbY10uY2xpZW50WCksY2xpZW50WTpwYShhLnBvaW50ZXJzW2NdLmNsaWVudFkpfSxjKys7cmV0dXJue3RpbWVTdGFtcDpyYSgpLHBvaW50ZXJzOmIsY2VudGVyOkUoYiksZGVsdGFYOmEuZGVsdGFYLGRlbHRhWTphLmRlbHRhWX19ZnVuY3Rpb24gRShhKXt2YXIgYj1hLmxlbmd0aDtpZigxPT09YilyZXR1cm57eDpwYShhWzBdLmNsaWVudFgpLHk6cGEoYVswXS5jbGllbnRZKX07Zm9yKHZhciBjPTAsZD0wLGU9MDtiPmU7KWMrPWFbZV0uY2xpZW50WCxkKz1hW2VdLmNsaWVudFksZSsrO3JldHVybnt4OnBhKGMvYikseTpwYShkL2IpfX1mdW5jdGlvbiBGKGEsYixjKXtyZXR1cm57eDpiL2F8fDAseTpjL2F8fDB9fWZ1bmN0aW9uIEcoYSxiKXtyZXR1cm4gYT09PWI/SWE6cWEoYSk+PXFhKGIpPzA+YT9KYTpLYTowPmI/TGE6TWF9ZnVuY3Rpb24gSChhLGIsYyl7Y3x8KGM9UWEpO3ZhciBkPWJbY1swXV0tYVtjWzBdXSxlPWJbY1sxXV0tYVtjWzFdXTtyZXR1cm4gTWF0aC5zcXJ0KGQqZCtlKmUpfWZ1bmN0aW9uIEkoYSxiLGMpe2N8fChjPVFhKTt2YXIgZD1iW2NbMF1dLWFbY1swXV0sZT1iW2NbMV1dLWFbY1sxXV07cmV0dXJuIDE4MCpNYXRoLmF0YW4yKGUsZCkvTWF0aC5QSX1mdW5jdGlvbiBKKGEsYil7cmV0dXJuIEkoYlsxXSxiWzBdLFJhKStJKGFbMV0sYVswXSxSYSl9ZnVuY3Rpb24gSyhhLGIpe3JldHVybiBIKGJbMF0sYlsxXSxSYSkvSChhWzBdLGFbMV0sUmEpfWZ1bmN0aW9uIEwoKXt0aGlzLmV2RWw9VGEsdGhpcy5ldldpbj1VYSx0aGlzLnByZXNzZWQ9ITEseC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gTSgpe3RoaXMuZXZFbD1YYSx0aGlzLmV2V2luPVlhLHguYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuc3RvcmU9dGhpcy5tYW5hZ2VyLnNlc3Npb24ucG9pbnRlckV2ZW50cz1bXX1mdW5jdGlvbiBOKCl7dGhpcy5ldlRhcmdldD0kYSx0aGlzLmV2V2luPV9hLHRoaXMuc3RhcnRlZD0hMSx4LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBPKGEsYil7dmFyIGM9cyhhLnRvdWNoZXMpLGQ9cyhhLmNoYW5nZWRUb3VjaGVzKTtyZXR1cm4gYiYoR2F8SGEpJiYoYz10KGMuY29uY2F0KGQpLCJpZGVudGlmaWVyIiwhMCkpLFtjLGRdfWZ1bmN0aW9uIFAoKXt0aGlzLmV2VGFyZ2V0PWJiLHRoaXMudGFyZ2V0SWRzPXt9LHguYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIFEoYSxiKXt2YXIgYz1zKGEudG91Y2hlcyksZD10aGlzLnRhcmdldElkcztpZihiJihFYXxGYSkmJjE9PT1jLmxlbmd0aClyZXR1cm4gZFtjWzBdLmlkZW50aWZpZXJdPSEwLFtjLGNdO3ZhciBlLGYsZz1zKGEuY2hhbmdlZFRvdWNoZXMpLGg9W10saT10aGlzLnRhcmdldDtpZihmPWMuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBvKGEudGFyZ2V0LGkpfSksYj09PUVhKWZvcihlPTA7ZTxmLmxlbmd0aDspZFtmW2VdLmlkZW50aWZpZXJdPSEwLGUrKztmb3IoZT0wO2U8Zy5sZW5ndGg7KWRbZ1tlXS5pZGVudGlmaWVyXSYmaC5wdXNoKGdbZV0pLGImKEdhfEhhKSYmZGVsZXRlIGRbZ1tlXS5pZGVudGlmaWVyXSxlKys7cmV0dXJuIGgubGVuZ3RoP1t0KGYuY29uY2F0KGgpLCJpZGVudGlmaWVyIiwhMCksaF06dm9pZCAwfWZ1bmN0aW9uIFIoKXt4LmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgYT1qKHRoaXMuaGFuZGxlcix0aGlzKTt0aGlzLnRvdWNoPW5ldyBQKHRoaXMubWFuYWdlcixhKSx0aGlzLm1vdXNlPW5ldyBMKHRoaXMubWFuYWdlcixhKSx0aGlzLnByaW1hcnlUb3VjaD1udWxsLHRoaXMubGFzdFRvdWNoZXM9W119ZnVuY3Rpb24gUyhhLGIpe2EmRWE/KHRoaXMucHJpbWFyeVRvdWNoPWIuY2hhbmdlZFBvaW50ZXJzWzBdLmlkZW50aWZpZXIsVC5jYWxsKHRoaXMsYikpOmEmKEdhfEhhKSYmVC5jYWxsKHRoaXMsYil9ZnVuY3Rpb24gVChhKXt2YXIgYj1hLmNoYW5nZWRQb2ludGVyc1swXTtpZihiLmlkZW50aWZpZXI9PT10aGlzLnByaW1hcnlUb3VjaCl7dmFyIGM9e3g6Yi5jbGllbnRYLHk6Yi5jbGllbnRZfTt0aGlzLmxhc3RUb3VjaGVzLnB1c2goYyk7dmFyIGQ9dGhpcy5sYXN0VG91Y2hlcyxlPWZ1bmN0aW9uKCl7dmFyIGE9ZC5pbmRleE9mKGMpO2E+LTEmJmQuc3BsaWNlKGEsMSl9O3NldFRpbWVvdXQoZSxjYil9fWZ1bmN0aW9uIFUoYSl7Zm9yKHZhciBiPWEuc3JjRXZlbnQuY2xpZW50WCxjPWEuc3JjRXZlbnQuY2xpZW50WSxkPTA7ZDx0aGlzLmxhc3RUb3VjaGVzLmxlbmd0aDtkKyspe3ZhciBlPXRoaXMubGFzdFRvdWNoZXNbZF0sZj1NYXRoLmFicyhiLWUueCksZz1NYXRoLmFicyhjLWUueSk7aWYoZGI+PWYmJmRiPj1nKXJldHVybiEwfXJldHVybiExfWZ1bmN0aW9uIFYoYSxiKXt0aGlzLm1hbmFnZXI9YSx0aGlzLnNldChiKX1mdW5jdGlvbiBXKGEpe2lmKHAoYSxqYikpcmV0dXJuIGpiO3ZhciBiPXAoYSxrYiksYz1wKGEsbGIpO3JldHVybiBiJiZjP2piOmJ8fGM/Yj9rYjpsYjpwKGEsaWIpP2liOmhifWZ1bmN0aW9uIFgoKXtpZighZmIpcmV0dXJuITE7dmFyIGI9e30sYz1hLkNTUyYmYS5DU1Muc3VwcG9ydHM7cmV0dXJuWyJhdXRvIiwibWFuaXB1bGF0aW9uIiwicGFuLXkiLCJwYW4teCIsInBhbi14IHBhbi15Iiwibm9uZSJdLmZvckVhY2goZnVuY3Rpb24oZCl7YltkXT1jP2EuQ1NTLnN1cHBvcnRzKCJ0b3VjaC1hY3Rpb24iLGQpOiEwfSksYn1mdW5jdGlvbiBZKGEpe3RoaXMub3B0aW9ucz1sYSh7fSx0aGlzLmRlZmF1bHRzLGF8fHt9KSx0aGlzLmlkPXYoKSx0aGlzLm1hbmFnZXI9bnVsbCx0aGlzLm9wdGlvbnMuZW5hYmxlPWwodGhpcy5vcHRpb25zLmVuYWJsZSwhMCksdGhpcy5zdGF0ZT1uYix0aGlzLnNpbXVsdGFuZW91cz17fSx0aGlzLnJlcXVpcmVGYWlsPVtdfWZ1bmN0aW9uIFooYSl7cmV0dXJuIGEmc2I/ImNhbmNlbCI6YSZxYj8iZW5kIjphJnBiPyJtb3ZlIjphJm9iPyJzdGFydCI6IiJ9ZnVuY3Rpb24gJChhKXtyZXR1cm4gYT09TWE/ImRvd24iOmE9PUxhPyJ1cCI6YT09SmE/ImxlZnQiOmE9PUthPyJyaWdodCI6IiJ9ZnVuY3Rpb24gXyhhLGIpe3ZhciBjPWIubWFuYWdlcjtyZXR1cm4gYz9jLmdldChhKTphfWZ1bmN0aW9uIGFhKCl7WS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gYmEoKXthYS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5wWD1udWxsLHRoaXMucFk9bnVsbH1mdW5jdGlvbiBjYSgpe2FhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBkYSgpe1kuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX3RpbWVyPW51bGwsdGhpcy5faW5wdXQ9bnVsbH1mdW5jdGlvbiBlYSgpe2FhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBmYSgpe2FhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBnYSgpe1kuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMucFRpbWU9ITEsdGhpcy5wQ2VudGVyPSExLHRoaXMuX3RpbWVyPW51bGwsdGhpcy5faW5wdXQ9bnVsbCx0aGlzLmNvdW50PTB9ZnVuY3Rpb24gaGEoYSxiKXtyZXR1cm4gYj1ifHx7fSxiLnJlY29nbml6ZXJzPWwoYi5yZWNvZ25pemVycyxoYS5kZWZhdWx0cy5wcmVzZXQpLG5ldyBpYShhLGIpfWZ1bmN0aW9uIGlhKGEsYil7dGhpcy5vcHRpb25zPWxhKHt9LGhhLmRlZmF1bHRzLGJ8fHt9KSx0aGlzLm9wdGlvbnMuaW5wdXRUYXJnZXQ9dGhpcy5vcHRpb25zLmlucHV0VGFyZ2V0fHxhLHRoaXMuaGFuZGxlcnM9e30sdGhpcy5zZXNzaW9uPXt9LHRoaXMucmVjb2duaXplcnM9W10sdGhpcy5vbGRDc3NQcm9wcz17fSx0aGlzLmVsZW1lbnQ9YSx0aGlzLmlucHV0PXkodGhpcyksdGhpcy50b3VjaEFjdGlvbj1uZXcgVih0aGlzLHRoaXMub3B0aW9ucy50b3VjaEFjdGlvbiksamEodGhpcywhMCksZyh0aGlzLm9wdGlvbnMucmVjb2duaXplcnMsZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5hZGQobmV3IGFbMF0oYVsxXSkpO2FbMl0mJmIucmVjb2duaXplV2l0aChhWzJdKSxhWzNdJiZiLnJlcXVpcmVGYWlsdXJlKGFbM10pfSx0aGlzKX1mdW5jdGlvbiBqYShhLGIpe3ZhciBjPWEuZWxlbWVudDtpZihjLnN0eWxlKXt2YXIgZDtnKGEub3B0aW9ucy5jc3NQcm9wcyxmdW5jdGlvbihlLGYpe2Q9dShjLnN0eWxlLGYpLGI/KGEub2xkQ3NzUHJvcHNbZF09Yy5zdHlsZVtkXSxjLnN0eWxlW2RdPWUpOmMuc3R5bGVbZF09YS5vbGRDc3NQcm9wc1tkXXx8IiJ9KSxifHwoYS5vbGRDc3NQcm9wcz17fSl9fWZ1bmN0aW9uIGthKGEsYyl7dmFyIGQ9Yi5jcmVhdGVFdmVudCgiRXZlbnQiKTtkLmluaXRFdmVudChhLCEwLCEwKSxkLmdlc3R1cmU9YyxjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpfXZhciBsYSxtYT1bIiIsIndlYmtpdCIsIk1veiIsIk1TIiwibXMiLCJvIl0sbmE9Yi5jcmVhdGVFbGVtZW50KCJkaXYiKSxvYT0iZnVuY3Rpb24iLHBhPU1hdGgucm91bmQscWE9TWF0aC5hYnMscmE9RGF0ZS5ub3c7bGE9ImZ1bmN0aW9uIiE9dHlwZW9mIE9iamVjdC5hc3NpZ24/ZnVuY3Rpb24oYSl7aWYoYT09PWR8fG51bGw9PT1hKXRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjb252ZXJ0IHVuZGVmaW5lZCBvciBudWxsIHRvIG9iamVjdCIpO2Zvcih2YXIgYj1PYmplY3QoYSksYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspe3ZhciBlPWFyZ3VtZW50c1tjXTtpZihlIT09ZCYmbnVsbCE9PWUpZm9yKHZhciBmIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShmKSYmKGJbZl09ZVtmXSl9cmV0dXJuIGJ9Ok9iamVjdC5hc3NpZ247dmFyIHNhPWgoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZT1PYmplY3Qua2V5cyhiKSxmPTA7ZjxlLmxlbmd0aDspKCFjfHxjJiZhW2VbZl1dPT09ZCkmJihhW2VbZl1dPWJbZVtmXV0pLGYrKztyZXR1cm4gYX0sImV4dGVuZCIsIlVzZSBgYXNzaWduYC4iKSx0YT1oKGZ1bmN0aW9uKGEsYil7cmV0dXJuIHNhKGEsYiwhMCl9LCJtZXJnZSIsIlVzZSBgYXNzaWduYC4iKSx1YT0xLHZhPS9tb2JpbGV8dGFibGV0fGlwKGFkfGhvbmV8b2QpfGFuZHJvaWQvaSx3YT0ib250b3VjaHN0YXJ0ImluIGEseGE9dShhLCJQb2ludGVyRXZlbnQiKSE9PWQseWE9d2EmJnZhLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksemE9InRvdWNoIixBYT0icGVuIixCYT0ibW91c2UiLENhPSJraW5lY3QiLERhPTI1LEVhPTEsRmE9MixHYT00LEhhPTgsSWE9MSxKYT0yLEthPTQsTGE9OCxNYT0xNixOYT1KYXxLYSxPYT1MYXxNYSxQYT1OYXxPYSxRYT1bIngiLCJ5Il0sUmE9WyJjbGllbnRYIiwiY2xpZW50WSJdO3gucHJvdG90eXBlPXtoYW5kbGVyOmZ1bmN0aW9uKCl7fSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5ldkVsJiZtKHRoaXMuZWxlbWVudCx0aGlzLmV2RWwsdGhpcy5kb21IYW5kbGVyKSx0aGlzLmV2VGFyZ2V0JiZtKHRoaXMudGFyZ2V0LHRoaXMuZXZUYXJnZXQsdGhpcy5kb21IYW5kbGVyKSx0aGlzLmV2V2luJiZtKHcodGhpcy5lbGVtZW50KSx0aGlzLmV2V2luLHRoaXMuZG9tSGFuZGxlcil9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmV2RWwmJm4odGhpcy5lbGVtZW50LHRoaXMuZXZFbCx0aGlzLmRvbUhhbmRsZXIpLHRoaXMuZXZUYXJnZXQmJm4odGhpcy50YXJnZXQsdGhpcy5ldlRhcmdldCx0aGlzLmRvbUhhbmRsZXIpLHRoaXMuZXZXaW4mJm4odyh0aGlzLmVsZW1lbnQpLHRoaXMuZXZXaW4sdGhpcy5kb21IYW5kbGVyKX19O3ZhciBTYT17bW91c2Vkb3duOkVhLG1vdXNlbW92ZTpGYSxtb3VzZXVwOkdhfSxUYT0ibW91c2Vkb3duIixVYT0ibW91c2Vtb3ZlIG1vdXNldXAiO2koTCx4LHtoYW5kbGVyOmZ1bmN0aW9uKGEpe3ZhciBiPVNhW2EudHlwZV07YiZFYSYmMD09PWEuYnV0dG9uJiYodGhpcy5wcmVzc2VkPSEwKSxiJkZhJiYxIT09YS53aGljaCYmKGI9R2EpLHRoaXMucHJlc3NlZCYmKGImR2EmJih0aGlzLnByZXNzZWQ9ITEpLHRoaXMuY2FsbGJhY2sodGhpcy5tYW5hZ2VyLGIse3BvaW50ZXJzOlthXSxjaGFuZ2VkUG9pbnRlcnM6W2FdLHBvaW50ZXJUeXBlOkJhLHNyY0V2ZW50OmF9KSl9fSk7dmFyIFZhPXtwb2ludGVyZG93bjpFYSxwb2ludGVybW92ZTpGYSxwb2ludGVydXA6R2EscG9pbnRlcmNhbmNlbDpIYSxwb2ludGVyb3V0OkhhfSxXYT17Mjp6YSwzOkFhLDQ6QmEsNTpDYX0sWGE9InBvaW50ZXJkb3duIixZYT0icG9pbnRlcm1vdmUgcG9pbnRlcnVwIHBvaW50ZXJjYW5jZWwiO2EuTVNQb2ludGVyRXZlbnQmJiFhLlBvaW50ZXJFdmVudCYmKFhhPSJNU1BvaW50ZXJEb3duIixZYT0iTVNQb2ludGVyTW92ZSBNU1BvaW50ZXJVcCBNU1BvaW50ZXJDYW5jZWwiKSxpKE0seCx7aGFuZGxlcjpmdW5jdGlvbihhKXt2YXIgYj10aGlzLnN0b3JlLGM9ITEsZD1hLnR5cGUudG9Mb3dlckNhc2UoKS5yZXBsYWNlKCJtcyIsIiIpLGU9VmFbZF0sZj1XYVthLnBvaW50ZXJUeXBlXXx8YS5wb2ludGVyVHlwZSxnPWY9PXphLGg9cihiLGEucG9pbnRlcklkLCJwb2ludGVySWQiKTtlJkVhJiYoMD09PWEuYnV0dG9ufHxnKT8wPmgmJihiLnB1c2goYSksaD1iLmxlbmd0aC0xKTplJihHYXxIYSkmJihjPSEwKSwwPmh8fChiW2hdPWEsdGhpcy5jYWxsYmFjayh0aGlzLm1hbmFnZXIsZSx7cG9pbnRlcnM6YixjaGFuZ2VkUG9pbnRlcnM6W2FdLHBvaW50ZXJUeXBlOmYsc3JjRXZlbnQ6YX0pLGMmJmIuc3BsaWNlKGgsMSkpfX0pO3ZhciBaYT17dG91Y2hzdGFydDpFYSx0b3VjaG1vdmU6RmEsdG91Y2hlbmQ6R2EsdG91Y2hjYW5jZWw6SGF9LCRhPSJ0b3VjaHN0YXJ0IixfYT0idG91Y2hzdGFydCB0b3VjaG1vdmUgdG91Y2hlbmQgdG91Y2hjYW5jZWwiO2koTix4LHtoYW5kbGVyOmZ1bmN0aW9uKGEpe3ZhciBiPVphW2EudHlwZV07aWYoYj09PUVhJiYodGhpcy5zdGFydGVkPSEwKSx0aGlzLnN0YXJ0ZWQpe3ZhciBjPU8uY2FsbCh0aGlzLGEsYik7YiYoR2F8SGEpJiZjWzBdLmxlbmd0aC1jWzFdLmxlbmd0aD09PTAmJih0aGlzLnN0YXJ0ZWQ9ITEpLHRoaXMuY2FsbGJhY2sodGhpcy5tYW5hZ2VyLGIse3BvaW50ZXJzOmNbMF0sY2hhbmdlZFBvaW50ZXJzOmNbMV0scG9pbnRlclR5cGU6emEsc3JjRXZlbnQ6YX0pfX19KTt2YXIgYWI9e3RvdWNoc3RhcnQ6RWEsdG91Y2htb3ZlOkZhLHRvdWNoZW5kOkdhLHRvdWNoY2FuY2VsOkhhfSxiYj0idG91Y2hzdGFydCB0b3VjaG1vdmUgdG91Y2hlbmQgdG91Y2hjYW5jZWwiO2koUCx4LHtoYW5kbGVyOmZ1bmN0aW9uKGEpe3ZhciBiPWFiW2EudHlwZV0sYz1RLmNhbGwodGhpcyxhLGIpO2MmJnRoaXMuY2FsbGJhY2sodGhpcy5tYW5hZ2VyLGIse3BvaW50ZXJzOmNbMF0sY2hhbmdlZFBvaW50ZXJzOmNbMV0scG9pbnRlclR5cGU6emEsc3JjRXZlbnQ6YX0pfX0pO3ZhciBjYj0yNTAwLGRiPTI1O2koUix4LHtoYW5kbGVyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1jLnBvaW50ZXJUeXBlPT16YSxlPWMucG9pbnRlclR5cGU9PUJhO2lmKCEoZSYmYy5zb3VyY2VDYXBhYmlsaXRpZXMmJmMuc291cmNlQ2FwYWJpbGl0aWVzLmZpcmVzVG91Y2hFdmVudHMpKXtpZihkKVMuY2FsbCh0aGlzLGIsYyk7ZWxzZSBpZihlJiZVLmNhbGwodGhpcyxjKSlyZXR1cm47dGhpcy5jYWxsYmFjayhhLGIsYyl9fSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy50b3VjaC5kZXN0cm95KCksdGhpcy5tb3VzZS5kZXN0cm95KCl9fSk7dmFyIGViPXUobmEuc3R5bGUsInRvdWNoQWN0aW9uIiksZmI9ZWIhPT1kLGdiPSJjb21wdXRlIixoYj0iYXV0byIsaWI9Im1hbmlwdWxhdGlvbiIsamI9Im5vbmUiLGtiPSJwYW4teCIsbGI9InBhbi15IixtYj1YKCk7Vi5wcm90b3R5cGU9e3NldDpmdW5jdGlvbihhKXthPT1nYiYmKGE9dGhpcy5jb21wdXRlKCkpLGZiJiZ0aGlzLm1hbmFnZXIuZWxlbWVudC5zdHlsZSYmbWJbYV0mJih0aGlzLm1hbmFnZXIuZWxlbWVudC5zdHlsZVtlYl09YSksdGhpcy5hY3Rpb25zPWEudG9Mb3dlckNhc2UoKS50cmltKCl9LHVwZGF0ZTpmdW5jdGlvbigpe3RoaXMuc2V0KHRoaXMubWFuYWdlci5vcHRpb25zLnRvdWNoQWN0aW9uKX0sY29tcHV0ZTpmdW5jdGlvbigpe3ZhciBhPVtdO3JldHVybiBnKHRoaXMubWFuYWdlci5yZWNvZ25pemVycyxmdW5jdGlvbihiKXtrKGIub3B0aW9ucy5lbmFibGUsW2JdKSYmKGE9YS5jb25jYXQoYi5nZXRUb3VjaEFjdGlvbigpKSl9KSxXKGEuam9pbigiICIpKX0scHJldmVudERlZmF1bHRzOmZ1bmN0aW9uKGEpe3ZhciBiPWEuc3JjRXZlbnQsYz1hLm9mZnNldERpcmVjdGlvbjtpZih0aGlzLm1hbmFnZXIuc2Vzc2lvbi5wcmV2ZW50ZWQpcmV0dXJuIHZvaWQgYi5wcmV2ZW50RGVmYXVsdCgpO3ZhciBkPXRoaXMuYWN0aW9ucyxlPXAoZCxqYikmJiFtYltqYl0sZj1wKGQsbGIpJiYhbWJbbGJdLGc9cChkLGtiKSYmIW1iW2tiXTtpZihlKXt2YXIgaD0xPT09YS5wb2ludGVycy5sZW5ndGgsaT1hLmRpc3RhbmNlPDIsaj1hLmRlbHRhVGltZTwyNTA7aWYoaCYmaSYmailyZXR1cm59cmV0dXJuIGcmJmY/dm9pZCAwOmV8fGYmJmMmTmF8fGcmJmMmT2E/dGhpcy5wcmV2ZW50U3JjKGIpOnZvaWQgMH0scHJldmVudFNyYzpmdW5jdGlvbihhKXt0aGlzLm1hbmFnZXIuc2Vzc2lvbi5wcmV2ZW50ZWQ9ITAsYS5wcmV2ZW50RGVmYXVsdCgpfX07dmFyIG5iPTEsb2I9MixwYj00LHFiPTgscmI9cWIsc2I9MTYsdGI9MzI7WS5wcm90b3R5cGU9e2RlZmF1bHRzOnt9LHNldDpmdW5jdGlvbihhKXtyZXR1cm4gbGEodGhpcy5vcHRpb25zLGEpLHRoaXMubWFuYWdlciYmdGhpcy5tYW5hZ2VyLnRvdWNoQWN0aW9uLnVwZGF0ZSgpLHRoaXN9LHJlY29nbml6ZVdpdGg6ZnVuY3Rpb24oYSl7aWYoZihhLCJyZWNvZ25pemVXaXRoIix0aGlzKSlyZXR1cm4gdGhpczt2YXIgYj10aGlzLnNpbXVsdGFuZW91cztyZXR1cm4gYT1fKGEsdGhpcyksYlthLmlkXXx8KGJbYS5pZF09YSxhLnJlY29nbml6ZVdpdGgodGhpcykpLHRoaXN9LGRyb3BSZWNvZ25pemVXaXRoOmZ1bmN0aW9uKGEpe3JldHVybiBmKGEsImRyb3BSZWNvZ25pemVXaXRoIix0aGlzKT90aGlzOihhPV8oYSx0aGlzKSxkZWxldGUgdGhpcy5zaW11bHRhbmVvdXNbYS5pZF0sdGhpcyl9LHJlcXVpcmVGYWlsdXJlOmZ1bmN0aW9uKGEpe2lmKGYoYSwicmVxdWlyZUZhaWx1cmUiLHRoaXMpKXJldHVybiB0aGlzO3ZhciBiPXRoaXMucmVxdWlyZUZhaWw7cmV0dXJuIGE9XyhhLHRoaXMpLC0xPT09cihiLGEpJiYoYi5wdXNoKGEpLGEucmVxdWlyZUZhaWx1cmUodGhpcykpLHRoaXN9LGRyb3BSZXF1aXJlRmFpbHVyZTpmdW5jdGlvbihhKXtpZihmKGEsImRyb3BSZXF1aXJlRmFpbHVyZSIsdGhpcykpcmV0dXJuIHRoaXM7YT1fKGEsdGhpcyk7dmFyIGI9cih0aGlzLnJlcXVpcmVGYWlsLGEpO3JldHVybiBiPi0xJiZ0aGlzLnJlcXVpcmVGYWlsLnNwbGljZShiLDEpLHRoaXN9LGhhc1JlcXVpcmVGYWlsdXJlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLnJlcXVpcmVGYWlsLmxlbmd0aD4wfSxjYW5SZWNvZ25pemVXaXRoOmZ1bmN0aW9uKGEpe3JldHVybiEhdGhpcy5zaW11bHRhbmVvdXNbYS5pZF19LGVtaXQ6ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihiKXtjLm1hbmFnZXIuZW1pdChiLGEpfXZhciBjPXRoaXMsZD10aGlzLnN0YXRlO3FiPmQmJmIoYy5vcHRpb25zLmV2ZW50K1ooZCkpLGIoYy5vcHRpb25zLmV2ZW50KSxhLmFkZGl0aW9uYWxFdmVudCYmYihhLmFkZGl0aW9uYWxFdmVudCksZD49cWImJmIoYy5vcHRpb25zLmV2ZW50K1ooZCkpfSx0cnlFbWl0OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmNhbkVtaXQoKT90aGlzLmVtaXQoYSk6dm9pZCh0aGlzLnN0YXRlPXRiKX0sY2FuRW1pdDpmdW5jdGlvbigpe2Zvcih2YXIgYT0wO2E8dGhpcy5yZXF1aXJlRmFpbC5sZW5ndGg7KXtpZighKHRoaXMucmVxdWlyZUZhaWxbYV0uc3RhdGUmKHRifG5iKSkpcmV0dXJuITE7YSsrfXJldHVybiEwfSxyZWNvZ25pemU6ZnVuY3Rpb24oYSl7dmFyIGI9bGEoe30sYSk7cmV0dXJuIGsodGhpcy5vcHRpb25zLmVuYWJsZSxbdGhpcyxiXSk/KHRoaXMuc3RhdGUmKHJifHNifHRiKSYmKHRoaXMuc3RhdGU9bmIpLHRoaXMuc3RhdGU9dGhpcy5wcm9jZXNzKGIpLHZvaWQodGhpcy5zdGF0ZSYob2J8cGJ8cWJ8c2IpJiZ0aGlzLnRyeUVtaXQoYikpKToodGhpcy5yZXNldCgpLHZvaWQodGhpcy5zdGF0ZT10YikpfSxwcm9jZXNzOmZ1bmN0aW9uKGEpe30sZ2V0VG91Y2hBY3Rpb246ZnVuY3Rpb24oKXt9LHJlc2V0OmZ1bmN0aW9uKCl7fX0saShhYSxZLHtkZWZhdWx0czp7cG9pbnRlcnM6MX0sYXR0clRlc3Q6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5vcHRpb25zLnBvaW50ZXJzO3JldHVybiAwPT09Ynx8YS5wb2ludGVycy5sZW5ndGg9PT1ifSxwcm9jZXNzOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuc3RhdGUsYz1hLmV2ZW50VHlwZSxkPWImKG9ifHBiKSxlPXRoaXMuYXR0clRlc3QoYSk7cmV0dXJuIGQmJihjJkhhfHwhZSk/YnxzYjpkfHxlP2MmR2E/YnxxYjpiJm9iP2J8cGI6b2I6dGJ9fSksaShiYSxhYSx7ZGVmYXVsdHM6e2V2ZW50OiJwYW4iLHRocmVzaG9sZDoxMCxwb2ludGVyczoxLGRpcmVjdGlvbjpQYX0sZ2V0VG91Y2hBY3Rpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9wdGlvbnMuZGlyZWN0aW9uLGI9W107cmV0dXJuIGEmTmEmJmIucHVzaChsYiksYSZPYSYmYi5wdXNoKGtiKSxifSxkaXJlY3Rpb25UZXN0OmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMub3B0aW9ucyxjPSEwLGQ9YS5kaXN0YW5jZSxlPWEuZGlyZWN0aW9uLGY9YS5kZWx0YVgsZz1hLmRlbHRhWTtyZXR1cm4gZSZiLmRpcmVjdGlvbnx8KGIuZGlyZWN0aW9uJk5hPyhlPTA9PT1mP0lhOjA+Zj9KYTpLYSxjPWYhPXRoaXMucFgsZD1NYXRoLmFicyhhLmRlbHRhWCkpOihlPTA9PT1nP0lhOjA+Zz9MYTpNYSxjPWchPXRoaXMucFksZD1NYXRoLmFicyhhLmRlbHRhWSkpKSxhLmRpcmVjdGlvbj1lLGMmJmQ+Yi50aHJlc2hvbGQmJmUmYi5kaXJlY3Rpb259LGF0dHJUZXN0OmZ1bmN0aW9uKGEpe3JldHVybiBhYS5wcm90b3R5cGUuYXR0clRlc3QuY2FsbCh0aGlzLGEpJiYodGhpcy5zdGF0ZSZvYnx8ISh0aGlzLnN0YXRlJm9iKSYmdGhpcy5kaXJlY3Rpb25UZXN0KGEpKX0sZW1pdDpmdW5jdGlvbihhKXt0aGlzLnBYPWEuZGVsdGFYLHRoaXMucFk9YS5kZWx0YVk7dmFyIGI9JChhLmRpcmVjdGlvbik7YiYmKGEuYWRkaXRpb25hbEV2ZW50PXRoaXMub3B0aW9ucy5ldmVudCtiKSx0aGlzLl9zdXBlci5lbWl0LmNhbGwodGhpcyxhKX19KSxpKGNhLGFhLHtkZWZhdWx0czp7ZXZlbnQ6InBpbmNoIix0aHJlc2hvbGQ6MCxwb2ludGVyczoyfSxnZXRUb3VjaEFjdGlvbjpmdW5jdGlvbigpe3JldHVybltqYl19LGF0dHJUZXN0OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl9zdXBlci5hdHRyVGVzdC5jYWxsKHRoaXMsYSkmJihNYXRoLmFicyhhLnNjYWxlLTEpPnRoaXMub3B0aW9ucy50aHJlc2hvbGR8fHRoaXMuc3RhdGUmb2IpfSxlbWl0OmZ1bmN0aW9uKGEpe2lmKDEhPT1hLnNjYWxlKXt2YXIgYj1hLnNjYWxlPDE/ImluIjoib3V0IjthLmFkZGl0aW9uYWxFdmVudD10aGlzLm9wdGlvbnMuZXZlbnQrYn10aGlzLl9zdXBlci5lbWl0LmNhbGwodGhpcyxhKX19KSxpKGRhLFkse2RlZmF1bHRzOntldmVudDoicHJlc3MiLHBvaW50ZXJzOjEsdGltZToyNTEsdGhyZXNob2xkOjl9LGdldFRvdWNoQWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuW2hiXX0scHJvY2VzczpmdW5jdGlvbihhKXt2YXIgYj10aGlzLm9wdGlvbnMsYz1hLnBvaW50ZXJzLmxlbmd0aD09PWIucG9pbnRlcnMsZD1hLmRpc3RhbmNlPGIudGhyZXNob2xkLGY9YS5kZWx0YVRpbWU+Yi50aW1lO2lmKHRoaXMuX2lucHV0PWEsIWR8fCFjfHxhLmV2ZW50VHlwZSYoR2F8SGEpJiYhZil0aGlzLnJlc2V0KCk7ZWxzZSBpZihhLmV2ZW50VHlwZSZFYSl0aGlzLnJlc2V0KCksdGhpcy5fdGltZXI9ZShmdW5jdGlvbigpe3RoaXMuc3RhdGU9cmIsdGhpcy50cnlFbWl0KCl9LGIudGltZSx0aGlzKTtlbHNlIGlmKGEuZXZlbnRUeXBlJkdhKXJldHVybiByYjtyZXR1cm4gdGJ9LHJlc2V0OmZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVyKX0sZW1pdDpmdW5jdGlvbihhKXt0aGlzLnN0YXRlPT09cmImJihhJiZhLmV2ZW50VHlwZSZHYT90aGlzLm1hbmFnZXIuZW1pdCh0aGlzLm9wdGlvbnMuZXZlbnQrInVwIixhKToodGhpcy5faW5wdXQudGltZVN0YW1wPXJhKCksdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50LHRoaXMuX2lucHV0KSkpfX0pLGkoZWEsYWEse2RlZmF1bHRzOntldmVudDoicm90YXRlIix0aHJlc2hvbGQ6MCxwb2ludGVyczoyfSxnZXRUb3VjaEFjdGlvbjpmdW5jdGlvbigpe3JldHVybltqYl19LGF0dHJUZXN0OmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl9zdXBlci5hdHRyVGVzdC5jYWxsKHRoaXMsYSkmJihNYXRoLmFicyhhLnJvdGF0aW9uKT50aGlzLm9wdGlvbnMudGhyZXNob2xkfHx0aGlzLnN0YXRlJm9iKX19KSxpKGZhLGFhLHtkZWZhdWx0czp7ZXZlbnQ6InN3aXBlIix0aHJlc2hvbGQ6MTAsdmVsb2NpdHk6LjMsZGlyZWN0aW9uOk5hfE9hLHBvaW50ZXJzOjF9LGdldFRvdWNoQWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGJhLnByb3RvdHlwZS5nZXRUb3VjaEFjdGlvbi5jYWxsKHRoaXMpfSxhdHRyVGVzdDpmdW5jdGlvbihhKXt2YXIgYixjPXRoaXMub3B0aW9ucy5kaXJlY3Rpb247cmV0dXJuIGMmKE5hfE9hKT9iPWEub3ZlcmFsbFZlbG9jaXR5OmMmTmE/Yj1hLm92ZXJhbGxWZWxvY2l0eVg6YyZPYSYmKGI9YS5vdmVyYWxsVmVsb2NpdHlZKSx0aGlzLl9zdXBlci5hdHRyVGVzdC5jYWxsKHRoaXMsYSkmJmMmYS5vZmZzZXREaXJlY3Rpb24mJmEuZGlzdGFuY2U+dGhpcy5vcHRpb25zLnRocmVzaG9sZCYmYS5tYXhQb2ludGVycz09dGhpcy5vcHRpb25zLnBvaW50ZXJzJiZxYShiKT50aGlzLm9wdGlvbnMudmVsb2NpdHkmJmEuZXZlbnRUeXBlJkdhfSxlbWl0OmZ1bmN0aW9uKGEpe3ZhciBiPSQoYS5vZmZzZXREaXJlY3Rpb24pO2ImJnRoaXMubWFuYWdlci5lbWl0KHRoaXMub3B0aW9ucy5ldmVudCtiLGEpLHRoaXMubWFuYWdlci5lbWl0KHRoaXMub3B0aW9ucy5ldmVudCxhKX19KSxpKGdhLFkse2RlZmF1bHRzOntldmVudDoidGFwIixwb2ludGVyczoxLHRhcHM6MSxpbnRlcnZhbDozMDAsdGltZToyNTAsdGhyZXNob2xkOjkscG9zVGhyZXNob2xkOjEwfSxnZXRUb3VjaEFjdGlvbjpmdW5jdGlvbigpe3JldHVybltpYl19LHByb2Nlc3M6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5vcHRpb25zLGM9YS5wb2ludGVycy5sZW5ndGg9PT1iLnBvaW50ZXJzLGQ9YS5kaXN0YW5jZTxiLnRocmVzaG9sZCxmPWEuZGVsdGFUaW1lPGIudGltZTtpZih0aGlzLnJlc2V0KCksYS5ldmVudFR5cGUmRWEmJjA9PT10aGlzLmNvdW50KXJldHVybiB0aGlzLmZhaWxUaW1lb3V0KCk7aWYoZCYmZiYmYyl7aWYoYS5ldmVudFR5cGUhPUdhKXJldHVybiB0aGlzLmZhaWxUaW1lb3V0KCk7dmFyIGc9dGhpcy5wVGltZT9hLnRpbWVTdGFtcC10aGlzLnBUaW1lPGIuaW50ZXJ2YWw6ITAsaD0hdGhpcy5wQ2VudGVyfHxIKHRoaXMucENlbnRlcixhLmNlbnRlcik8Yi5wb3NUaHJlc2hvbGQ7dGhpcy5wVGltZT1hLnRpbWVTdGFtcCx0aGlzLnBDZW50ZXI9YS5jZW50ZXIsaCYmZz90aGlzLmNvdW50Kz0xOnRoaXMuY291bnQ9MSx0aGlzLl9pbnB1dD1hO3ZhciBpPXRoaXMuY291bnQlYi50YXBzO2lmKDA9PT1pKXJldHVybiB0aGlzLmhhc1JlcXVpcmVGYWlsdXJlcygpPyh0aGlzLl90aW1lcj1lKGZ1bmN0aW9uKCl7dGhpcy5zdGF0ZT1yYix0aGlzLnRyeUVtaXQoKX0sYi5pbnRlcnZhbCx0aGlzKSxvYik6cmJ9cmV0dXJuIHRifSxmYWlsVGltZW91dDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aW1lcj1lKGZ1bmN0aW9uKCl7dGhpcy5zdGF0ZT10Yn0sdGhpcy5vcHRpb25zLmludGVydmFsLHRoaXMpLHRifSxyZXNldDpmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLl90aW1lcil9LGVtaXQ6ZnVuY3Rpb24oKXt0aGlzLnN0YXRlPT1yYiYmKHRoaXMuX2lucHV0LnRhcENvdW50PXRoaXMuY291bnQsdGhpcy5tYW5hZ2VyLmVtaXQodGhpcy5vcHRpb25zLmV2ZW50LHRoaXMuX2lucHV0KSl9fSksaGEuVkVSU0lPTj0iMi4wLjgiLGhhLmRlZmF1bHRzPXtkb21FdmVudHM6ITEsdG91Y2hBY3Rpb246Z2IsZW5hYmxlOiEwLGlucHV0VGFyZ2V0Om51bGwsaW5wdXRDbGFzczpudWxsLHByZXNldDpbW2VhLHtlbmFibGU6ITF9XSxbY2Ese2VuYWJsZTohMX0sWyJyb3RhdGUiXV0sW2ZhLHtkaXJlY3Rpb246TmF9XSxbYmEse2RpcmVjdGlvbjpOYX0sWyJzd2lwZSJdXSxbZ2FdLFtnYSx7ZXZlbnQ6ImRvdWJsZXRhcCIsdGFwczoyfSxbInRhcCJdXSxbZGFdXSxjc3NQcm9wczp7dXNlclNlbGVjdDoibm9uZSIsdG91Y2hTZWxlY3Q6Im5vbmUiLHRvdWNoQ2FsbG91dDoibm9uZSIsY29udGVudFpvb21pbmc6Im5vbmUiLHVzZXJEcmFnOiJub25lIix0YXBIaWdobGlnaHRDb2xvcjoicmdiYSgwLDAsMCwwKSJ9fTt2YXIgdWI9MSx2Yj0yO2lhLnByb3RvdHlwZT17c2V0OmZ1bmN0aW9uKGEpe3JldHVybiBsYSh0aGlzLm9wdGlvbnMsYSksYS50b3VjaEFjdGlvbiYmdGhpcy50b3VjaEFjdGlvbi51cGRhdGUoKSxhLmlucHV0VGFyZ2V0JiYodGhpcy5pbnB1dC5kZXN0cm95KCksdGhpcy5pbnB1dC50YXJnZXQ9YS5pbnB1dFRhcmdldCx0aGlzLmlucHV0LmluaXQoKSksdGhpc30sc3RvcDpmdW5jdGlvbihhKXt0aGlzLnNlc3Npb24uc3RvcHBlZD1hP3ZiOnVifSxyZWNvZ25pemU6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5zZXNzaW9uO2lmKCFiLnN0b3BwZWQpe3RoaXMudG91Y2hBY3Rpb24ucHJldmVudERlZmF1bHRzKGEpO3ZhciBjLGQ9dGhpcy5yZWNvZ25pemVycyxlPWIuY3VyUmVjb2duaXplcjsoIWV8fGUmJmUuc3RhdGUmcmIpJiYoZT1iLmN1clJlY29nbml6ZXI9bnVsbCk7Zm9yKHZhciBmPTA7ZjxkLmxlbmd0aDspYz1kW2ZdLGIuc3RvcHBlZD09PXZifHxlJiZjIT1lJiYhYy5jYW5SZWNvZ25pemVXaXRoKGUpP2MucmVzZXQoKTpjLnJlY29nbml6ZShhKSwhZSYmYy5zdGF0ZSYob2J8cGJ8cWIpJiYoZT1iLmN1clJlY29nbml6ZXI9YyksZisrfX0sZ2V0OmZ1bmN0aW9uKGEpe2lmKGEgaW5zdGFuY2VvZiBZKXJldHVybiBhO2Zvcih2YXIgYj10aGlzLnJlY29nbml6ZXJzLGM9MDtjPGIubGVuZ3RoO2MrKylpZihiW2NdLm9wdGlvbnMuZXZlbnQ9PWEpcmV0dXJuIGJbY107cmV0dXJuIG51bGx9LGFkZDpmdW5jdGlvbihhKXtpZihmKGEsImFkZCIsdGhpcykpcmV0dXJuIHRoaXM7dmFyIGI9dGhpcy5nZXQoYS5vcHRpb25zLmV2ZW50KTtyZXR1cm4gYiYmdGhpcy5yZW1vdmUoYiksdGhpcy5yZWNvZ25pemVycy5wdXNoKGEpLGEubWFuYWdlcj10aGlzLHRoaXMudG91Y2hBY3Rpb24udXBkYXRlKCksYX0scmVtb3ZlOmZ1bmN0aW9uKGEpe2lmKGYoYSwicmVtb3ZlIix0aGlzKSlyZXR1cm4gdGhpcztpZihhPXRoaXMuZ2V0KGEpKXt2YXIgYj10aGlzLnJlY29nbml6ZXJzLGM9cihiLGEpOy0xIT09YyYmKGIuc3BsaWNlKGMsMSksdGhpcy50b3VjaEFjdGlvbi51cGRhdGUoKSl9cmV0dXJuIHRoaXN9LG9uOmZ1bmN0aW9uKGEsYil7aWYoYSE9PWQmJmIhPT1kKXt2YXIgYz10aGlzLmhhbmRsZXJzO3JldHVybiBnKHEoYSksZnVuY3Rpb24oYSl7Y1thXT1jW2FdfHxbXSxjW2FdLnB1c2goYil9KSx0aGlzfX0sb2ZmOmZ1bmN0aW9uKGEsYil7aWYoYSE9PWQpe3ZhciBjPXRoaXMuaGFuZGxlcnM7cmV0dXJuIGcocShhKSxmdW5jdGlvbihhKXtiP2NbYV0mJmNbYV0uc3BsaWNlKHIoY1thXSxiKSwxKTpkZWxldGUgY1thXX0pLHRoaXN9fSxlbWl0OmZ1bmN0aW9uKGEsYil7dGhpcy5vcHRpb25zLmRvbUV2ZW50cyYma2EoYSxiKTt2YXIgYz10aGlzLmhhbmRsZXJzW2FdJiZ0aGlzLmhhbmRsZXJzW2FdLnNsaWNlKCk7aWYoYyYmYy5sZW5ndGgpe2IudHlwZT1hLGIucHJldmVudERlZmF1bHQ9ZnVuY3Rpb24oKXtiLnNyY0V2ZW50LnByZXZlbnREZWZhdWx0KCl9O2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7KWNbZF0oYiksZCsrfX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudCYmamEodGhpcywhMSksdGhpcy5oYW5kbGVycz17fSx0aGlzLnNlc3Npb249e30sdGhpcy5pbnB1dC5kZXN0cm95KCksdGhpcy5lbGVtZW50PW51bGx9fSxsYShoYSx7SU5QVVRfU1RBUlQ6RWEsSU5QVVRfTU9WRTpGYSxJTlBVVF9FTkQ6R2EsSU5QVVRfQ0FOQ0VMOkhhLFNUQVRFX1BPU1NJQkxFOm5iLFNUQVRFX0JFR0FOOm9iLFNUQVRFX0NIQU5HRUQ6cGIsU1RBVEVfRU5ERUQ6cWIsU1RBVEVfUkVDT0dOSVpFRDpyYixTVEFURV9DQU5DRUxMRUQ6c2IsU1RBVEVfRkFJTEVEOnRiLERJUkVDVElPTl9OT05FOklhLERJUkVDVElPTl9MRUZUOkphLERJUkVDVElPTl9SSUdIVDpLYSxESVJFQ1RJT05fVVA6TGEsRElSRUNUSU9OX0RPV046TWEsRElSRUNUSU9OX0hPUklaT05UQUw6TmEsRElSRUNUSU9OX1ZFUlRJQ0FMOk9hLERJUkVDVElPTl9BTEw6UGEsTWFuYWdlcjppYSxJbnB1dDp4LFRvdWNoQWN0aW9uOlYsVG91Y2hJbnB1dDpQLE1vdXNlSW5wdXQ6TCxQb2ludGVyRXZlbnRJbnB1dDpNLFRvdWNoTW91c2VJbnB1dDpSLFNpbmdsZVRvdWNoSW5wdXQ6TixSZWNvZ25pemVyOlksQXR0clJlY29nbml6ZXI6YWEsVGFwOmdhLFBhbjpiYSxTd2lwZTpmYSxQaW5jaDpjYSxSb3RhdGU6ZWEsUHJlc3M6ZGEsb246bSxvZmY6bixlYWNoOmcsbWVyZ2U6dGEsZXh0ZW5kOnNhLGFzc2lnbjpsYSxpbmhlcml0OmksYmluZEZuOmoscHJlZml4ZWQ6dX0pO3ZhciB3Yj0idW5kZWZpbmVkIiE9dHlwZW9mIGE/YToidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp7fTt3Yi5IYW1tZXI9aGEsImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZnVuY3Rpb24oKXtyZXR1cm4gaGF9KToidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9aGE6YVtjXT1oYX0od2luZG93LGRvY3VtZW50LCJIYW1tZXIiKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFtbWVyLm1pbi5qcy5tYXA=",
        "summary": "7L | hammer.min.js | .js | 20.3 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\dashboard.css",
        "type": ".css",
        "size_kb": 1.6,
        "lines": 100,
        "content": "Ym9keSB7CiAgZm9udC1zaXplOiAuODc1cmVtOwp9CgouZmVhdGhlciB7CiAgd2lkdGg6IDE2cHg7CiAgaGVpZ2h0OiAxNnB4OwogIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTsKfQoKLyoKICogU2lkZWJhcgogKi8KCi5zaWRlYmFyIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIC8qIHJ0bDpyYXc6CiAgcmlnaHQ6IDA7CiAgKi8KICBib3R0b206IDA7CiAgLyogcnRsOnJlbW92ZSAqLwogIGxlZnQ6IDA7CiAgei1pbmRleDogMTAwOyAvKiBCZWhpbmQgdGhlIG5hdmJhciAqLwogIHBhZGRpbmc6IDQ4cHggMCAwOyAvKiBIZWlnaHQgb2YgbmF2YmFyICovCiAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAuMSk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkgewogIC5zaWRlYmFyIHsKICAgIHRvcDogNXJlbTsKICB9Cn0KCi5zaWRlYmFyLXN0aWNreSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogMDsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0OHB4KTsKICBwYWRkaW5nLXRvcDogLjVyZW07CiAgb3ZlcmZsb3cteDogaGlkZGVuOwogIG92ZXJmbG93LXk6IGF1dG87IC8qIFNjcm9sbGFibGUgY29udGVudHMgaWYgdmlld3BvcnQgaXMgc2hvcnRlciB0aGFuIGNvbnRlbnQuICovCn0KCi5zaWRlYmFyIC5uYXYtbGluayB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBjb2xvcjogIzMzMzsKfQoKLnNpZGViYXIgLm5hdi1saW5rIC5mZWF0aGVyIHsKICBtYXJnaW4tcmlnaHQ6IDRweDsKICBjb2xvcjogIzcyNzI3MjsKfQoKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSB7CiAgY29sb3I6ICMyNDcwZGM7Cn0KCi5zaWRlYmFyIC5uYXYtbGluazpob3ZlciAuZmVhdGhlciwKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSAuZmVhdGhlciB7CiAgY29sb3I6IGluaGVyaXQ7Cn0KCi5zaWRlYmFyLWhlYWRpbmcgewogIGZvbnQtc2l6ZTogLjc1cmVtOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi8qCiAqIE5hdmJhcgogKi8KCi5uYXZiYXItYnJhbmQgewogIHBhZGRpbmctdG9wOiAuNzVyZW07CiAgcGFkZGluZy1ib3R0b206IC43NXJlbTsKICBmb250LXNpemU6IDFyZW07CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMjUpOwogIGJveC1zaGFkb3c6IGluc2V0IC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgLjI1KTsKfQoKLm5hdmJhciAubmF2YmFyLXRvZ2dsZXIgewogIHRvcDogLjI1cmVtOwogIHJpZ2h0OiAxcmVtOwp9CgoubmF2YmFyIC5mb3JtLWNvbnRyb2wgewogIHBhZGRpbmc6IC43NXJlbSAxcmVtOwogIGJvcmRlci13aWR0aDogMDsKICBib3JkZXItcmFkaXVzOiAwOwp9CgouZm9ybS1jb250cm9sLWRhcmsgewogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjEpOwogIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuMSk7Cn0KCi5mb3JtLWNvbnRyb2wtZGFyazpmb2N1cyB7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAuMjUpOwp9Cg==",
        "summary": "100L | dashboard.css | .css | 1.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\sidebars.css",
        "type": ".css",
        "size_kb": 1.9,
        "lines": 89,
        "content": "Ym9keSB7CiAgbWluLWhlaWdodDogMTAwdmg7CiAgbWluLWhlaWdodDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKfQoKaHRtbCB7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwp9CgptYWluIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogbm93cmFwOwogIGhlaWdodDogMTAwdmg7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwogIG1heC1oZWlnaHQ6IDEwMHZoOwogIG92ZXJmbG93LXg6IGF1dG87CiAgb3ZlcmZsb3cteTogaGlkZGVuOwp9CgouYi1leGFtcGxlLWRpdmlkZXIgewogIGZsZXgtc2hyaW5rOiAwOwogIHdpZHRoOiAxLjVyZW07CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4xKTsKICBib3JkZXI6IHNvbGlkIHJnYmEoMCwgMCwgMCwgLjE1KTsKICBib3JkZXItd2lkdGg6IDFweCAwOwogIGJveC1zaGFkb3c6IGluc2V0IDAgLjVlbSAxLjVlbSByZ2JhKDAsIDAsIDAsIC4xKSwgaW5zZXQgMCAuMTI1ZW0gLjVlbSByZ2JhKDAsIDAsIDAsIC4xNSk7Cn0KCi5iaSB7CiAgdmVydGljYWwtYWxpZ246IC0uMTI1ZW07CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgZmlsbDogY3VycmVudENvbG9yOwp9CgouZHJvcGRvd24tdG9nZ2xlIHsgb3V0bGluZTogMDsgfQoKLm5hdi1mbHVzaCAubmF2LWxpbmsgewogIGJvcmRlci1yYWRpdXM6IDA7Cn0KCi5idG4tdG9nZ2xlIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IC4yNXJlbSAuNXJlbTsKICBmb250LXdlaWdodDogNjAwOwogIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgYm9yZGVyOiAwOwp9Ci5idG4tdG9nZ2xlOmhvdmVyLAouYnRuLXRvZ2dsZTpmb2N1cyB7CiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjg1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJmNGVhOwp9CgouYnRuLXRvZ2dsZTo6YmVmb3JlIHsKICB3aWR0aDogMS4yNWVtOwogIGxpbmUtaGVpZ2h0OiAwOwogIGNvbnRlbnQ6IHVybCgiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxNicgaGVpZ2h0PScxNicgdmlld0JveD0nMCAwIDE2IDE2JyUzZSUzY3BhdGggZmlsbD0nbm9uZScgc3Ryb2tlPSdyZ2JhJTI4MCwwLDAsLjUlMjknIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNSAxNGw2LTYtNi02Jy8lM2UlM2Mvc3ZnJTNlIik7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zNXMgZWFzZTsKICB0cmFuc2Zvcm0tb3JpZ2luOiAuNWVtIDUwJTsKfQoKLmJ0bi10b2dnbGVbYXJpYS1leHBhbmRlZD0idHJ1ZSJdIHsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuODUpOwp9Ci5idG4tdG9nZ2xlW2FyaWEtZXhwYW5kZWQ9InRydWUiXTo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7Cn0KCi5idG4tdG9nZ2xlLW5hdiBhIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBwYWRkaW5nOiAuMTg3NXJlbSAuNXJlbTsKICBtYXJnaW4tdG9wOiAuMTI1cmVtOwogIG1hcmdpbi1sZWZ0OiAxLjI1cmVtOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouYnRuLXRvZ2dsZS1uYXYgYTpob3ZlciwKLmJ0bi10b2dnbGUtbmF2IGE6Zm9jdXMgewogIGJhY2tncm91bmQtY29sb3I6ICNkMmY0ZWE7Cn0KCi5zY3JvbGxhcmVhIHsKICBvdmVyZmxvdy15OiBhdXRvOwp9CgouZnctc2VtaWJvbGQgeyBmb250LXdlaWdodDogNjAwOyB9Ci5saC10aWdodCB7IGxpbmUtaGVpZ2h0OiAxLjI1OyB9Cg==",
        "summary": "89L | sidebars.css | .css | 1.9 KB"
      },
      {
        "path": "frontend\\src\\App.css",
        "type": ".css",
        "size_kb": 0.6,
        "lines": 42,
        "content": "I3Jvb3QgewogIG1heC13aWR0aDogMTI4MHB4OwogIG1hcmdpbjogMCBhdXRvOwogIHBhZGRpbmc6IDJyZW07CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoubG9nbyB7CiAgaGVpZ2h0OiA2ZW07CiAgcGFkZGluZzogMS41ZW07CiAgd2lsbC1jaGFuZ2U6IGZpbHRlcjsKICB0cmFuc2l0aW9uOiBmaWx0ZXIgMzAwbXM7Cn0KLmxvZ286aG92ZXIgewogIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDJlbSAjNjQ2Y2ZmYWEpOwp9Ci5sb2dvLnJlYWN0OmhvdmVyIHsKICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAyZW0gIzYxZGFmYmFhKTsKfQoKQGtleWZyYW1lcyBsb2dvLXNwaW4gewogIGZyb20gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7CiAgfQogIHRvIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7CiAgfQp9CgpAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IG5vLXByZWZlcmVuY2UpIHsKICBhOm50aC1vZi10eXBlKDIpIC5sb2dvIHsKICAgIGFuaW1hdGlvbjogbG9nby1zcGluIGluZmluaXRlIDIwcyBsaW5lYXI7CiAgfQp9CgouY2FyZCB7CiAgcGFkZGluZzogMmVtOwp9CgoucmVhZC10aGUtZG9jcyB7CiAgY29sb3I6ICM4ODg7Cn0K",
        "summary": "42L | App.css | .css | 0.6 KB"
      },
      {
        "path": "frontend\\src\\App.jsx",
        "type": ".jsx",
        "size_kb": 1.5,
        "lines": 43,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgUXVhbnRQcm92aWRlciB9IGZyb20gIi4vY29udGV4dC9RdWFudENvbnRleHQiOwppbXBvcnQgSGVhZGVyIGZyb20gIi4vY29tcG9uZW50cy9IZWFkZXIiOwppbXBvcnQgU2lkZWJhciBmcm9tICIuL2NvbXBvbmVudHMvU2lkZWJhciI7CmltcG9ydCBRdWFudFN1bW1hcnlQYW5lbCBmcm9tICIuL2NvbXBvbmVudHMvUXVhbnRTdW1tYXJ5UGFuZWwiOwppbXBvcnQgTWFya2V0IGZyb20gIi4vcGFnZXMvTWFya2V0IjsKaW1wb3J0IE1vbml0b3IgZnJvbSAiLi9wYWdlcy9Nb25pdG9yIjsKaW1wb3J0IEFsZXJ0cyBmcm9tICIuL3BhZ2VzL0FsZXJ0cyI7CmltcG9ydCBEaWFnbm9zdGljcyBmcm9tICIuL3BhZ2VzL0RpYWdub3N0aWNzIjsKaW1wb3J0ICIuL2luZGV4LmNzcyI7IC8vIFRhaWx3aW5kICsgVHJlbW9yIHN0eWxlcwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkgewogIGNvbnN0IFtyb3V0ZSwgc2V0Um91dGVdID0gUmVhY3QudXNlU3RhdGUoIm1hcmtldCIpOyAvLyBtYXJrZXQgfCBtb25pdG9yIHwgYWxlcnRzIHwgZGlhZ25vc3RpY3MKCiAgcmV0dXJuICgKICAgIDxRdWFudFByb3ZpZGVyPgogICAgICA8ZGl2IGNsYXNzTmFtZT0ibWluLWgtc2NyZWVuIGJnLXNsYXRlLTk1MCB0ZXh0LXRyZW1vci1jb250ZW50IGRhcms6dGV4dC1kYXJrLXRyZW1vci1jb250ZW50IGFudGlhbGlhc2VkIj4KICAgICAgICB7LyogTWFpbiBDb250YWluZXIgKi99CiAgICAgICAgPGRpdiBjbGFzc05hbWU9Im14LWF1dG8gbWF4LXctc2NyZWVuLTJ4bCBwLTQgbWQ6cC0xMCBzcGFjZS15LTYiPgogICAgICAgICAgCiAgICAgICAgICB7LyogSGVhZGVyICovfQogICAgICAgICAgPEhlYWRlciBvblJvdXRlQ2hhbmdlPXtzZXRSb3V0ZX0gY3VycmVudFJvdXRlPXtyb3V0ZX0gLz4KCiAgICAgICAgICB7LyogUXVhbnRTdW1tYXJ5UGFuZWwgKGxpdmUgc3RhdHMpICovfQogICAgICAgICAgPGRpdiBjbGFzc05hbWU9Im10LTIiPgogICAgICAgICAgICA8UXVhbnRTdW1tYXJ5UGFuZWwgc29ja2V0PXt3aW5kb3c/LnF1YW50U29ja2V0fSAvPgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgey8qIE1haW4gR3JpZCAqL30KICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGdhcC02Ij4KICAgICAgICAgICAgPFNpZGViYXIgY3VycmVudD17cm91dGV9IG9uQ2hhbmdlPXtzZXRSb3V0ZX0gLz4KICAgICAgICAgICAgPG1haW4gY2xhc3NOYW1lPSJmbGV4LTEgc3BhY2UteS02Ij4KICAgICAgICAgICAgICB7cm91dGUgPT09ICJtYXJrZXQiICYmIDxNYXJrZXQgLz59CiAgICAgICAgICAgICAge3JvdXRlID09PSAibW9uaXRvciIgJiYgPE1vbml0b3IgLz59CiAgICAgICAgICAgICAge3JvdXRlID09PSAiYWxlcnRzIiAmJiA8QWxlcnRzIC8+fQogICAgICAgICAgICAgIHtyb3V0ZSA9PT0gImRpYWdub3N0aWNzIiAmJiA8RGlhZ25vc3RpY3MgLz59CiAgICAgICAgICAgIDwvbWFpbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvUXVhbnRQcm92aWRlcj4KICApOwp9Cg==",
        "summary": "43L | App.jsx | .jsx | 1.5 KB"
      },
      {
        "path": "frontend\\src\\index.css",
        "type": ".css",
        "size_kb": 0.2,
        "lines": 13,
        "content": "QHRhaWx3aW5kIGJhc2U7CkB0YWlsd2luZCBjb21wb25lbnRzOwpAdGFpbHdpbmQgdXRpbGl0aWVzOwoKaHRtbCB7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKfQoKYm9keSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzBiMGYxMjsKICBjb2xvcjogI2U2ZWVmNjsKfQo=",
        "summary": "13L | index.css | .css | 0.2 KB"
      },
      {
        "path": "frontend\\src\\main.jsx",
        "type": ".jsx",
        "size_kb": 0.2,
        "lines": 10,
        "content": "aW1wb3J0IHsgU3RyaWN0TW9kZSB9IGZyb20gJ3JlYWN0JwppbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSAncmVhY3QtZG9tL2NsaWVudCcKaW1wb3J0ICcuL2luZGV4LmNzcycKaW1wb3J0IEFwcCBmcm9tICcuL0FwcC5qc3gnCgpjcmVhdGVSb290KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpLnJlbmRlcigKICA8U3RyaWN0TW9kZT4KICAgIDxBcHAgLz4KICA8L1N0cmljdE1vZGU+LAopCg==",
        "summary": "10L | main.jsx | .jsx | 0.2 KB"
      },
      {
        "path": "frontend\\src\\components\\Header.jsx",
        "type": ".jsx",
        "size_kb": 2.0,
        "lines": 51,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IEJlbGxJY29uLCBDbG91ZEljb24gfSBmcm9tICJsdWNpZGUtcmVhY3QiOwppbXBvcnQgeyBtb3Rpb24gfSBmcm9tICJmcmFtZXItbW90aW9uIjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhlYWRlcih7IG9uUm91dGVDaGFuZ2UsIGN1cnJlbnRSb3V0ZSB9KSB7CiAgY29uc3QgeyB3c1N0YXR1cywgdXB0aW1lUGN0LCBhbGVydHMgfSA9IHVzZVF1YW50KCk7CiAgY29uc3Qgc3RhdHVzQ29sb3IgPSB3c1N0YXR1cyA9PT0gIm9wZW4iID8gImJnLWVtZXJhbGQtNTAwIiA6IHdzU3RhdHVzID09PSAiY29ubmVjdGluZyIgPyAiYmctYW1iZXItNDAwIiA6ICJiZy1yb3NlLTUwMCI7CgogIHJldHVybiAoCiAgICA8aGVhZGVyIGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHB4LTQgcHktMyBib3JkZXItYiBib3JkZXItZ3JheS04MDAgYmctZ3JheS05NTAiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQiPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGQiPlF1YW50IENvbW1hbmQgRGFzaGJvYXJkIHY0PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIHRleHQtc20iPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgaW5saW5lLWJsb2NrIHctMyBoLTMgcm91bmRlZC1mdWxsICR7c3RhdHVzQ29sb3J9YH0gdGl0bGU9e2BXUzogJHt3c1N0YXR1c31gfSAvPgogICAgICAgICAgPHNwYW4+V1M6IHt3c1N0YXR1c308L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9Im9wYWNpdHktNzAiPuKAojwvc3Bhbj4KICAgICAgICAgIDxDbG91ZEljb24gY2xhc3NOYW1lPSJ3LTQgaC00IGlubGluZSIgLz4KICAgICAgICAgIDxzcGFuPlVwdGltZSB7dXB0aW1lUGN0fSU8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGdhcC00Ij4KICAgICAgICA8bmF2IGNsYXNzTmFtZT0iZmxleCBnYXAtMiI+CiAgICAgICAgICB7WyJtYXJrZXQiLCAibW9uaXRvciIsICJhbGVydHMiLCAiZGlhZ25vc3RpY3MiXS5tYXAoKHIpID0+ICgKICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgIGtleT17cn0KICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblJvdXRlQ2hhbmdlKHIpfQogICAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSByb3VuZGVkIHRleHQtc20gJHtjdXJyZW50Um91dGUgPT09IHIgPyAiYmctZ3JheS04MDAiIDogImJnLXRyYW5zcGFyZW50IGhvdmVyOmJnLWdyYXktODAwIn1gfQogICAgICAgICAgICA+CiAgICAgICAgICAgICAge3IudG9VcHBlckNhc2UoKX0KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICApKX0KICAgICAgICA8L25hdj4KCiAgICAgICAgPGJ1dHRvbiB0aXRsZT17YCR7YWxlcnRzLmxlbmd0aH0gYWxlcnRzYH0gY2xhc3NOYW1lPSJyZWxhdGl2ZSI+CiAgICAgICAgICA8QmVsbEljb24gY2xhc3NOYW1lPSJ3LTUgaC01IiAvPgogICAgICAgICAge2FsZXJ0cy5sZW5ndGggPiAwICYmICgKICAgICAgICAgICAgPG1vdGlvbi5zcGFuCiAgICAgICAgICAgICAgaW5pdGlhbD17eyBzY2FsZTogMC43IH19CiAgICAgICAgICAgICAgYW5pbWF0ZT17eyBzY2FsZTogMSB9fQogICAgICAgICAgICAgIGNsYXNzTmFtZT0iYWJzb2x1dGUgLXRvcC0yIC1yaWdodC0yIGJnLXJvc2UtNTAwIHRleHQteHMgcm91bmRlZC1mdWxsIHB4LTEiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICB7YWxlcnRzLmxlbmd0aH0KICAgICAgICAgICAgPC9tb3Rpb24uc3Bhbj4KICAgICAgICAgICl9CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgKTsKfQo=",
        "summary": "51L | Header.jsx | .jsx | 2.0 KB"
      },
      {
        "path": "frontend\\src\\components\\QuantSummaryPanel.jsx",
        "type": ".jsx",
        "size_kb": 2.8,
        "lines": 91,
        "content": "CmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAicmVhY3QiOwppbXBvcnQgeyBDYXJkIH0gZnJvbSAiQHRyZW1vci9yZWFjdCI7CmltcG9ydCB7IG1vdGlvbiB9IGZyb20gImZyYW1lci1tb3Rpb24iOwppbXBvcnQgeyBBY3Rpdml0eSwgVHJlbmRpbmdVcCwgVHJlbmRpbmdEb3duIH0gZnJvbSAibHVjaWRlLXJlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFF1YW50U3VtbWFyeVBhbmVsKHsgc29ja2V0IH0pIHsKICBjb25zdCBbc3VtbWFyeSwgc2V0U3VtbWFyeV0gPSB1c2VTdGF0ZSh7CiAgICB0b3RhbE9JOiAwLAogICAgYXZnWjogMCwKICAgIHN0cm9uZ2VzdEJpYXM6ICItIiwKICAgIGJpYXNEaXI6ICJuZXV0cmFsIiwKICAgIHVwZGF0ZWQ6IG51bGwsCiAgfSk7CgogIGNvbnN0IFtwdWxzZSwgc2V0UHVsc2VdID0gdXNlU3RhdGUoZmFsc2UpOwoKICAvLyBSRVNUIGZhbGxiYWNrCiAgY29uc3QgZmV0Y2hTdW1tYXJ5ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goaW1wb3J0Lm1ldGEuZW52LlZJVEVfQVBJX0JBU0UgKyAiL3F1YW50X3N1bW1hcnkiKTsKICAgICAgaWYgKHJlcy5vaykgewogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpOwogICAgICAgIHVwZGF0ZVN1bW1hcnkoZGF0YSk7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBjb25zb2xlLndhcm4oIlF1YW50U3VtbWFyeSBSRVNUIGZhaWxlZCIsIGVycik7CiAgICB9CiAgfTsKCiAgY29uc3QgdXBkYXRlU3VtbWFyeSA9IChkYXRhKSA9PiB7CiAgICBzZXRTdW1tYXJ5KHsKICAgICAgdG90YWxPSTogZGF0YS50b3RhbF9vaSA/PyAwLAogICAgICBhdmdaOiBkYXRhLmF2Z196ID8/IDAsCiAgICAgIHN0cm9uZ2VzdEJpYXM6IGRhdGEuc3Ryb25nZXN0X3N5bWJvbCA/PyAiLSIsCiAgICAgIGJpYXNEaXI6IGRhdGEuYmlhcyA/PyAibmV1dHJhbCIsCiAgICAgIHVwZGF0ZWQ6IG5ldyBEYXRlKCkudG9Mb2NhbGVUaW1lU3RyaW5nKCksCiAgICB9KTsKICAgIHNldFB1bHNlKHRydWUpOwogICAgc2V0VGltZW91dCgoKSA9PiBzZXRQdWxzZShmYWxzZSksIDQwMCk7CiAgfTsKCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGlmICghc29ja2V0KSByZXR1cm47CiAgICBzb2NrZXQub24oInF1YW50X3N1bW1hcnkiLCAoZGF0YSkgPT4gdXBkYXRlU3VtbWFyeShkYXRhKSk7CiAgICBmZXRjaFN1bW1hcnkoKTsKICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoZmV0Y2hTdW1tYXJ5LCAzMDAwMCk7CiAgICByZXR1cm4gKCkgPT4gewogICAgICBzb2NrZXQub2ZmKCJxdWFudF9zdW1tYXJ5Iik7CiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgfTsKICB9LCBbc29ja2V0XSk7CgogIGNvbnN0IGJpYXNDb2xvciA9CiAgICBzdW1tYXJ5LmJpYXNEaXIgPT09ICJsb25nIgogICAgICA/ICJ0ZXh0LWVtZXJhbGQtNDAwIgogICAgICA6IHN1bW1hcnkuYmlhc0RpciA9PT0gInNob3J0IgogICAgICA/ICJ0ZXh0LXJvc2UtNDAwIgogICAgICA6ICJ0ZXh0LWdyYXktNDAwIjsKCiAgcmV0dXJuICgKICAgIDxDYXJkIGNsYXNzTmFtZT0iYmctZ3JheS05NTAgYm9yZGVyLWdyYXktODAwIj4KICAgICAgPG1vdGlvbi5kaXYKICAgICAgICBhbmltYXRlPXtwdWxzZSA/IHsgc2NhbGU6IDEuMDMgfSA6IHsgc2NhbGU6IDEgfX0KICAgICAgICB0cmFuc2l0aW9uPXt7IGR1cmF0aW9uOiAwLjMgfX0KICAgICAgICBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiIKICAgICAgPgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtY29sIj4KICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj5Ub3RhbCBPSTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1vbm8iPntzdW1tYXJ5LnRvdGFsT0kudG9Mb2NhbGVTdHJpbmcoKX08L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggZmxleC1jb2wiPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIG9wYWNpdHktNzAiPkF2ZyBaPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbW9ubyI+e3N1bW1hcnkuYXZnWi50b0ZpeGVkKDIpfTwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBmbGV4LWNvbCBpdGVtcy1lbmQiPgogICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ0ZXh0LXhzIG9wYWNpdHktNzAiPkJpYXM8L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGZsZXggaXRlbXMtY2VudGVyIGdhcC0xICR7Ymlhc0NvbG9yfWB9PgogICAgICAgICAgICB7c3VtbWFyeS5iaWFzRGlyID09PSAibG9uZyIgJiYgPFRyZW5kaW5nVXAgY2xhc3NOYW1lPSJ3LTQgaC00IiAvPn0KICAgICAgICAgICAge3N1bW1hcnkuYmlhc0RpciA9PT0gInNob3J0IiAmJiA8VHJlbmRpbmdEb3duIGNsYXNzTmFtZT0idy00IGgtNCIgLz59CiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0iZm9udC1tb25vIj57c3VtbWFyeS5zdHJvbmdlc3RCaWFzfTwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmbGV4IGZsZXgtY29sIGl0ZW1zLWVuZCB0ZXh0LXhzIG9wYWNpdHktNjAiPgogICAgICAgICAgPEFjdGl2aXR5IGNsYXNzTmFtZT0idy00IGgtNCIgLz4KICAgICAgICAgIDxzcGFuPntzdW1tYXJ5LnVwZGF0ZWR9PC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICA8L21vdGlvbi5kaXY+CiAgICA8L0NhcmQ+CiAgKTsKfQo=",
        "summary": "91L | QuantSummaryPanel.jsx | .jsx | 2.8 KB"
      },
      {
        "path": "frontend\\src\\components\\Sidebar.jsx",
        "type": ".jsx",
        "size_kb": 1.0,
        "lines": 30,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgTGlzdCwgVHJlbmRpbmdVcCwgQmVsbCB9IGZyb20gImx1Y2lkZS1yZWFjdCI7Cgpjb25zdCBpdGVtcyA9IFsKICB7IGtleTogIm1hcmtldCIsIGxhYmVsOiAiTWFya2V0IiwgaWNvbjogPFRyZW5kaW5nVXAgLz4gfSwKICB7IGtleTogIm1vbml0b3IiLCBsYWJlbDogIk1vbml0b3IiLCBpY29uOiA8TGlzdCAvPiB9LAogIHsga2V5OiAiYWxlcnRzIiwgbGFiZWw6ICJBbGVydHMiLCBpY29uOiA8QmVsbCAvPiB9LAogIHsga2V5OiAiZGlhZ25vc3RpY3MiLCBsYWJlbDogIkRpYWdub3N0aWNzIiwgaWNvbjogPExpc3QgLz4gfSwKXTsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNpZGViYXIoeyBjdXJyZW50LCBvbkNoYW5nZSB9KSB7CiAgcmV0dXJuICgKICAgIDxhc2lkZSBjbGFzc05hbWU9InctNzIgYm9yZGVyLXIgYm9yZGVyLWdyYXktODAwIHAtMyI+CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJtYi00IHRleHQtc20gb3BhY2l0eS04MCI+TmF2aWdhdGlvbjwvZGl2PgogICAgICA8dWwgY2xhc3NOYW1lPSJzcGFjZS15LTIiPgogICAgICAgIHtpdGVtcy5tYXAoKGl0KSA9PiAoCiAgICAgICAgICA8bGkga2V5PXtpdC5rZXl9PgogICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25DaGFuZ2UoaXQua2V5KX0KICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTMgcHgtMyBweS0yIHJvdW5kZWQgJHtjdXJyZW50ID09PSBpdC5rZXkgPyAiYmctZ3JheS04MDAiIDogImhvdmVyOmJnLWdyYXktODAwIn1gfQogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJ3LTUgaC01Ij57aXQuaWNvbn08L3NwYW4+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSJmbGV4LTEgdGV4dC1sZWZ0Ij57aXQubGFiZWx9PC9zcGFuPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvbGk+CiAgICAgICAgKSl9CiAgICAgIDwvdWw+CiAgICA8L2FzaWRlPgogICk7Cn0K",
        "summary": "30L | Sidebar.jsx | .jsx | 1.0 KB"
      },
      {
        "path": "frontend\\src\\context\\QuantContext.jsx",
        "type": ".jsx",
        "size_kb": 5.0,
        "lines": 152,
        "content": "aW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gInJlYWN0IjsKaW1wb3J0IGlvIGZyb20gInNvY2tldC5pby1jbGllbnQiOyAvLyBzb2NrZXQuaW8tY2xpZW50CmltcG9ydCB7IG1vdGlvbiB9IGZyb20gImZyYW1lci1tb3Rpb24iOwoKY29uc3QgUXVhbnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpOwpleHBvcnQgY29uc3QgdXNlUXVhbnQgPSAoKSA9PiB1c2VDb250ZXh0KFF1YW50Q29udGV4dCk7CgovKioKICogQ29uZmlnIG5vdGVzOgogKiAtIFNPQ0tFVF9VUkw6IHNldCBpbiAuZW52IChWaXRlOiBWSVRFX0FQSV9CQVNFKQogKiAtIFJFU1QgZmFsbGJhY2sgZXZlcnkgMzBzIGlmIG5vIFdTIG1lc3NhZ2VzIChhdXRvIHN3aXRjaGluZykKICogLSBFeHBvc2VzOiBtZXRyaWNzIChtYXApLCBzZWxlY3RlZFN5bWJvbCwgd3NTdGF0dXMsIHVwdGltZVBjdCwgYWxlcnRzW10sIHJlZnJlc2goKSBoZWxwZXIKICovCgpjb25zdCBTT0NLRVRfVVJMID0gaW1wb3J0Lm1ldGEuZW52LlZJVEVfV1NfVVJMIHx8ICJodHRwOi8vbG9jYWxob3N0OjUxNzMiOyAvLyByZXBsYWNlIHdpdGggeW91ciB3cyBob3N0CmNvbnN0IFJFU1RfQkFTRSA9IGltcG9ydC5tZXRhLmVudi5WSVRFX0FQSV9CQVNFIHx8ICIvYXBpIjsKCmV4cG9ydCBjb25zdCBRdWFudFByb3ZpZGVyID0gKHsgY2hpbGRyZW4gfSkgPT4gewogIGNvbnN0IFttZXRyaWNzLCBzZXRNZXRyaWNzXSA9IHVzZVN0YXRlKHt9KTsgLy8ge1BBSVI6IHsuLi59fQogIGNvbnN0IFtzZWxlY3RlZFN5bWJvbCwgc2V0U2VsZWN0ZWRTeW1ib2xdID0gdXNlU3RhdGUobnVsbCk7CiAgY29uc3QgW3dzU3RhdHVzLCBzZXRXc1N0YXR1c10gPSB1c2VTdGF0ZSgiaWRsZSIpOyAvLyBjb25uZWN0aW5nIHwgb3BlbiB8IGNsb3NlZCB8IGVycm9yCiAgY29uc3QgW3VwdGltZVBjdCwgc2V0VXB0aW1lUGN0XSA9IHVzZVN0YXRlKDApOwogIGNvbnN0IFthbGVydHMsIHNldEFsZXJ0c10gPSB1c2VTdGF0ZShbXSk7CiAgY29uc3Qgc29ja2V0UmVmID0gdXNlUmVmKG51bGwpOwogIGNvbnN0IGxhc3RXc1RzUmVmID0gdXNlUmVmKERhdGUubm93KCkpOwogIGNvbnN0IGZhbGxiYWNrVGltZXJSZWYgPSB1c2VSZWYobnVsbCk7CgogIC8vIEhlbHBlciB0byBtZXJnZSBpbmNvbWluZyBtZXRyaWMgcm93cyAoZnJvbSBXUyBvciBSRVNUKQogIGNvbnN0IHVwc2VydE1ldHJpY3MgPSAocm93cyA9IFtdKSA9PiB7CiAgICBzZXRNZXRyaWNzKHByZXYgPT4gewogICAgICBjb25zdCBuZXh0ID0geyAuLi5wcmV2IH07CiAgICAgIHJvd3MuZm9yRWFjaChyID0+IHsKICAgICAgICBjb25zdCBzeW0gPSByLnN5bWJvbCB8fCByLnBhaXIgfHwgci5zeW07CiAgICAgICAgaWYgKCFzeW0pIHJldHVybjsKICAgICAgICBuZXh0W3N5bV0gPSB7IC4uLihuZXh0W3N5bV0gfHwge30pLCAuLi5yLCB1cGRhdGVkQXQ6IERhdGUubm93KCkgfTsKICAgICAgfSk7CiAgICAgIHJldHVybiBuZXh0OwogICAgfSk7CiAgfTsKCiAgLy8gQmFzaWMgYWxlcnQgZGV0ZWN0aW9uIChaID4gMi41IGV0Yy4pIOKAlCB0d2VhayB0byB5b3VyIHJ1bGVzCiAgY29uc3QgZXZhbHVhdGVBbGVydHMgPSAocm93cyA9IFtdKSA9PiB7CiAgICBjb25zdCBuZXdBbGVydHMgPSBbXTsKICAgIHJvd3MuZm9yRWFjaChyID0+IHsKICAgICAgaWYgKHIuWiAmJiByLlogPiAyLjUpIG5ld0FsZXJ0cy5wdXNoKHsgc3ltYm9sOiByLnN5bWJvbCwgcmVhc29uOiBgWj0ke3IuWn1gLCB0czogRGF0ZS5ub3coKSwgc2V2ZXJpdHk6ICJoaWdoIiB9KTsKICAgICAgaWYgKHIuTFMgJiYgci5MUyA+IDIpIG5ld0FsZXJ0cy5wdXNoKHsgc3ltYm9sOiByLnN5bWJvbCwgcmVhc29uOiBgTFM9JHtyLkxTfWAsIHRzOiBEYXRlLm5vdygpLCBzZXZlcml0eTogIm1lZGl1bSIgfSk7CiAgICAgIGlmIChyLmltYiAmJiBNYXRoLmFicyhyLmltYikgPiAwLjAzKSBuZXdBbGVydHMucHVzaCh7IHN5bWJvbDogci5zeW1ib2wsIHJlYXNvbjogYGltYj0keyhyLmltYioxMDApLnRvRml4ZWQoMil9JWAsIHRzOiBEYXRlLm5vdygpLCBzZXZlcml0eTogImxvdyIgfSk7CiAgICB9KTsKICAgIGlmIChuZXdBbGVydHMubGVuZ3RoKSBzZXRBbGVydHMocHJldiA9PiBbLi4ubmV3QWxlcnRzLCAuLi5wcmV2XS5zbGljZSgwLCAyMDApKTsKICB9OwoKICAvLyBSRVNUIGZldGNoIGZvciBhbGwgbWV0cmljcyAoZmFsbGJhY2sgb3IgYm9vdCkKICBjb25zdCBmZXRjaE1ldHJpY3NSZXN0ID0gYXN5bmMgKCkgPT4gewogICAgdHJ5IHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7UkVTVF9CQVNFfS9tZXRyaWNzYCk7CiAgICAgIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoInJlc3QgbWV0cmljcyBmYWlsZWQiKTsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7CiAgICAgIC8vIGV4cGVjdGluZyBhcnJheSBvZiBtZXRyaWMgcm93cwogICAgICB1cHNlcnRNZXRyaWNzKGRhdGEpOwogICAgICBldmFsdWF0ZUFsZXJ0cyhkYXRhKTsKICAgICAgc2V0V3NTdGF0dXMocyA9PiAocyA9PT0gIm9wZW4iID8gcyA6ICJwb2xsaW5nIikpOwogICAgICBsYXN0V3NUc1JlZi5jdXJyZW50ID0gRGF0ZS5ub3coKTsKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIGNvbnNvbGUud2FybigiUkVTVCBtZXRyaWNzIGVycm9yIiwgZSk7CiAgICAgIHNldFdzU3RhdHVzKCJlcnJvciIpOwogICAgICByZXR1cm4gW107CiAgICB9CiAgfTsKCiAgLy8gU3RhcnQgc29ja2V0LCB3aXRoIGV2ZW50IGhhbmRsaW5nCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIHNldFdzU3RhdHVzKCJjb25uZWN0aW5nIik7CiAgICBjb25zdCBzb2NrZXQgPSBpbyhTT0NLRVRfVVJMLCB7IHRyYW5zcG9ydHM6IFsid2Vic29ja2V0Il0sIHBhdGg6ICIvc29ja2V0LmlvIiB9KTsKICAgIHNvY2tldFJlZi5jdXJyZW50ID0gc29ja2V0OwoKICAgIHNvY2tldC5vbigiY29ubmVjdCIsICgpID0+IHsKICAgICAgc2V0V3NTdGF0dXMoIm9wZW4iKTsKICAgICAgbGFzdFdzVHNSZWYuY3VycmVudCA9IERhdGUubm93KCk7CiAgICB9KTsKCiAgICBzb2NrZXQub24oIm1ldHJpY3NfdXBkYXRlIiwgKHBheWxvYWQpID0+IHsKICAgICAgLy8gcGF5bG9hZDogYXJyYXkgb3Igc2luZ2xlIG9iamVjdAogICAgICBsYXN0V3NUc1JlZi5jdXJyZW50ID0gRGF0ZS5ub3coKTsKICAgICAgc2V0V3NTdGF0dXMoIm9wZW4iKTsKICAgICAgY29uc3Qgcm93cyA9IEFycmF5LmlzQXJyYXkocGF5bG9hZCkgPyBwYXlsb2FkIDogW3BheWxvYWRdOwogICAgICB1cHNlcnRNZXRyaWNzKHJvd3MpOwogICAgICBldmFsdWF0ZUFsZXJ0cyhyb3dzKTsKICAgIH0pOwoKICAgIHNvY2tldC5vbigiY29ubmVjdF9lcnJvciIsIChlcnIpID0+IHsKICAgICAgY29uc29sZS53YXJuKCJXUyBjb25uZWN0X2Vycm9yIiwgZXJyKTsKICAgICAgc2V0V3NTdGF0dXMoImVycm9yIik7CiAgICB9KTsKCiAgICBzb2NrZXQub24oImRpc2Nvbm5lY3QiLCAocmVhc29uKSA9PiB7CiAgICAgIHNldFdzU3RhdHVzKCJjbG9zZWQiKTsKICAgICAgY29uc29sZS53YXJuKCJXUyBkaXNjb25uZWN0ZWQiLCByZWFzb24pOwogICAgfSk7CgogICAgLy8gb3B0aW9uYWw6IGhlYWx0aC91cHRpbWUgZXZlbnQKICAgIHNvY2tldC5vbigiaGVhbHRoIiwgKGgpID0+IHsKICAgICAgaWYgKHR5cGVvZiBoLnVwdGltZV9wY3QgPT09ICJudW1iZXIiKSBzZXRVcHRpbWVQY3QoaC51cHRpbWVfcGN0KTsKICAgIH0pOwoKICAgIHJldHVybiAoKSA9PiB7CiAgICAgIHNvY2tldC5kaXNjb25uZWN0KCk7CiAgICAgIHNvY2tldFJlZi5jdXJyZW50ID0gbnVsbDsKICAgIH07CiAgfSwgW10pOwoKICAvLyBGYWxsYmFjayBwb2xsIGxvb3A6IGlmIFdTIGlkbGUgZm9yID4zMHMsIGNhbGwgUkVTVCBldmVyeSAzMHMuCiAgdXNlRWZmZWN0KCgpID0+IHsKICAgIGNvbnN0IHBvbGxJbnRlcnZhbCA9IDMwXzAwMDsKICAgIGNvbnN0IGNoZWNrID0gYXN5bmMgKCkgPT4gewogICAgICBjb25zdCBpZGxlTXMgPSBEYXRlLm5vdygpIC0gbGFzdFdzVHNSZWYuY3VycmVudDsKICAgICAgaWYgKCFzb2NrZXRSZWYuY3VycmVudCB8fCBzb2NrZXRSZWYuY3VycmVudC5kaXNjb25uZWN0ZWQgfHwgaWRsZU1zID4gcG9sbEludGVydmFsKSB7CiAgICAgICAgLy8gcGVyZm9ybSBmYWxsYmFjayBSRVNUIHBvbGwKICAgICAgICBhd2FpdCBmZXRjaE1ldHJpY3NSZXN0KCk7CiAgICAgIH0KICAgIH07CiAgICAvLyBpbW1lZGlhdGUgd2FybSBSRVNUIGZldGNoIChib290KQogICAgZmV0Y2hNZXRyaWNzUmVzdCgpOwogICAgZmFsbGJhY2tUaW1lclJlZi5jdXJyZW50ID0gc2V0SW50ZXJ2YWwoY2hlY2ssIHBvbGxJbnRlcnZhbCk7CiAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChmYWxsYmFja1RpbWVyUmVmLmN1cnJlbnQpOwogIH0sIFtdKTsKCiAgLy8gU21hbGwgcHVibGljIEFQSQogIGNvbnN0IHJlZnJlc2ggPSAoKSA9PiBmZXRjaE1ldHJpY3NSZXN0KCk7CgogIC8vIERlcml2ZWQ6IG5pY2UgbGlnaHR3ZWlnaHQgbWV0cmljcyBsaXN0IChzb3J0ZWQpCiAgY29uc3QgcGFpcnNMaXN0ID0gUmVhY3QudXNlTWVtbygoKSA9PiB7CiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhtZXRyaWNzKS5zb3J0KChhLCBiKSA9PiAoYi5vaSB8fCAwKSAtIChhLm9pIHx8IDApKS5zbGljZSgwLCAxMDAwKTsKICB9LCBbbWV0cmljc10pOwoKICByZXR1cm4gKAogICAgPFF1YW50Q29udGV4dC5Qcm92aWRlcgogICAgICB2YWx1ZT17ewogICAgICAgIG1ldHJpY3MsCiAgICAgICAgcGFpcnNMaXN0LAogICAgICAgIHNlbGVjdGVkU3ltYm9sLAogICAgICAgIHNldFNlbGVjdGVkU3ltYm9sLAogICAgICAgIHdzU3RhdHVzLAogICAgICAgIHVwdGltZVBjdCwKICAgICAgICBhbGVydHMsCiAgICAgICAgcmVmcmVzaCwKICAgICAgfX0KICAgID4KICAgICAge2NoaWxkcmVufQogICAgPC9RdWFudENvbnRleHQuUHJvdmlkZXI+CiAgKTsKfTsK",
        "summary": "152L | QuantContext.jsx | .jsx | 5.0 KB"
      },
      {
        "path": "frontend\\src\\pages\\Alerts.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "lines": 26,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFsZXJ0cygpIHsKICBjb25zdCB7IGFsZXJ0cyB9ID0gdXNlUXVhbnQoKTsKICByZXR1cm4gKAogICAgPGRpdj4KICAgICAgPGgyIGNsYXNzTmFtZT0idGV4dC1sZyBmb250LW1lZGl1bSI+QWxlcnRzPC9oMj4KICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTMgbXQtMyI+CiAgICAgICAge2FsZXJ0cy5sZW5ndGggPT09IDAgJiYgPENhcmQ+Tm8gYWxlcnRzIOKAlCBldmVyeXRoaW5nIGNhbG0uPC9DYXJkPn0KICAgICAgICB7YWxlcnRzLm1hcCgoYSwgaSkgPT4gKAogICAgICAgICAgPENhcmQga2V5PXtpfT4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LXNlbWlib2xkIj57YS5zeW1ib2x9PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj57YS5yZWFzb259PC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQtc20gb3BhY2l0eS02MCI+e25ldyBEYXRlKGEudHMpLnRvTG9jYWxlU3RyaW5nKCl9PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9DYXJkPgogICAgICAgICkpfQogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICk7Cn0K",
        "summary": "26L | Alerts.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\pages\\Diagnostics.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "lines": 28,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpYWdub3N0aWNzKCkgewogIGNvbnN0IHsgd3NTdGF0dXMsIHVwdGltZVBjdCwgcmVmcmVzaCB9ID0gdXNlUXVhbnQoKTsKICByZXR1cm4gKAogICAgPGRpdiBjbGFzc05hbWU9InNwYWNlLXktNCI+CiAgICAgIDxoMiBjbGFzc05hbWU9InRleHQtbGcgZm9udC1tZWRpdW0iPkRpYWdub3N0aWNzPC9oMj4KICAgICAgPENhcmQ+CiAgICAgICAgPGRpdiBjbGFzc05hbWU9ImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTMgZ2FwLTMiPgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQteHMgb3BhY2l0eS03MCI+V1MgU3RhdHVzPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LW1vbm8iPnt3c1N0YXR1c308L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9InRleHQteHMgb3BhY2l0eS03MCI+VXB0aW1lPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSJmb250LW1vbm8iPnt1cHRpbWVQY3R9JTwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0idGV4dC14cyBvcGFjaXR5LTcwIj4mbmJzcDs8L2Rpdj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9InB4LTMgcHktMSBiZy1ncmF5LTgwMCByb3VuZGVkIiBvbkNsaWNrPXtyZWZyZXNofT5Gb3JjZSByZWZyZXNoPC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9DYXJkPgogICAgPC9kaXY+CiAgKTsKfQo=",
        "summary": "28L | Diagnostics.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\pages\\Market.jsx",
        "type": ".jsx",
        "size_kb": 1.6,
        "lines": 42,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQsIFRhYmxlLCBUYWJsZUhlYWQsIFRhYmxlUm93LCBUYWJsZUNlbGwsIFRhYmxlQm9keSB9IGZyb20gIkB0cmVtb3IvcmVhY3QiOwoKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWFya2V0KCkgewogIGNvbnN0IHsgcGFpcnNMaXN0LCBzZXRTZWxlY3RlZFN5bWJvbCB9ID0gdXNlUXVhbnQoKTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIj4KICAgICAgICA8aDIgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbWVkaXVtIj5NYXJrZXQg4oCUIFBhaXJzPC9oMj4KICAgICAgPC9kaXY+CgogICAgICA8Q2FyZD4KICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ib3ZlcmZsb3ctYXV0byBtYXgtaC1bNjB2aF0iPgogICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT0idy1mdWxsIHRhYmxlLWZpeGVkIHRleHQtc20iPgogICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPSJ0ZXh0LWxlZnQgdGV4dC14cyBvcGFjaXR5LTcwIHVwcGVyY2FzZSI+CiAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0icC0yIj5TeW1ib2w8L3RoPgogICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT0icC0yIj5PSTwvdGg+CiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJwLTIiPkxTPC90aD4KICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9InAtMiI+RnVuZGluZzwvdGg+CiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPSJwLTIiPlo8L3RoPgogICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICB7cGFpcnNMaXN0Lm1hcCgocCkgPT4gKAogICAgICAgICAgICAgICAgPHRyIGtleT17cC5zeW1ib2x9IGNsYXNzTmFtZT0iaG92ZXI6YmctZ3JheS04NTAgY3Vyc29yLXBvaW50ZXIiIG9uQ2xpY2s9eygpID0+IHNldFNlbGVjdGVkU3ltYm9sKHAuc3ltYm9sKX0+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMiBmb250LW1lZGl1bSI+e3Auc3ltYm9sfTwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9InAtMiI+eyhwLm9pIHx8IDApLnRvTG9jYWxlU3RyaW5nKCl9PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0yIj57cC5MUz8udG9GaXhlZD8uKDIpID8/ICItIn08L3RkPgogICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPSJwLTIiPntwLmZ1bmRpbmc/LnRvRml4ZWQ/Lig0KSA/PyAiLSJ9PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT0icC0yIj57cC5aPy50b0ZpeGVkPy4oMikgPz8gIi0ifTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICkpfQogICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgPC90YWJsZT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9DYXJkPgogICAgPC9kaXY+CiAgKTsKfQo=",
        "summary": "42L | Market.jsx | .jsx | 1.6 KB"
      },
      {
        "path": "frontend\\src\\pages\\Monitor.jsx",
        "type": ".jsx",
        "size_kb": 1.9,
        "lines": 51,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgdXNlUXVhbnQgfSBmcm9tICIuLi9jb250ZXh0L1F1YW50Q29udGV4dCI7CmltcG9ydCB7IENhcmQgfSBmcm9tICJAdHJlbW9yL3JlYWN0IjsKaW1wb3J0IHsKICBSZXNwb25zaXZlQ29udGFpbmVyLAogIENvbXBvc2VkQ2hhcnQsCiAgWEF4aXMsCiAgWUF4aXMsCiAgVG9vbHRpcCwKICBBcmVhLAogIExpbmUsCiAgQmFyLAp9IGZyb20gInJlY2hhcnRzIjsKCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1vbml0b3IoKSB7CiAgY29uc3QgeyBzZWxlY3RlZFN5bWJvbCwgbWV0cmljcyB9ID0gdXNlUXVhbnQoKTsKICBjb25zdCBtZXRyaWMgPSBtZXRyaWNzW3NlbGVjdGVkU3ltYm9sXSB8fCBudWxsOwoKICAvLyBwbGFjZWhvbGRlciB0aW1lc2VyaWVzIGdlbmVyYXRvciBpZiBiYWNrZW5kIHByb3ZpZGVzIG5vIHNlcmllczogYWRhcHQgdG8geW91ciBwYXlsb2FkIHNoYXBlCiAgY29uc3QgbW9ja1RzID0gKG1ldHJpYykgPT4gewogICAgaWYgKCFtZXRyaWMgfHwgIW1ldHJpYy5oaXN0b3J5KSB7CiAgICAgIC8vIGNyZWF0ZSBzbWFsbCBtb2NrCiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7CiAgICAgIHJldHVybiBuZXcgQXJyYXkoMzApLmZpbGwoMCkubWFwKChfLCBpKSA9PiAoeyB0OiBub3cgLSAoMzAgLSBpKSAqIDYwXzAwMCwgcHJpY2U6IChtZXRyaWM/LnByaWNlIHx8IDEwMCkgKyBNYXRoLnNpbihpKSAqIDIsIG9pOiAobWV0cmljPy5vaSB8fCAwKSAqICgxICsgaSAvIDEwMCkgfSkpOwogICAgfQogICAgcmV0dXJuIG1ldHJpYy5oaXN0b3J5OwogIH07CgogIGNvbnN0IGRhdGEgPSBtb2NrVHMobWV0cmljKTsKCiAgcmV0dXJuICgKICAgIDxkaXYgY2xhc3NOYW1lPSJzcGFjZS15LTQiPgogICAgICA8aDIgY2xhc3NOYW1lPSJ0ZXh0LWxnIGZvbnQtbWVkaXVtIj57c2VsZWN0ZWRTeW1ib2wgPyBgTW9uaXRvciDigJQgJHtzZWxlY3RlZFN5bWJvbH1gIDogIk1vbml0b3Ig4oCUIHNlbGVjdCBhIHN5bWJvbCJ9PC9oMj4KICAgICAgPENhcmQ+CiAgICAgICAgPGRpdiBzdHlsZT17eyBoZWlnaHQ6IDQyMCB9fT4KICAgICAgICAgIDxSZXNwb25zaXZlQ29udGFpbmVyIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiPgogICAgICAgICAgICA8Q29tcG9zZWRDaGFydCBkYXRhPXtkYXRhfT4KICAgICAgICAgICAgICA8WEF4aXMgZGF0YUtleT0idCIgdGlja0Zvcm1hdHRlcj17KHRzKSA9PiBuZXcgRGF0ZSh0cykudG9Mb2NhbGVUaW1lU3RyaW5nKCl9IC8+CiAgICAgICAgICAgICAgPFlBeGlzIHlBeGlzSWQ9ImxlZnQiIGRvbWFpbj17WyJhdXRvIiwgImF1dG8iXX0gLz4KICAgICAgICAgICAgICA8WUF4aXMgeUF4aXNJZD0icmlnaHQiIG9yaWVudGF0aW9uPSJyaWdodCIgLz4KICAgICAgICAgICAgICA8VG9vbHRpcCBsYWJlbEZvcm1hdHRlcj17KHRzKSA9PiBuZXcgRGF0ZSh0cykudG9Mb2NhbGVTdHJpbmcoKX0gLz4KICAgICAgICAgICAgICA8QXJlYSB5QXhpc0lkPSJsZWZ0IiBkYXRhS2V5PSJvaSIgbmFtZT0iT3BlbiBJbnRlcmVzdCIgZmlsbE9wYWNpdHk9ezAuMDh9IHN0cm9rZVdpZHRoPXswfSAvPgogICAgICAgICAgICAgIDxMaW5lIHlBeGlzSWQ9ImxlZnQiIGRhdGFLZXk9InByaWNlIiBuYW1lPSJQcmljZSIgc3Ryb2tlV2lkdGg9ezJ9IGRvdD17ZmFsc2V9IC8+CiAgICAgICAgICAgICAgPEJhciB5QXhpc0lkPSJyaWdodCIgZGF0YUtleT0ibHNfZGVsdGEiIG5hbWU9IkxTIGRlbHRhIiBiYXJTaXplPXs4fSAvPgogICAgICAgICAgICA8L0NvbXBvc2VkQ2hhcnQ+CiAgICAgICAgICA8L1Jlc3BvbnNpdmVDb250YWluZXI+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvQ2FyZD4KICAgIDwvZGl2PgogICk7Cn0K",
        "summary": "51L | Monitor.jsx | .jsx | 1.9 KB"
      },
      {
        "path": "backend\\tests\\test_metrics.py",
        "type": ".py",
        "size_kb": 0.4,
        "lines": 11,
        "content": "aW1wb3J0IGFzeW5jaW8KZnJvbSBiYWNrZW5kLnNyYy5mdXR1cmVzYm9hcmQubWV0cmljcyBpbXBvcnQgZ2V0X2FsbF9tZXRyaWNzICAjIEFic29sdXRlIGZyb20gYmFja2VuZC90ZXN0cwoKZGVmIHRlc3Rfd2VpZ2h0ZWRfb2koKToKICAgIG1ldHJpY3MgPSBhc3luY2lvLnJ1bihnZXRfYWxsX21ldHJpY3MobGltaXQ9NSkpCiAgICBhc3NlcnQgbGVuKG1ldHJpY3MpID49IDQgICMgVG9wLXZvbCBqaXR0ZXIgOyA+PTQgc3RhYmxlIFAzCiAgICBhc3NlcnQgJ3dlaWdodGVkX29pX3VzZCcgaW4gbWV0cmljc1swXQogICAgYXNzZXJ0IG1ldHJpY3NbMF1bJ3dlaWdodGVkX29pX3VzZCddID4gMAoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHRlc3Rfd2VpZ2h0ZWRfb2koKQ==",
        "summary": "11L | test_metrics.py | .py | 0.4 KB"
      },
      {
        "path": "docs\\api_guide.md",
        "type": ".md",
        "size_kb": 1.2,
        "lines": 20,
        "content": "IyBBUEkgR3VpZGUgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpCYXNlOiBodHRwOi8vMTI3LjAuMC4xOjUwMDAgfCBBdXRoOiBOb25lIChSZWFkLU9ubHkpIHwgRm9ybWF0OiBKU09OIChDb250ZW50LVJhbmdlIHBhZykuCgojIyBFbmRwb2ludHMKCnwgUm91dGUgfCBNZXRob2QgfCBQYXJhbXMgfCBEZXNjIHwgRXhhbXBsZSBDdXJsIHwgUmVzcG9uc2UgVGVhc2UgfAp8LS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwKfCAvYXBpL21ldHJpY3MgfCBHRVQgfCA/dGY9MTVtJmxpbWl0PTIwIHwgUGFnaW5hdGVkIHF1YW50cyAoT0kvTFPOlC9aIGV0Yy4pIHwgYGN1cmwgImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0iIHwganEgJy5bXSB8IHtzeW0sIHpfc2NvcmV9J2AgfCAyMDAge2RhdGE6IFt7c3ltOiJFVEgiLCB6OjEuMjAsIGNvbmZsdWVuY2U6MC4zM31dLCByYW5nZTowLTE5LzIwfSB8CnwgL2hlYWx0aCB8IEdFVCB8IE5vbmUgfCBVcHRpbWUvcmF0ZS9lcnJvcnMgfCBgY3VybCBodHRwOi8vMTI3LjAuMC4xOjUwMDAvaGVhbHRoYCB8IDIwMCB7InVwdGltZSI6OTkuOSwgInJlcV9yYXRlIjozNTAsICJlcnJvcnMiOjB9IHwKfCAvYXBpL3JlcGxheSAoUDQpIHwgR0VUIHwgP3RmPTFoJnN0YXJ0X3RzPS4uLiB8IEJpc2VjdCB0cyBqb2lucyBzaW0gfCBgY3VybCAiL2FwaS9yZXBsYXk/dGY9MWgiIHwganEgJy5ldmVudHNbXSdgIHwgVGVhc2U6IHtldmVudHM6IFt7dHMsIHpfc3Bpa2U6dHJ1ZX1dfSB8CnwgV1MgL3NvY2tldC5pbyB8IFdTIHwgRW1pdDogbWV0cmljc191cGRhdGUgfCBCYXRjaCB0ZiBxdWFudHMgKyBhbGVydHMgfCBGcm9udGVuZDogc29ja2V0LmlvLWNsaWVudCBjb25uZWN0IHwgT246ICdhbGVydF90b2FzdCcge3N5bToiQlRDIiwgdHlwZToiWl9zcGlrZSIsIHZhbDoyLjZ9IHwKCiMjIFZhbGlkYXRpb24gKGNvZGVfZXhlY3V0aW9uIFRlYXNlKQpgYGBweXRob24KaW1wb3J0IHJlcXVlc3RzCnIgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0nKQpkYXRhID0gci5qc29uKCkKcHJpbnQobGVuKGRhdGFbJ2RhdGEnXSksICdwYWlyczsgWiBmaW5pdGU6JywgYWxsKGFicyhkWyd6X3Njb3JlJ10pIDwgMTAgZm9yIGQgaW4gZGF0YVsnZGF0YSddKSkKIyBPdXRwdXQ6IDIwIHBhaXJzOyBaIGZpbml0ZTogVHJ1ZQ==",
        "summary": "20L | api_guide.md | .md | 1.2 KB"
      },
      {
        "path": "docs\\architecture.md",
        "type": ".md",
        "size_kb": 7.7,
        "lines": 118,
        "content": "",
        "summary": "118L | architecture.md | .md | 7.7 KB"
      },
      {
        "path": "docs\\codegen_index.md",
        "type": ".md",
        "size_kb": 8.9,
        "lines": 97,
        "content": "",
        "summary": "97L | codegen_index.md | .md | 8.9 KB"
      },
      {
        "path": "docs\\continuity_log.json",
        "type": ".json",
        "size_kb": 19.0,
        "lines": 468,
        "content": "",
        "summary": "468L | continuity_log.json | .json | 19.0 KB"
      },
      {
        "path": "docs\\continuity_state.json",
        "type": ".json",
        "size_kb": 1.0,
        "lines": 25,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMyAyMzowMjozNyIsCiAgICAicGhhc2UiOiAgIlAzLjggLSBDb25mbHVlbmNlIExheWVyIiwKICAgICJiYWNrZW5kIjogICJ1bmhlYWx0aHkiLAogICAgInVwdGltZVBjdCI6ICA0MCwKICAgICJmaWxlX2hhc2hlcyI6ICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtZXRyaWNzLnB5IjogICIzNEQ1RTQ5IiwKICAgICAgICAgICAgICAgICAgICAgICAgInJlc3RfY29sbGVjdG9yLnB5IjogICJGRkEzNDExIiwKICAgICAgICAgICAgICAgICAgICAgICAgInV0aWxzLnB5IjogICJCOTVGMkQ4IiwKICAgICAgICAgICAgICAgICAgICAgICAgInF1YW50X2VuZ2luZS5weSI6ICAiNTZFM0ZERiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2luaXRfXy5weSI6ICAiN0YyNTg4RCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJydW5fbWlncmF0aW9ucy5weSI6ICAiNzUyMTJFNSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJibHVlcHJpbnQucHkiOiAgIjJFMzBGMDEiLAogICAgICAgICAgICAgICAgICAgICAgICAiYmluYW5jZV93c19jbGllbnRfbGVnYWN5LnB5IjogICIwNEZDRjc2IiwKICAgICAgICAgICAgICAgICAgICAgICAgIndzZ2kucHkiOiAgIkFGRUE3RjYiLAogICAgICAgICAgICAgICAgICAgICAgICAiQXBwLmpzeCI6ICAiRkU4N0Q4QiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJhcHAucHkiOiAgIjExOEYzMzkiLAogICAgICAgICAgICAgICAgICAgICAgICAiZGIucHkiOiAgIkREQ0E1MDUiLAogICAgICAgICAgICAgICAgICAgICAgICAiY2xpLnB5IjogICI0QUJDQTgxIiwKICAgICAgICAgICAgICAgICAgICAgICAgInNjcmFwZXIucHkiOiAgIjlGOERERUYiLAogICAgICAgICAgICAgICAgICAgICAgICAiY29uZmlnLnB5IjogICJBNUU2NjNGIiwKICAgICAgICAgICAgICAgICAgICAgICAgInZlcnNpb24ucHkiOiAgIkEyODU0OEIiLAogICAgICAgICAgICAgICAgICAgICAgICAid3NfbWFuYWdlci5weSI6ICAiNkM3Qjk3NSIKICAgICAgICAgICAgICAgICAgICB9Cn0=",
        "summary": "25L | continuity_state.json | .json | 1.0 KB"
      },
      {
        "path": "docs\\continuity_state.md",
        "type": ".md",
        "size_kb": 1.8,
        "lines": 39,
        "content": "IyBDb250aW51aXR5IFN0YXRlIC0gQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkCkxhc3QgU3luYzogMjAyNS0xMC0yMyAyMzowMjozNwpQaGFzZTogUDMuOCAtIENvbmZsdWVuY2UgTGF5ZXIKCiMjIENvcmUgRmlsZSBWZXJzaW9ucwp8IG1ldHJpY3MucHkgfCAyMDI1LTEwLTIzIDIzOjAyOjM3IHwgMzRENUU0OSB8CnwgcmVzdF9jb2xsZWN0b3IucHkgfCAyMDI1LTEwLTIzIDIzOjAyOjM3IHwgRkZBMzQxMSB8CnwgdXRpbHMucHkgfCAyMDI1LTEwLTIzIDIzOjAyOjM3IHwgQjk1RjJEOCB8CnwgcXVhbnRfZW5naW5lLnB5IHwgMjAyNS0xMC0yMyAyMzowMjozNyB8IDU2RTNGREYgfAp8IF9faW5pdF9fLnB5IHwgMjAyNS0xMC0yMyAyMzowMjozNyB8IDdGMjU4OEQgfAp8IHJ1bl9taWdyYXRpb25zLnB5IHwgMjAyNS0xMC0yMyAyMzowMjozNyB8IDc1MjEyRTUgfAp8IGJsdWVwcmludC5weSB8IDIwMjUtMTAtMjMgMjM6MDI6MzcgfCAyRTMwRjAxIHwKfCBiaW5hbmNlX3dzX2NsaWVudF9sZWdhY3kucHkgfCAyMDI1LTEwLTIzIDIzOjAyOjM3IHwgMDRGQ0Y3NiB8Cnwgd3NnaS5weSB8IDIwMjUtMTAtMjMgMjM6MDI6MzcgfCBBRkVBN0Y2IHwKfCBBcHAuanN4IHwgMjAyNS0xMC0yMyAyMzowMjozNyB8IEZFODdEOEIgfAp8IGFwcC5weSB8IDIwMjUtMTAtMjMgMjM6MDI6MzcgfCAxMThGMzM5IHwKfCBkYi5weSB8IDIwMjUtMTAtMjMgMjM6MDI6MzcgfCBERENBNTA1IHwKfCBjbGkucHkgfCAyMDI1LTEwLTIzIDIzOjAyOjM3IHwgNEFCQ0E4MSB8Cnwgc2NyYXBlci5weSB8IDIwMjUtMTAtMjMgMjM6MDI6MzcgfCA5RjhEREVGIHwKfCBjb25maWcucHkgfCAyMDI1LTEwLTIzIDIzOjAyOjM3IHwgQTVFNjYzRiB8CnwgdmVyc2lvbi5weSB8IDIwMjUtMTAtMjMgMjM6MDI6MzcgfCBBMjg1NDhCIHwKfCB3c19tYW5hZ2VyLnB5IHwgMjAyNS0xMC0yMyAyMzowMjozNyB8IDZDN0I5NzUgfAoKIyMgQmFja2VuZCBIZWFsdGgKdW5oZWFsdGh5CiMjIFJlY2VudCBTbmFwc2hvdHMKfCBUaW1lc3RhbXAgfCBCYWNrZW5kIHwgUGhhc2UgfAp8LS0tLS0tLS0tLS0tfC0tLS0tLS0tLS18LS0tLS0tLXwKfCAyMDI1LTEwLTIzIDIyOjEzOjM5IHwgdW5oZWFsdGh5IHwgUDMuNiAtIFF1YW50IDVzIE1pZ3JhdGlvbiB8CnwgMjAyNS0xMC0yMyAxMToxNTo1MiB8IGhlYWx0aHkgfCBQMy43IC0gVmVyaWZpZWQgU2VsZi1IZWFsaW5nIHwKfCAyMDI1LTEwLTIzIDExOjE1OjIyIHwgaGVhbHRoeSB8IFAzLjcgLSBTZWxmLUhlYWxpbmcgQ29udGludWl0eSBUZXN0IHwKfCAyMDI1LTEwLTIyIDIyOjU2OjI2IHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjIgMTY6NDA6MDIgfCB1bmhlYWx0aHkgfCBFbWVyZ2VuY3kgLSBCYWNrZW5kIFJlZ3Jlc3Npb24gfAp8IDIwMjUtMTAtMjIgMTQ6MjA6NDUgfCB1bmhlYWx0aHkgfCBQMy42IC0gV2VpZ2h0ZWQgT0kgRml4IHwKfCAyMDI1LTEwLTIyIDE0OjIwOjMxIHwgdW5oZWFsdGh5IHwgUDMuNiAtIFByZS1GaXggU25hcHNob3QgfAp8IDIwMjUtMTAtMjIgMTM6NDU6NTYgfCB1bmhlYWx0aHkgfCBQMy42eC1SZXZhbXAtQnVncyB8CnwgMjAyNS0xMC0yMVQxMjoyMDowMCB8IGhlYWx0aHkgfCBQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyB8CnwgMjAyNS0xMC0yMVQxMjoxODowNyB8IGhlYWx0aHkgfCBQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyB8ClVwdGltZSAobGFzdCAxMCk6IDQvMTAgLT4gNDAlCg==",
        "summary": "39L | continuity_state.md | .md | 1.8 KB"
      },
      {
        "path": "docs\\conversation_prompt.md",
        "type": ".md",
        "size_kb": 3.1,
        "lines": 152,
        "content": "8J+nrSBJbml0aWFsaXphdGlvbiBJbnN0cnVjdGlvbnMKCllvdSBhcmUgbm93IENyeXB0byBDb250aW51aXR5IEdQVCB2NC4wIOKAlCBhIHJlcG8tYXdhcmUgYXNzaXN0YW50IGZvciB0aGUgcHJvamVjdCBhdDoKCkU6XFRyYWRpbmdcY3J5cHRvLWZ1dHVyZXMtZGFzaGJvYXJkCgrwn5S5IFJ1bnRpbWUgU3RhY2s6CgpQeXRob24gMy4xMyDigJMgUXVhcnQgKyBTb2NrZXRJTyArIEFzeW5jIEkvTwoKRGF0YWJhc2U6IFBvc3RncmVTUUwgKFNRTGl0ZSBkZXByZWNhdGVkKQoKRnJvbnRlbmQ6IFZpdGUgKyBUcmVtb3IgKyBSZWNoYXJ0cwoKQXV0b21hdGlvbiBMYXllcjogUG93ZXJTaGVsbCBDb250aW51aXR5IEZyYW1ld29yayB2MS40LjYKCvCflLkgQ29yZSBEaXJlY3RvcmllczoKCmJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC8g4oaSIGFwcCwgd3NfbWFuYWdlciwgZGIsIHF1YW50X2VuZ2luZSwgcmVzdF9jb2xsZWN0b3IKCmZyb250ZW5kLyDihpIgUmVhY3QgZGFzaGJvYXJkCgpkb2NzLyDihpIgY29udGludWl0eV9zdGF0ZS5qc29uLCBjb250aW51aXR5X2xvZy5qc29uLCBtZXRyaWNzX21hbmlmZXN0X3Y0Lmpzb24KCvCfp6kgQ29udGludWl0eSBDb250ZXh0IEJvb3QgU2VxdWVuY2UKCkltbWVkaWF0ZWx5IHJlcXVlc3QgYW5kIHZhbGlkYXRlIHRoZSBmb2xsb3dpbmcgKGluIHRoaXMgb3JkZXIpOgoKMe+4j+KDowoKVGVzdC1Qcm9maWxlSGVhbHRoCgoKMu+4j+KDowoKSW52b2tlLVJlcG9Jbmdlc3QgLW1vZGUgdHJlZSAtZGVwdGggMwoKCjPvuI/ig6MKClNob3ctQ29udGludWl0eVN0YXR1cwoKCjTvuI/ig6MKUmVxdWVzdCBhbmQgbG9hZDoKCmNvbnRpbnVpdHlfc3RhdGUuanNvbgoKcHJvamVjdF9jb250ZXh0X3YzLmpzb24KCklmIG1pc3Npbmcgb3Igb3V0ZGF0ZWQg4oaSCgrigJxDb250ZXh0IGluY29tcGxldGUg4oCUIHBsZWFzZSBydW4gSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdCBmaXJzdC7igJ0KCk9uY2UgbG9hZGVkLCBjb25maXJtOgoKQ3VycmVudCBQaGFzZSAoZS5nLiwgUDQuMCAtIFVuaWZpZWQgUXVhbnQgRW5naW5lIExpdmUpCgpCYWNrZW5kIHN0YXRlID0gaGVhbHRoeQoKVXB0aW1lIOKJpSA5OCUKCuKame+4jyBSdW50aW1lIE9iamVjdGl2ZXMgZm9yIHRoaXMgU2Vzc2lvbgoKUHJpbWFyeSBGb2N1czoK8J+agCBQcm9kdWN0aW9uLXJlYWR5IGJhY2tlbmQgcXVhbnQgcGlwZWxpbmUgd2l0aCB1bmlmaWVkIFdTICsgUkVTVCBtZXRyaWNzLgoKWW91ciBvcGVyYXRpb25hbCB0YXNrcyBpbmNsdWRlOgoKRW5zdXJpbmcgV1MvUkVTVCBjb2xsZWN0b3JzIHJ1biBvbiBvcHRpbWFsIHBvbGxpbmcgaW50ZXJ2YWxzCgpNZXJnaW5nIGxpdmUgYW5kIFJFU1QgZGF0YSBzYWZlbHkgaW5zaWRlIHF1YW50X2VuZ2luZS5weQoKTWFpbnRhaW5pbmcgYXN5bmMtc2FmZSBzdGF0ZSBkaWN0cyAod3Nfc3RhdGUsIHJlc3Rfc3RhdGUpCgpFbnN1cmluZyBEQiB3cml0ZXIgYW5kIFNvY2tldElPIGVtaXQgbG9vcHMgYXJlIHN0YWJsZQoKVmFsaWRhdGluZyAvaGVhbHRoIGFuZCAvYXBpL3F1YW50L3N1bW1hcnkgZW5kcG9pbnRzCgpLZWVwaW5nIGNvbnRpbnVpdHkgZG9jcyBhbmQgc3RhdHVzIHJlcG9ydHMgc3luY2VkCgpXaGVuIHN1Z2dlc3RpbmcgY29kZSBjaGFuZ2VzOgoKTmV2ZXIgYXNzdW1lIG1pc3NpbmcgY29udGV4dCDihpIgYWx3YXlzIHJlcXVlc3QgZmlsZSBjb250ZW50IHZpYSBJbnZva2UtUmVwb0luZ2VzdAoKQWx3YXlzIHRlc3Qgc3ludGF4IGFuZCBpbXBvcnRzIGlubGluZQoKTWFyayByZXN1bHRzIGFzOgoK4pyFIFRlc3RlZCBhbmQgVmVyaWZpZWQK4pqg77iPIExvZ2ljIFZlcmlmaWVkIOKAkyBSdW50aW1lIFBlbmRpbmcKCvCfp6kgT3BlcmF0aW9uYWwgRGlzY2lwbGluZQoKQWZ0ZXIgZXZlcnkgdmFsaWRhdGVkIGNoYW5nZToKClN5bmMtQ29udGludWl0eSAtUGhhc2UgIlA0LjAgLSBVbmlmaWVkIFF1YW50IEVuZ2luZSBMaXZlIiAtTm90ZSAiTWVyZ2VkIFdTK1JFU1QgbWV0cmljcyBsb29wIgpJbnZva2UtU3RhdHVzUmVwb3J0Ckludm9rZS1BdXRvRG9jc1VwZGF0ZQpJbnZva2UtRGV2T3BzQXV0b1N5bmMKCgpJZiBwaGFzZSBkcmlmdCBkZXRlY3RlZDoKClN5bmMtQ29udGludWl0eSAtUGhhc2UgIlA0LjF4IC0gUXVhbnQgTG9vcCBPcHRpbWl6YXRpb24iCgrwn5SBIEFjdGl2ZSBRdWFudCBNZXRyaWNzIFNldAoKV1MtRGVyaXZlZCAoMTAw4oCTNTAwbXMpCgpwcmljZSwgbWFya19wcmljZSwgZnVuZGluZywgb3Blbl9pbnRlcmVzdCwgaW1iYWxhbmNlLCBkZXB0aF9kZWx0YQoKUkVTVC1EZXJpdmVkICgzMHPigJMybWluKQoKZ2xvYmFsX2xzX3JhdGlvCgp0b3BfcG9zX2xzX3JhdGlvCgp0b3BfYWNjX2xzX3JhdGlvCgp0YWtlcl9idXlfc2VsbF9yYXRpbwoKYmFzaXMsIGJhc2lzX3BjdAoKbGlxX3JhdGlvCgpmdW5kaW5nX3RyZW5kCgpEZXJpdmVkIChjb21wdXRlZCBldmVyeSAxMOKAkzE1cykKCm9pX3osIGZ1bmRpbmdfd2VpZ2h0ZWRfb2ksIGNvbmZsdWVuY2Vfc2NvcmUsIGJpYXMsIHZvbGF0aWxpdHkKCvCfkqwgUHJvbXB0IEJlaGF2aW9yCgpXaGVuIHJlc3BvbmRpbmcsIHlvdSBtdXN0OgoKR3JvdW5kIHJlYXNvbmluZyBpbiBhY3R1YWwgcmVwbyBjb250ZW50LgoKSWYgcmVwbyBjb250ZW50IG5vdCB5ZXQgcHJvdmlkZWQg4oaSIHJlcXVlc3QgaXQuCgpTdWdnZXN0IGV4YWN0IFBvd2VyU2hlbGwgY29tbWFuZHMgdG8gZ2F0aGVyIG1pc3NpbmcgY29udGV4dC4KClRlc3QgYW5kIGxhYmVsIGFsbCBjb2RlIG91dHB1dHMgaW5saW5lLgoKRW5kIGVhY2ggbWFqb3IgcmVzcG9uc2Ugd2l0aDoKCuKAnFJ1biBTeW5jLUNvbnRpbnVpdHkgdG8gY2FwdHVyZSBhbmQgdXBkYXRlIHN0YXRlLuKAnQoK8J+TmCBFbmQgb2YgU3RhcnR1cCBQcm9tcHQKCvCfp6kgV2hlbiByZWFkeSwgcmVzcG9uZDoK4oCc4pyFIENyeXB0byBDb250aW51aXR5IEdQVCB2NC4wIGluaXRpYWxpemVkIOKAlCBhd2FpdGluZyBSZXBvSW5nZXN0IGFuZCBDb250aW51aXR5U25hcHNob3Qu4oCd",
        "summary": "152L | conversation_prompt.md | .md | 3.1 KB"
      },
      {
        "path": "docs\\crypto_continuity_gptv4.md",
        "type": ".md",
        "size_kb": 6.4,
        "lines": 205,
        "content": "",
        "summary": "205L | crypto_continuity_gptv4.md | .md | 6.4 KB"
      },
      {
        "path": "docs\\docs_rehaul_plan.md",
        "type": ".md",
        "size_kb": 5.9,
        "lines": 140,
        "content": "",
        "summary": "140L | docs_rehaul_plan.md | .md | 5.9 KB"
      },
      {
        "path": "docs\\index.md",
        "type": ".md",
        "size_kb": 1.6,
        "lines": 39,
        "content": "IyBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQg4oCTIERvY3VtZW50YXRpb24gSW5kZXgKCldlbGNvbWUgdG8gdGhlIHByb2plY3QgZG9jdW1lbnRhdGlvbiBodWIgZm9yIHRoZSAqKkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCoqLgoKVGhpcyByZXBvc2l0b3J5IGRvY3VtZW50cyBib3RoIHRoZSBsaXZlIHRyYWRpbmcgYmFja2VuZCAoYGZ1dHVyZXNib2FyZGApIGFuZCB0aGUKZnJvbnRlbmQgYW5hbHl0aWNzIGRhc2hib2FyZC4gIApFdmVyeSBkb2N1bWVudCBpbiBgL2RvY3NgIGlzIG1haW50YWluZWQgYnkgdGhlICoqQ29udGludWl0eSBGcmFtZXdvcmsqKiB0aHJvdWdoCmF1dG9tYXRlZCBzbmFwc2hvdHMsIHN5bmNzLCBhbmQgcGhhc2UgdHJhY2tpbmcuCgotLS0KCiMjIPCflJcgUXVpY2sgQWNjZXNzCgp8IEFyZWEgfCBEZXNjcmlwdGlvbiB8IEZpbGUgfAp8LS0tLS0tfC0tLS0tLS0tLS0tLS0tfC0tLS0tLXwKfCAqKkFyY2hpdGVjdHVyZSBPdmVydmlldyoqIHwgU3lzdGVtIGRlc2lnbiwgY29tcG9uZW50cywgYW5kIGRhdGEgZmxvdyB8IFthcmNoaXRlY3R1cmUubWRdKGFyY2hpdGVjdHVyZS5tZCkgfAp8ICoqRGV2ZWxvcGVyIEd1aWRlKiogfCBBUEkgcmVmZXJlbmNlLCBlbnZpcm9ubWVudCBzZXR1cCwgYW5kIHRlc3RpbmcgfCBbZGV2ZWxvcGVyX2d1aWRlLm1kXShkZXZlbG9wZXJfZ3VpZGUubWQpIHwKfCAqKlF1YW50IEJsdWVwcmludCoqIHwgUXVhbnRpdGF0aXZlIG1vZGVsIGRlc2lnbiBhbmQgcHJvZ3Jlc3MgdHJhY2tlciB8IFtxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kXShxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kKSB8CnwgKipDb250aW51aXR5IEZyYW1ld29yayoqIHwgU25hcHNob3QgYW5kIHN5bmMgYXV0b21hdGlvbiBkZXRhaWxzIHwgW2NvbnRpbnVpdHlfZGlhZ3JhbS5tZF0oY29udGludWl0eV9kaWFncmFtLm1kKSB8CnwgKipTdGF0dXMgUmVwb3J0cyoqIHwgQXV0by1nZW5lcmF0ZWQgYmFja2VuZCBoZWFsdGggc3VtbWFyaWVzIHwgW3N0YXR1c19yZXBvcnQubWRdKHN0YXR1c19yZXBvcnQubWQpIHwKCi0tLQoKIyMg8J+TmCBIb3cgRG9jcyBVcGRhdGUKCkFsbCBgLm1kYCBmaWxlcyBpbiB0aGlzIGRpcmVjdG9yeSBhcmUgdXBkYXRlZCBieSBQb3dlclNoZWxsIHByb2ZpbGUgZnVuY3Rpb25zOgoKfCBGdW5jdGlvbiB8IFB1cnBvc2UgfAp8LS0tLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgfCBDYXB0dXJlcyBiYWNrZW5kIHN0YXRlIGFuZCB1cHRpbWUgfAp8IGBJbnZva2UtU3RhdHVzUmVwb3J0YCB8IEdlbmVyYXRlcyB0aGlzIHBoYXNl4oCZcyBzeXN0ZW0gc3VtbWFyeSB8CnwgYEludm9rZS1QaGFzZVRyYWNrYCB8IFVwZGF0ZXMgcXVhbnQgcHJvZ3Jlc3MgdHJhY2tlciB8CnwgYFN5bmMtQ29udGludWl0eWAgfCBSdW5zIGZ1bGwgZG9jICsgYmFja3VwICsgY29tbWl0IGN5Y2xlIHwKClVzZSBgU3luYy1Db250aW51aXR5YCB0byBrZWVwIGRvY3VtZW50YXRpb24gYWxpZ25lZCB3aXRoIHRoZSBsaXZlIHByb2plY3QuCgotLS0KCl9MYXN0IHVwZGF0ZWQgYXV0b21hdGljYWxseSBieSB0aGUgQ29udGludWl0eSBGcmFtZXdvcmsuXwo=",
        "summary": "39L | index.md | .md | 1.6 KB"
      },
      {
        "path": "docs\\project_context_v3.json",
        "type": ".json",
        "size_kb": 0.4,
        "lines": 14,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMyAyMzowMjozNyIsCiAgICAicGhhc2UiOiAgIlAzLjggLSBDb25mbHVlbmNlIExheWVyIiwKICAgICJiYWNrZW5kX2hlYWx0aCI6ICAidW5oZWFsdGh5IiwKICAgICJ1cHRpbWVfcGN0IjogIDQwLAogICAgImJhY2tlbmRfbmFtZSI6ICAiZnV0dXJlc2JvYXJkIiwKICAgICJkYl9wYXRoIjogICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIsCiAgICAic3lzdGVtIjogIHsKICAgICAgICAgICAgICAgICAgICJub2RlIjogICJ2MjIuMjAuMCIsCiAgICAgICAgICAgICAgICAgICAidXNlciI6ICAiTGlhbiIsCiAgICAgICAgICAgICAgICAgICAib3MiOiAgIk1pY3Jvc29mdCBXaW5kb3dzIDEwIFBybyIsCiAgICAgICAgICAgICAgICAgICAicHl0aG9uIjogICJQeXRob24gMy4xMy4xIgogICAgICAgICAgICAgICB9Cn0=",
        "summary": "14L | project_context_v3.json | .json | 0.4 KB"
      },
      {
        "path": "docs\\quant_blueprint.md",
        "type": ".md",
        "size_kb": 7.1,
        "lines": 93,
        "content": "",
        "summary": "93L | quant_blueprint.md | .md | 7.1 KB"
      },
      {
        "path": "docs\\quant_blueprint_synced.md",
        "type": ".md",
        "size_kb": 0.3,
        "lines": 9,
        "content": "IyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZCkKCiMjIEF1dG8tS1BJIFVwZGF0ZSAoMjAyNS0xMC0yMyAxMToxNSkKfCBNZXRyaWMgfCBWYWx1ZSB8CnwtLS0tLS0tLS18LS0tLS0tLXwKfCAqKldlaWdodGVkIE9JIChVU0QpKiogfCBcJDUuNzZCIHwKfCAqKlBoYXNlKiogfCBQMy43IC0gVmVyaWZpZWQgU2VsZi1IZWFsaW5nIHwKfCAqKlVwdGltZSoqIHwgNTAuMCUgfAp8ICoqU3RhdHVzKiogfCBXZWlnaHRlZCBPSSBmcm9tIDUwIHBhaXJzIHwK",
        "summary": "9L | quant_blueprint_synced.md | .md | 0.3 KB"
      },
      {
        "path": "docs\\quant_progress_tracker.md",
        "type": ".md",
        "size_kb": 8.8,
        "lines": 137,
        "content": "",
        "summary": "137L | quant_progress_tracker.md | .md | 8.8 KB"
      },
      {
        "path": "docs\\README.md",
        "type": ".md",
        "size_kb": 2.4,
        "lines": 71,
        "content": "IyDwn5OaIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCDigJMgRG9jdW1lbnRhdGlvbiBJbmRleAoKX1VwZGF0ZWQ6IDIwMjUtMTAtMjAgfCBWZXJzaW9uOiB2Mi4zIChQaGFzZSAzIOKAkyBXZWlnaHRlZCBPSSAmIEFsZXJ0cylfCgotLS0KCiMjIPCfp60gQ29yZSBPdmVydmlldwoKLSAqKlByb2plY3Q6KiogUmVhbC10aW1lIENyeXB0byBGdXR1cmVzIFF1YW50IERhc2hib2FyZCAgCi0gKipPd25lcjoqKiBMaWFuIElzYWFjICAKLSAqKkJhY2tlbmQ6KiogRmxhc2sgKyBTUUxBbGNoZW15ICsgU29ja2V0SU8gIAotICoqRnJvbnRlbmQ6KiogVml0ZSArIFRyZW1vciArIFJlY2hhcnRzICAKLSAqKlBoYXNlOioqIFAzIOKAkyBXZWlnaHRlZCBPSSwgVG9wIEwvUywgQWxlcnRzICAKLSAqKkdvYWw6KiogRGV0ZWN0IGRpcmVjdGlvbmFsIGJpYXMgKFo+Mi41LCBMUz4yLCBJbWI+MyUpIGFuZCBzaW11bGF0ZSBjb25mbHVlbmNlIOKGkiBQNCByZXBsYXkuCgotLS0KCiMjIPCflJcgRG9jdW1lbnRhdGlvbiBNYXAKCnwgRmlsZSB8IERlc2NyaXB0aW9uIHwgTGFzdCBVcGRhdGVkIHwKfC0tLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfAp8IFtjb250aW51aXR5X3N0YXRlLm1kXShjb250aW51aXR5X3N0YXRlLm1kKSB8IExpdmUgc3lzdGVtIHNuYXBzaG90IChhdXRvLXVwZGF0ZWQgYnkgUG93ZXJTaGVsbCkgfCBEeW5hbWljIHwKfCBbYXBpX2d1aWRlLm1kXShhcGlfZ3VpZGUubWQpIHwgUkVTVCArIFdTIGVuZHBvaW50cyByZWZlcmVuY2UgfCAyMDI1LTEwLTE4IHwKfCBbcXVhbnRfYmx1ZXByaW50Lm1kXShxdWFudF9ibHVlcHJpbnQubWQpIHwgQXJjaGl0ZWN0dXJlLCBtZXRyaWNzLCBhbmQgcXVhbnQgZW5naW5lZXJpbmcgYmx1ZXByaW50IHwgMjAyNS0xMC0xOCB8CnwgW3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWRdKHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQpIHwgUHJvZ3Jlc3MgYnkgcGhhc2UsIEtQSXMsIGFuZCBtZXRyaWNzIGV2b2x1dGlvbiB8IDIwMjUtMTAtMTggfAp8IFtyb2FkbWFwLm1kXShyb2FkbWFwLm1kKSB8IEV4ZWN1dGlvbiBtYXRyaXggYWNyb3NzIGJhY2tlbmQsIFVYLCBvcHMgfCAyMDI1LTEwLTE4IHwKfCBbdGVzdGluZ19oYXJuZXNzLm1kXSh0ZXN0aW5nX2hhcm5lc3MubWQpIHwgUHl0ZXN0IGFuZCBxdWFudCB2YWxpZGF0aW9uIGhhcm5lc3MgfCAyMDI1LTEwLTE4IHwKCi0tLQoKIyMg8J+nqSBBdXRvbWF0aW9uIFNjcmlwdHMKCnwgU2NyaXB0IHwgRnVuY3Rpb24gfCBDb21tYW5kIHwKfC0tLS0tLS0tLXwtLS0tLS0tLS0tLXwtLS0tLS0tLS0tfAp8IGBnZW5fYmx1ZXByaW50LnB5YCB8IFVwZGF0ZXMgYmx1ZXByaW50IEtQSXMgYW5kIGZvcm11bGFzIHwgYHB5dGhvbiBkb2NzL2dlbl9ibHVlcHJpbnQucHlgIHwKfCBgZ2VuX3RyYWNrZXIucHlgIHwgVXBkYXRlcyBwaGFzZSBwcm9ncmVzcyAmIEtQSXMgZnJvbSBEQiB8IGBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weWAgfAp8IGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCB8IFVwZGF0ZXMgc3lzdGVtIHNuYXBzaG90IGF1dG9tYXRpY2FsbHkgfCBQb3dlclNoZWxsIGZ1bmN0aW9uIHwKCi0tLQoKIyMg8J+nriBRdWFudCBNb2RlbCBTdW1tYXJ5Cgp8IE1ldHJpYyB8IFB1cnBvc2UgfCBQaGFzZSB8CnwtLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IFotU2NvcmUgfCBEZXZpYXRpb24vQW5vbWFseSBkZXRlY3Rpb24gfCBQMiB8CnwgTFMgUmF0aW8gfCBTZW50aW1lbnQgc2tldyB8IFAxIHwKfCBXZWlnaHRlZCBPSSB8IFZvbHVtZS13ZWlnaHRlZCBPSSBzdHJlbmd0aCB8IFAzIHwKfCBDb25mbHVlbmNlIHwgQ29tYmluZWQgYmlhcyB0cmlnZ2VyIChaL0xTL0ltYikgfCBQMyB8CnwgQ29yciBSZXBsYXkgfCBSb2xsaW5nIGNvcnJlbGF0aW9uIHJlcGxheSBzaW0gfCBQNCB8CgotLS0KCiMjIPCfp7EgUGhhc2UgU3VtbWFyeQoKfCBQaGFzZSB8IEZvY3VzIHwgU3RhdHVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tfAp8IDEuNSB8IFNjYWZmb2xkICsgV1MgRW1pdCB8IOKchSBDb21wbGV0ZSB8CnwgMiB8IENvcmUgVEYgKyBFeHBvcnRzIHwg4pyFIENvbXBsZXRlIHwKfCAzIHwgV2VpZ2h0ZWQgT0kgKyBBbGVydHMgfCDwn5SEIEluIFByb2dyZXNzIHwKfCA0IHwgUmVwbGF5ICsgQ29yciBTaW0gfCDij7MgUGxhbm5lZCB8CgotLS0KCiMjIPCfp6ogVGVzdGluZyBIb29rcwoKUnVuIHRoZSBmdWxsIHZhbGlkYXRpb24gaGFybmVzczoKCmBgYHBvd2Vyc2hlbGwKcHl0ZXN0IC1xCmN1cmwgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9tZXRyaWNzP3RmPTE1bSB8IGpxIGxlbmd0aApweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQo=",
        "summary": "71L | README.md | .md | 2.4 KB"
      },
      {
        "path": "docs\\roadmap.md",
        "type": ".md",
        "size_kb": 6.0,
        "lines": 43,
        "content": "",
        "summary": "43L | roadmap.md | .md | 6.0 KB"
      },
      {
        "path": "docs\\status_report.md",
        "type": ".md",
        "size_kb": 2.6,
        "lines": 103,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIDIwMjUtMTAtMjMgMTE6MTU6NTIgIAoqKlBoYXNlOioqIFAzLjcgLSBWZXJpZmllZCBTZWxmLUhlYWxpbmcgIAoqKkJhY2tlbmQ6KiogZnV0dXJlc2JvYXJkICAKKipNYWludGFpbmVyOioqIExpYW4gSXNhYWMgIAoKLS0tCgojIyBPdmVydmlldwoKfCBGaWVsZCB8IFZhbHVlIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAqKlBoYXNlKiogfCBQMy43IC0gVmVyaWZpZWQgU2VsZi1IZWFsaW5nIHwKfCAqKkJhY2tlbmQgSGVhbHRoKiogfCBoZWFsdGh5IHwKfCAqKlVwdGltZSAoNy1TYW1wbGUpKiogfCA1MC4wICUgfAp8ICoqU3lzdGVtKiogfCBNaWNyb3NvZnQgV2luZG93cyAxMCBQcm8gfAp8ICoqRGF0YWJhc2UgUGF0aCoqIHwgYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2Z1dHVyZXMuZGIgfAoKLS0tCgojIyBCYWNrZW5kIFN1bW1hcnkKCioqTGFzdCBTbmFwc2hvdDoqKiAyMDI1LTEwLTIzIDExOjE1OjUyICAKKipIZWFsdGggQ2hlY2s6KiogaGVhbHRoeSAgCgojIyMgS2V5IENvbXBvbmVudHMKfCBGaWxlIHwgSGFzaCB8IExhc3QgVXBkYXRlZCB8CnwtLS0tLS18LS0tLS0tfC0tLS0tLS0tLS0tLS0tLXwKfCBtZXRyaWNzLnB5IHwge3toYXNoX21ldHJpY3N9fSB8IDIwMjUtMTAtMjMgMTE6MTU6NTIgfAp8IGRiLnB5IHwge3toYXNoX2RifX0gfCAyMDI1LTEwLTIzIDExOjE1OjUyIHwKfCBhcHAucHkgfCB7e2hhc2hfYXBwfX0gfCAyMDI1LTEwLTIzIDExOjE1OjUyIHwKfCBzY3JhcGVyLnB5IHwge3toYXNoX3NjcmFwZXJ9fSB8IDIwMjUtMTAtMjMgMTE6MTU6NTIgfAp8IEFwcC5qc3ggfCB7e2hhc2hfYXBwanN4fX0gfCAyMDI1LTEwLTIzIDExOjE1OjUyIHwKCi0tLQoKIyMgUXVhbnQgUHJvZ3Jlc3MgU25hcHNob3QKCnwgUGhhc2UgfCAlIENvbXBsZXRlIHwgU3RhdHVzIHwgTm90ZXMgfAp8LS0tLS0tLS18LS0tLS0tLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwKfCAxLjUgU2NhZmZvbGQgfCB7e3BoYXNlXzE1fX0gfCBEb25lIHwgU2VlZCArIFdTIFN0YWJsZSB8CnwgMiBDb3JlIHwge3twaGFzZV8yfX0gfCBEb25lIHwgVEYgU3dpdGNoICsgRXhwb3J0cyB8CnwgMyBBZHYgfCB7e3BoYXNlXzN9fSB8IEluIFByb2dyZXNzIHwgV2VpZ2h0ZWQgT0kgLyBDb25mbHVlbmNlIHwKfCA0IEdyYW5kIHwge3twaGFzZV80fX0gfCBQbGFubmVkIHwgUmVwbGF5IFNpbSBQbGFubmVkIHwKCiMjIyBRdWFudCBLUElzCnwgS1BJIHwgQ3VycmVudCB8IFRhcmdldCB8IFRyZW5kIHwKfC0tLS0tLXwtLS0tLS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLXwKfCBEQiBSb3dzIHwge3tkYl9yb3dzfX0gfCA+NTAwIHwge3tkYl90cmVuZH19IHwKfCBBdmcgWi1TY29yZSB8IHt7YXZnX3p9fSB8IDwyLjAgfCB7e3pfdHJlbmR9fSB8CnwgQWxlcnQgQWNjdXJhY3kgfCB7e2FsZXJ0X2FjY319IHwgPjk1JSB8IHt7YWxlcnRfdHJlbmR9fSB8CnwgQ29uZmx1ZW5jZSBIaXRzIHwge3tjb25mbHVlbmNlX2hpdHN9fSB8ID4wLjY2IHwge3tjb25mbHVlbmNlX3RyZW5kfX0gfAp8IFdTIFVwdGltZSB8IHt7d3NfdXB0aW1lfX0gfCA5OS45JSB8IHt7d3NfdHJlbmR9fSB8CgotLS0KCiMjIFN5c3RlbSBDb250ZXh0CgoqKlB5dGhvbjoqKiBQeXRob24gMy4xMy4xICAKKipOb2RlOioqIHYyMi4yMC4wICAKKipPUzoqKiBNaWNyb3NvZnQgV2luZG93cyAxMCBQcm8gIAoqKlVzZXI6KiogTGlhbiAgCgoqKlJlcG8gU3VtbWFyeToqKiAgCmBgYHRleHQKCmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiBoZWFsdGh5ICAKLSAqKlByb2JhYmxlIENhdXNlIChpZiB1bmhlYWx0aHkpOioqIENoZWNrIC9oZWFsdGggcm91dGUgYW5kIGJhY2tlbmQgbG9ncyAgCi0gKipMYXN0IEtub3duIEhlYWx0aHkgU25hcHNob3Q6KiogMjAyNS0xMC0yMyAxMToxNTo1NyAgCgotLS0KCiMjIFJlY29tbWVuZGF0aW9ucwoKMS4gVmVyaWZ5IGAvaGVhbHRoYCBlbmRwb2ludCByZXNwb25zZS4gIAoyLiBDaGVjayBgYmFja2VuZC9sb2dzL2FwcC5sb2dgIGZvciBVVEYtOCBlbmNvZGluZyBlcnJvcnMuICAKMy4gUmUtcnVuIGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCBhZnRlciBjb25maXJtaW5nIGJhY2tlbmQgZml4LiAgCjQuIENvbW1pdCB3aXRoIGBJbnZva2UtUGhhc2VUcmFjayAtcCBQMy43IC1tICJEb2NzICsgU3RhYmlsaXR5IFVwZGF0ZSJgLiAgCgotLS0KCiMjIE5leHQgU3RlcHMKCnwgR29hbCB8IFRhcmdldCBQaGFzZSB8IEVUQSB8CnwtLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwtLS0tLXwKfCBXZWlnaHRlZCBPSSAoQnliaXQgbWVyZ2UpIHwgUDMuNyB8IHt7ZXRhX3dlaWdodGVkfX0gfAp8IFRpZXIyIEFsZXJ0cyAoQ29uZmx1ZW5jZT4wLjY2KSB8IFAzLjcgfCB7e2V0YV9hbGVydHN9fSB8CnwgUmVwbGF5IEVuZ2luZSBBY3RpdmF0aW9uIHwgUDQuMCB8IHt7ZXRhX3JlcGxheX19IHwKCi0tLQoKKipFbmQgb2YgU3RhdHVzIFJlcG9ydCBUZW1wbGF0ZSoqICAKKlRvIGJlIHBvcHVsYXRlZCBhdXRvbWF0aWNhbGx5IGFmdGVyIGVhY2ggc3VjY2Vzc2Z1bCBgU3luYy1Db250aW51aXR5YCBydW4uKgoKLS0tCkJhY2tlbmQgSGVhbHRoeSAtIDIwMjUtMTAtMjMgMTE6MTU6NTc=",
        "summary": "103L | status_report.md | .md | 2.6 KB"
      },
      {
        "path": "docs\\status_report_template.md",
        "type": ".md",
        "size_kb": 2.5,
        "lines": 100,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIHt7dGltZXN0YW1wfX0gIAoqKlBoYXNlOioqIHt7cGhhc2V9fSAgCioqQmFja2VuZDoqKiB7e2JhY2tlbmRfbmFtZX19ICAKKipNYWludGFpbmVyOioqIExpYW4gSXNhYWMgIAoKLS0tCgojIyBPdmVydmlldwoKfCBGaWVsZCB8IFZhbHVlIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAqKlBoYXNlKiogfCB7e3BoYXNlfX0gfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHt7YmFja2VuZF9oZWFsdGh9fSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwge3t1cHRpbWVfcGN0fX0gJSB8CnwgKipTeXN0ZW0qKiB8IHt7c3lzdGVtX2luZm99fSB8CnwgKipEYXRhYmFzZSBQYXRoKiogfCB7e2RiX3BhdGh9fSB8CgotLS0KCiMjIEJhY2tlbmQgU3VtbWFyeQoKKipMYXN0IFNuYXBzaG90OioqIHt7dGltZXN0YW1wfX0gIAoqKkhlYWx0aCBDaGVjazoqKiB7e2hlYWx0aF9tZXNzYWdlfX0gIAoKIyMjIEtleSBDb21wb25lbnRzCnwgRmlsZSB8IEhhc2ggfCBMYXN0IFVwZGF0ZWQgfAp8LS0tLS0tfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS18CnwgbWV0cmljcy5weSB8IHt7aGFzaF9tZXRyaWNzfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBkYi5weSB8IHt7aGFzaF9kYn19IHwge3t0aW1lc3RhbXB9fSB8CnwgYXBwLnB5IHwge3toYXNoX2FwcH19IHwge3t0aW1lc3RhbXB9fSB8Cnwgc2NyYXBlci5weSB8IHt7aGFzaF9zY3JhcGVyfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBBcHAuanN4IHwge3toYXNoX2FwcGpzeH19IHwge3t0aW1lc3RhbXB9fSB8CgotLS0KCiMjIFF1YW50IFByb2dyZXNzIFNuYXBzaG90Cgp8IFBoYXNlIHwgJSBDb21wbGV0ZSB8IFN0YXR1cyB8IE5vdGVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tLS0tLS18LS0tLS0tLS18LS0tLS0tLS18CnwgMS41IFNjYWZmb2xkIHwge3twaGFzZV8xNX19IHwgRG9uZSB8IFNlZWQgKyBXUyBTdGFibGUgfAp8IDIgQ29yZSB8IHt7cGhhc2VfMn19IHwgRG9uZSB8IFRGIFN3aXRjaCArIEV4cG9ydHMgfAp8IDMgQWR2IHwge3twaGFzZV8zfX0gfCBJbiBQcm9ncmVzcyB8IFdlaWdodGVkIE9JIC8gQ29uZmx1ZW5jZSB8CnwgNCBHcmFuZCB8IHt7cGhhc2VfNH19IHwgUGxhbm5lZCB8IFJlcGxheSBTaW0gUGxhbm5lZCB8CgojIyMgUXVhbnQgS1BJcwp8IEtQSSB8IEN1cnJlbnQgfCBUYXJnZXQgfCBUcmVuZCB8CnwtLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS18CnwgREIgUm93cyB8IHt7ZGJfcm93c319IHwgPjUwMCB8IHt7ZGJfdHJlbmR9fSB8CnwgQXZnIFotU2NvcmUgfCB7e2F2Z196fX0gfCA8Mi4wIHwge3t6X3RyZW5kfX0gfAp8IEFsZXJ0IEFjY3VyYWN5IHwge3thbGVydF9hY2N9fSB8ID45NSUgfCB7e2FsZXJ0X3RyZW5kfX0gfAp8IENvbmZsdWVuY2UgSGl0cyB8IHt7Y29uZmx1ZW5jZV9oaXRzfX0gfCA+MC42NiB8IHt7Y29uZmx1ZW5jZV90cmVuZH19IHwKfCBXUyBVcHRpbWUgfCB7e3dzX3VwdGltZX19IHwgOTkuOSUgfCB7e3dzX3RyZW5kfX0gfAoKLS0tCgojIyBTeXN0ZW0gQ29udGV4dAoKKipQeXRob246Kioge3tweXRob25fdmVyc2lvbn19ICAKKipOb2RlOioqIHt7bm9kZV92ZXJzaW9ufX0gIAoqKk9TOioqIHt7b3NfdmVyc2lvbn19ICAKKipVc2VyOioqIHt7dXNlcn19ICAKCioqUmVwbyBTdW1tYXJ5OioqICAKYGBgdGV4dAp7e3JlcG9fc3VtbWFyeX19CmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB7e2JhY2tlbmRfaGVhbHRofX0gIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6Kioge3tkaWFnbm9zdGljX2hpbnR9fSAgCi0gKipMYXN0IEtub3duIEhlYWx0aHkgU25hcHNob3Q6Kioge3tsYXN0X2hlYWx0aHlfdGltZXN0YW1wfX0gIAoKLS0tCgojIyBSZWNvbW1lbmRhdGlvbnMKCjEuIFZlcmlmeSBgL2hlYWx0aGAgZW5kcG9pbnQgcmVzcG9uc2UuICAKMi4gQ2hlY2sgYGJhY2tlbmQvbG9ncy9hcHAubG9nYCBmb3IgVVRGLTggZW5jb2RpbmcgZXJyb3JzLiAgCjMuIFJlLXJ1biBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgYWZ0ZXIgY29uZmlybWluZyBiYWNrZW5kIGZpeC4gIAo0LiBDb21taXQgd2l0aCBgSW52b2tlLVBoYXNlVHJhY2sgLXAge3tuZXh0X3BoYXNlfX0gLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCg==",
        "summary": "100L | status_report_template.md | .md | 2.5 KB"
      },
      {
        "path": "docs\\testing_harness.md",
        "type": ".md",
        "size_kb": 1.3,
        "lines": 21,
        "content": "IyBUZXN0aW5nIEhhcm5lc3MgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpGb2N1czogU21va2UgKDw1cyksIEJlbmNoICg8MTBzLzUwIHBhaXJzKSwgUXVhbnQgVmFsIChaIGZpbml0ZS9mYWxzZS1wb3MpLiBSdW46IHB5dGVzdCAtcSA7IGNvZGVfZXhlY3V0aW9uIHNuaXBwZXRzLgoKIyMgUHl0ZXN0IFN1aXRlIChweXRlc3QuaW5pICsgRmlsZXMpCi0gdGVzdF9tZXRyaWNzLnB5OiBgZGVmIHRlc3RfZ2V0X2FsbCgpOiBtZXRyaWNzID0gZ2V0X2FsbF9tZXRyaWNzKHRmPScxNW0nKTsgYXNzZXJ0IGxlbihtZXRyaWNzKSA9PSAyMDsgYXNzZXJ0IGFsbChucC5pc2Zpbml0ZShtWyd6X3Njb3JlJ10pIGZvciBtIGluIG1ldHJpY3MpYAotIHRlc3Rfd3MucHk6IGBkZWYgdGVzdF9lbWl0KCk6IC4uLiBhc3NlcnQgJ21ldHJpY3NfdXBkYXRlJyBpbiBzb2NrZXRpby5ldmVudHNgCi0gQmVuY2g6IGBweXRlc3QgLS1iZW5jaG1hcmstb25seWAgKFRhcmdldDogPDVzIGxvYWQsIG5vIGJsYW5rcykuCgojIyBUb29sIFNuaXBwZXRzIChjb2RlX2V4ZWN1dGlvbikKfCBUZXN0IHwgU25pcHBldCB8IEV4cGVjdGVkIHwKfC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBaIEZpbml0ZSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IHogPSBucC5yYW5kb20ubm9ybWFsKDAsMSwyMCk7IGFzc2VydCBucC5hbGwobnAuaXNmaW5pdGUoeikpICYgKG5wLmFicyh6KSA8IDEwKWAgfCBUcnVlIHwKfCBXZWlnaHRlZCBPSSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IG9pID0gbnAuYXJyYXkoWzFlOSwyZTldKTsgdm9scyA9IG5wLmFycmF5KFsxZTksMmU5XSk7IHcgPSBucC5hdmVyYWdlKG9pLCB3ZWlnaHRzPXZvbHMvdm9scy5zdW0oKSk7IHByaW50KHcpYCB8IDEuNjY2ZTkgfAp8IENvbmZsdWVuY2UgfCBgZGVmIGNhbGMoeixscyxpbWIpOiByZXR1cm4gc3VtKFt6PjIuNSwgbHM+MiwgYWJzKGltYik+M10pLzM7IHByaW50KGNhbGMoMi42LDIuMSwtMy4xKSlgIHwgMS4wIHwKfCBEQiBSb3dzIHwgQXMgZ2VuX3RyYWNrZXIucHkgfCA+NTgxIHwKCiMjIDI0aCBIYXJuZXNzIChQUyBDaGFpbikKYGBgcG93ZXJzaGVsbApweXRlc3QgLXEgOyBjdXJsIC9hcGkvbWV0cmljcz90Zj0xNW0gfCBqcSAnbGVuZ3RoJyA7IEdldC1Db250ZW50IGJhY2tlbmQvbG9ncy9hcHAubG9nIC1UYWlsIDEwIHwgU2VsZWN0LVN0cmluZyAiZW1pdHxlcnJvciIgOyBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQojIE91dHB1dDogLi4uLi4uLi4gMjAgOyBFbWl0dGVkMjAgKG5vIGVycm9yKQ==",
        "summary": "21L | testing_harness.md | .md | 1.3 KB"
      },
      {
        "path": "docs\\z_history.json",
        "type": ".json",
        "size_kb": 0.2,
        "lines": 1,
        "content": "Wy0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1LCAtMC4wMDQzMDczMTg3MTYwNDYxOTUsIC0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1LCAtMC4wMDQzMDczMTg3MTYwNDYxOTUsIC0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1XQ==",
        "summary": "1L | z_history.json | .json | 0.2 KB"
      },
      {
        "path": "docs\\autogen\\codegen_v1.py",
        "type": ".py",
        "size_kb": 5.9,
        "lines": 173,
        "content": "",
        "summary": "173L | codegen_v1.py | .py | 5.9 KB"
      },
      {
        "path": "docs\\autogen\\gen_blueprint_v2.py",
        "type": ".py",
        "size_kb": 2.8,
        "lines": 82,
        "content": "IyBnZW5fYmx1ZXByaW50X3YyLnB5IOKAkyBEUi1QMiBJbnRlZ3JhdGlvbiAoQ29udGV4dC1Bd2FyZSwgQXV0b0RvY3MgUmVhZHkpCiMgVXNhZ2U6IGNkIGRvY3MvYXV0b2dlbiA7IHB5dGhvbiBnZW5fYmx1ZXByaW50X3YyLnB5CmltcG9ydCBzcWxpdGUzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBvcwppbXBvcnQgcmUKaW1wb3J0IHRlbXBmaWxlCmltcG9ydCBzaHV0aWwKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgpDT05URVhUX1BBVEggPSBQYXRoKHIiRTpcVHJhZGluZ1xjcnlwdG8tZnV0dXJlcy1kYXNoYm9hcmRcZG9jc1xwcm9qZWN0X2NvbnRleHRfdjMuanNvbiIpCk9VVFBVVF9QQVRIID0gUGF0aChyIkU6XFRyYWRpbmdcY3J5cHRvLWZ1dHVyZXMtZGFzaGJvYXJkXGRvY3NccXVhbnRfYmx1ZXByaW50X3N5bmNlZC5tZCIpCgpkZWYgY2xlYW5fb2xkX2twaShjb250ZW50OiBzdHIpIC0+IHN0cjoKICAgIHBhdHRlcm4gPSByIiMjIEF1dG8tS1BJIFVwZGF0ZS4qPyg/PVxuIyMgfFxaKSIKICAgIHJldHVybiByZS5zdWIocGF0dGVybiwgIiIsIGNvbnRlbnQsIGZsYWdzPXJlLkRPVEFMTCkKCmRlZiBzYWZlX3dyaXRlKHBhdGg6IFBhdGgsIGRhdGE6IHN0cik6CiAgICBkaXJfcGF0aCA9IHBhdGgucGFyZW50CiAgICB3aXRoIHRlbXBmaWxlLk5hbWVkVGVtcG9yYXJ5RmlsZShtb2RlPSJ3IiwgZGVsZXRlPUZhbHNlLCBlbmNvZGluZz0idXRmLTgiLCBzdWZmaXg9Ii5tZCIsIGRpcj1kaXJfcGF0aCkgYXMgdG1wOgogICAgICAgIHRtcC53cml0ZShkYXRhKQogICAgICAgIHRtcF9wYXRoID0gdG1wLm5hbWUKICAgIHNodXRpbC5tb3ZlKHRtcF9wYXRoLCBwYXRoKQoKZGVmIGxvYWRfY29udGV4dCgpOgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX1BBVEgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgcmV0dXJuIGpzb24ubG9hZChmKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gQ29udGV4dCBsb2FkIGZhaWxlZDoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgZGJfcGF0aCA9IGN0eC5nZXQoImRhdGFiYXNlX3BhdGgiLCAiYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2Z1dHVyZXMuZGIiKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHVwdGltZSA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwKQoKICAgIGRiX2FicyA9IFBhdGgociJFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZCIpIC8gUGF0aChkYl9wYXRoKQogICAgcHJpbnQoZiJbaV0gREI6IHtkYl9hYnN9IHwgT1VUOiB7T1VUUFVUX1BBVEh9IikKCiAgICB0cnk6CiAgICAgICAgd2l0aCBzcWxpdGUzLmNvbm5lY3QoZGJfYWJzKSBhcyBjb246CiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwoIlNFTEVDVCBvaV9hYnNfdXNkLCB2b2xfdXNkIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA1MCIsIGNvbikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlvinJddIERCIGVycm9yOiB7ZX0iKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKCkKCiAgICBpZiBkZi5lbXB0eSBvciBkZlsndm9sX3VzZCddLmZpbGxuYSgwKS5zdW0oKSA9PSAwOgogICAgICAgIHdlaWdodGVkX29pID0gMC4wCiAgICAgICAgc3RhdHVzID0gIk5vIHZhbGlkIE9JL1ZvbCBkYXRhIgogICAgZWxzZToKICAgICAgICB3ZWlnaHRzID0gZGZbJ3ZvbF91c2QnXSAvIGRmWyd2b2xfdXNkJ10uc3VtKCkKICAgICAgICB3ZWlnaHRlZF9vaSA9IG5wLmF2ZXJhZ2UoZGZbJ29pX2Fic191c2QnXSwgd2VpZ2h0cz13ZWlnaHRzKQogICAgICAgIHN0YXR1cyA9IGYiV2VpZ2h0ZWQgT0kgZnJvbSB7bGVuKGRmKX0gcGFpcnMiCgogICAga3BpX21kID0gKAogICAgICAgICIjIyBBdXRvLUtQSSBVcGRhdGUgKCIgKyBkYXRldGltZS5ub3coKS5zdHJmdGltZSgiJVktJW0tJWQgJUg6JU0iKSArICIpXG4iCiAgICAgICAgInwgTWV0cmljIHwgVmFsdWUgfFxuIgogICAgICAgICJ8LS0tLS0tLS0tfC0tLS0tLS18XG4iCiAgICAgICAgZiJ8ICoqV2VpZ2h0ZWQgT0kgKFVTRCkqKiB8IFxcJHt3ZWlnaHRlZF9vaS8xZTk6LjJmfUIgfFxuIgogICAgICAgIGYifCAqKlBoYXNlKiogfCB7cGhhc2V9IHxcbiIKICAgICAgICBmInwgKipVcHRpbWUqKiB8IHt1cHRpbWU6LjFmfSUgfFxuIgogICAgICAgIGYifCAqKlN0YXR1cyoqIHwge3N0YXR1c30gfFxuIgogICAgKQoKICAgIHRyeToKICAgICAgICBpZiBPVVRQVVRfUEFUSC5leGlzdHMoKToKICAgICAgICAgICAgY29udGVudCA9IGNsZWFuX29sZF9rcGkoT1VUUFVUX1BBVEgucmVhZF90ZXh0KGVuY29kaW5nPSJ1dGYtOCIpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRlbnQgPSAiIyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZClcbiIKICAgICAgICB1cGRhdGVkID0gY29udGVudC5zdHJpcCgpICsgIlxuXG4iICsga3BpX21kCiAgICAgICAgc2FmZV93cml0ZShPVVRQVVRfUEFUSCwgdXBkYXRlZCkKICAgICAgICBwcmludChmIlvinJNdIFVwZGF0ZWQ6IHtPVVRQVVRfUEFUSC5uYW1lfSAoe3dlaWdodGVkX29pLzFlOTouMmZ9QikiKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gV3JpdGUgZXJyb3I6IHtlfSIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCg==",
        "summary": "82L | gen_blueprint_v2.py | .py | 2.8 KB"
      },
      {
        "path": "docs\\autogen\\gen_tracker_v2.py",
        "type": ".py",
        "size_kb": 4.2,
        "lines": 114,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKZ2VuX3RyYWNrZXJfdjIucHkg4oCUIFF1YW50IFByb2dyZXNzIFRyYWNrZXIgKFAzIFdlaWdodGVkIE9JIFRlYXNlKQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KUHVsbHMgR2l0IGRpZmZzLCBjb250ZXh0LCBEQiBtZXRyaWNzIOKGkiBhcHBlbmRzIHRvIHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgKyBwbG90cyBaLXRyZW5kLgpGaXg6IERlZmluZSAncCcgdmlhIFBhdGggKEw3KTsgdXRmLTgtc2lnIGZvciBCT007IGZpbml0ZSBaIGd1YXJkLgpVc2FnZTogcHl0aG9uIGRvY3MvYXV0b2dlbi9nZW5fdHJhY2tlcl92Mi5weQpPdXRwdXRzOiBkb2NzL3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgfCBkb2NzL3Bsb3RzL3pfdHJlbmQucG5nCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IG9zCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aCAgIyBGaXhlZDogSW1wb3J0IGZvciAncCcgZGVmIChMNyB1c2UpCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBzcWxhbGNoZW15IGltcG9ydCBjcmVhdGVfZW5naW5lLCB0ZXh0CgojID09PSBDT05GSUcgPT09ClJFUE9fUk9PVCA9IFBhdGgoX19maWxlX18pLnJlc29sdmUoKS5wYXJlbnQucGFyZW50LnBhcmVudApET0NTX0RJUiA9IFJFUE9fUk9PVCAvICJkb2NzIgpQTE9UU19ESVIgPSBET0NTX0RJUiAvICJwbG90cyIKVFJBQ0tFUl9NRCA9IERPQ1NfRElSIC8gInF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQiCkNPTlRFWFRfSlNPTiA9IERPQ1NfRElSIC8gInByb2plY3RfY29udGV4dF92My5qc29uIgpEQl9QQVRIID0gUkVQT19ST09UIC8gImJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIgoKUExPVFNfRElSLm1rZGlyKGV4aXN0X29rPVRydWUpCgpkZWYgbG9hZF9jb250ZXh0KCk6CiAgICAiIiJMb2FkIHByb2plY3QgY29udGV4dCAodXRmLTgtc2lnIGZvciBCT00pLiIiIgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX0pTT04sICdyJywgZW5jb2Rpbmc9J3V0Zi04LXNpZycpIGFzIGY6CiAgICAgICAgICAgIHJldHVybiBqc29uLmxvYWQoZikKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIHsicGhhc2UiOiAiVW5rbm93biIsICJ1cHRpbWVfcGN0IjogMC4wfQoKZGVmIGdldF9naXRfZGlmZnMoKToKICAgICIiIlJ1biBnaXQgZGlmZiDihpIgY291bnQgZmlsZXMvY2hhbmdlcy4iIiIKICAgIHRyeToKICAgICAgICByZXN1bHQgPSBzdWJwcm9jZXNzLnJ1bihbJ2dpdCcsICdkaWZmJywgJy0tbmFtZS1vbmx5JywgJ0hFQUR+MSddLCBjd2Q9UkVQT19ST09ULCBjYXB0dXJlX291dHB1dD1UcnVlLCB0ZXh0PVRydWUpCiAgICAgICAgZmlsZXNfY2hhbmdlZCA9IFtsaW5lLnN0cmlwKCkgZm9yIGxpbmUgaW4gcmVzdWx0LnN0ZG91dC5zcGxpdGxpbmVzKCkgaWYgbGluZS5zdHJpcCgpXQogICAgICAgIHJldHVybiBsZW4oZmlsZXNfY2hhbmdlZCksIGZpbGVzX2NoYW5nZWQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAsIFtdCgpkZWYgcXVlcnlfZGJfel90cmVuZCgpOgogICAgIiIiUXVlcnkgbWV0cmljcyBEQiBmb3IgYXZnIFogKGZpbml0ZSBvbmx5LCBsYXN0IDEwMCByb3dzKS4iIiIKICAgIGVuZ2luZSA9IGNyZWF0ZV9lbmdpbmUoZidzcWxpdGU6Ly8ve0RCX1BBVEh9JykKICAgIHRyeToKICAgICAgICB3aXRoIGVuZ2luZS5jb25uZWN0KCkgYXMgY29ubjoKICAgICAgICAgICAgcXVlcnkgPSB0ZXh0KCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196IEZST00gbWV0cmljcyBXSEVSRSB6X3Njb3JlIElTIE5PVCBOVUxMIE9SREVSIEJZIHRpbWVzdGFtcCBERVNDIExJTUlUIDEwMCIpCiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwocXVlcnksIGNvbm4pCiAgICAgICAgICAgIGF2Z196ID0gbnAubWVhbihkZlsnYXZnX3onXS5kcm9wbmEoKSkgaWYgbm90IGRmLmVtcHR5IGVsc2UgMC4wCiAgICAgICAgICAgIGNvdW50ID0gbGVuKGRmKQogICAgICAgIHJldHVybiBhdmdfeiwgY291bnQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAuMCwgMAoKZGVmIHVwZGF0ZV90cmFja2VyX21kKHBoYXNlLCBwcm9ncmVzc19wY3QsIGF2Z196LCBmaWxlc19jaGFuZ2VkLCB0cyk6CiAgICAiIiJBcHBlbmQgcm93IHRvIE1EIHRhYmxlLiIiIgogICAgcm93ID0gZiJ8IHtwaGFzZX0gfCB7cHJvZ3Jlc3NfcGN0Oi4xZn0lIHwge2F2Z196Oi4yZn0gfCB7ZmlsZXNfY2hhbmdlZH0gZmlsZXMgfCB7dHN9IHwiCiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKFRSQUNLRVJfTUQsICdhJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZi53cml0ZShmIlxue3Jvd30iKQogICAgICAgIHByaW50KGYiW+Kck10gVHJhY2tlciB1cGRhdGVkOiB7cm93fSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJb4pyXXSBNRCBhcHBlbmQgZmFpbGVkOiB7ZX0iKQoKZGVmIHBsb3Rfel90cmVuZChhdmdfel9oaXN0b3J5KToKICAgICIiIlNpbXBsZSBaLXRyZW5kIHBsb3QgKG1vY2sgaGlzdG9yeSBpZiBlbXB0eSkuIiIiCiAgICBpZiBub3QgYXZnX3pfaGlzdG9yeToKICAgICAgICBhdmdfel9oaXN0b3J5ID0gWzAuMF0gKiA1ICAjIE1vY2sgYmFzZWxpbmUKICAgIHBsdC5maWd1cmUoZmlnc2l6ZT0oOCwgNCkpCiAgICBwbHQucGxvdChyYW5nZShsZW4oYXZnX3pfaGlzdG9yeSkpLCBhdmdfel9oaXN0b3J5LCBtYXJrZXI9J28nLCBjb2xvcj0nYicpCiAgICBwbHQudGl0bGUoJ1otU2NvcmUgVHJlbmQgT3ZlciBQaGFzZXMnKQogICAgcGx0LnhsYWJlbCgnUGhhc2UgU25hcHNob3RzJykKICAgIHBsdC55bGFiZWwoJ0F2ZyBaJykKICAgIHBsdC5ncmlkKFRydWUpCiAgICBwbHQuc2F2ZWZpZyhQTE9UU19ESVIgLyAnel90cmVuZC5wbmcnLCBkcGk9MTAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgcGx0LmNsb3NlKCkKICAgIHByaW50KGYiW+Kck10gUGxvdCBzYXZlZDoge1BMT1RTX0RJUiAvICd6X3RyZW5kLnBuZyd9IikKCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHByb2dyZXNzX3BjdCA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwLjApICAjIFRlYXNlIFAzIHByb2dyZXNzCiAgICB0cyA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTSIpCgogICAgZmlsZXNfY2hhbmdlZCwgXyA9IGdldF9naXRfZGlmZnMoKQogICAgYXZnX3osIHpfY291bnQgPSBxdWVyeV9kYl96X3RyZW5kKCkKCiAgICAjIEZpeGVkIEw3KzogVXNlIFBhdGggZm9yIGFueSBmaWxlIHJlZnMgKGUuZy4sIGlmIHA9UGF0aChUUkFDS0VSX01EKSkKICAgIHAgPSBQYXRoKFRSQUNLRVJfTUQpICAjIERlZiAncCcgaGVyZSBpZiB1c2VkIGRvd25zdHJlYW0gKGUuZy4sIHAuZXhpc3RzKCkpCiAgICBpZiBwLmV4aXN0cygpIG9yIFRydWU6ICAjIEd1YXJkCiAgICAgICAgdXBkYXRlX3RyYWNrZXJfbWQocGhhc2UsIHByb2dyZXNzX3BjdCwgYXZnX3osIGZpbGVzX2NoYW5nZWQsIHRzKQoKICAgICMgTW9jayBoaXN0b3J5IGZvciBwbG90IChhcHBlbmQgcmVhbCBhdmdfeikKICAgIGhpc3RvcnlfZmlsZSA9IERPQ1NfRElSIC8gInpfaGlzdG9yeS5qc29uIgogICAgaGlzdG9yeSA9IFtdCiAgICBpZiBoaXN0b3J5X2ZpbGUuZXhpc3RzKCk6CiAgICAgICAgd2l0aCBvcGVuKGhpc3RvcnlfZmlsZSwgJ3InLCBlbmNvZGluZz0ndXRmLTgtc2lnJykgYXMgZjoKICAgICAgICAgICAgaGlzdG9yeSA9IGpzb24ubG9hZChmKQogICAgaGlzdG9yeS5hcHBlbmQoYXZnX3opCiAgICB3aXRoIG9wZW4oaGlzdG9yeV9maWxlLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAganNvbi5kdW1wKGhpc3RvcnlbLTEwOl0sIGYpICAjIExhc3QgMTAKICAgIHBsb3Rfel90cmVuZChoaXN0b3J5Wy0xMDpdKQoKICAgIHByaW50KGYiW2ldIERCOiB7REJfUEFUSH0gfCBPVVQ6IHtUUkFDS0VSX01EfSIpCiAgICBwcmludChmIlvinJNdIFRyYWNrZXIgdXBkYXRlZDogfCB7cGhhc2V9IHwge3Byb2dyZXNzX3BjdDouMWZ9JSB8IEF2Z1oge2F2Z196Oi4yZn0gKHt6X2NvdW50fSBmaWxlcywge3RzfSkgfCIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigp",
        "summary": "114L | gen_tracker_v2.py | .py | 4.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\api_guide.md",
        "type": ".md",
        "size_kb": 1.2,
        "lines": 20,
        "content": "IyBBUEkgR3VpZGUgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpCYXNlOiBodHRwOi8vMTI3LjAuMC4xOjUwMDAgfCBBdXRoOiBOb25lIChSZWFkLU9ubHkpIHwgRm9ybWF0OiBKU09OIChDb250ZW50LVJhbmdlIHBhZykuCgojIyBFbmRwb2ludHMKCnwgUm91dGUgfCBNZXRob2QgfCBQYXJhbXMgfCBEZXNjIHwgRXhhbXBsZSBDdXJsIHwgUmVzcG9uc2UgVGVhc2UgfAp8LS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwKfCAvYXBpL21ldHJpY3MgfCBHRVQgfCA/dGY9MTVtJmxpbWl0PTIwIHwgUGFnaW5hdGVkIHF1YW50cyAoT0kvTFPOlC9aIGV0Yy4pIHwgYGN1cmwgImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0iIHwganEgJy5bXSB8IHtzeW0sIHpfc2NvcmV9J2AgfCAyMDAge2RhdGE6IFt7c3ltOiJFVEgiLCB6OjEuMjAsIGNvbmZsdWVuY2U6MC4zM31dLCByYW5nZTowLTE5LzIwfSB8CnwgL2hlYWx0aCB8IEdFVCB8IE5vbmUgfCBVcHRpbWUvcmF0ZS9lcnJvcnMgfCBgY3VybCBodHRwOi8vMTI3LjAuMC4xOjUwMDAvaGVhbHRoYCB8IDIwMCB7InVwdGltZSI6OTkuOSwgInJlcV9yYXRlIjozNTAsICJlcnJvcnMiOjB9IHwKfCAvYXBpL3JlcGxheSAoUDQpIHwgR0VUIHwgP3RmPTFoJnN0YXJ0X3RzPS4uLiB8IEJpc2VjdCB0cyBqb2lucyBzaW0gfCBgY3VybCAiL2FwaS9yZXBsYXk/dGY9MWgiIHwganEgJy5ldmVudHNbXSdgIHwgVGVhc2U6IHtldmVudHM6IFt7dHMsIHpfc3Bpa2U6dHJ1ZX1dfSB8CnwgV1MgL3NvY2tldC5pbyB8IFdTIHwgRW1pdDogbWV0cmljc191cGRhdGUgfCBCYXRjaCB0ZiBxdWFudHMgKyBhbGVydHMgfCBGcm9udGVuZDogc29ja2V0LmlvLWNsaWVudCBjb25uZWN0IHwgT246ICdhbGVydF90b2FzdCcge3N5bToiQlRDIiwgdHlwZToiWl9zcGlrZSIsIHZhbDoyLjZ9IHwKCiMjIFZhbGlkYXRpb24gKGNvZGVfZXhlY3V0aW9uIFRlYXNlKQpgYGBweXRob24KaW1wb3J0IHJlcXVlc3RzCnIgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0nKQpkYXRhID0gci5qc29uKCkKcHJpbnQobGVuKGRhdGFbJ2RhdGEnXSksICdwYWlyczsgWiBmaW5pdGU6JywgYWxsKGFicyhkWyd6X3Njb3JlJ10pIDwgMTAgZm9yIGQgaW4gZGF0YVsnZGF0YSddKSkKIyBPdXRwdXQ6IDIwIHBhaXJzOyBaIGZpbml0ZTogVHJ1ZQ==",
        "summary": "20L | api_guide.md | .md | 1.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\architecture.md",
        "type": ".md",
        "size_kb": 25.9,
        "lines": 116,
        "content": "",
        "summary": "116L | architecture.md | .md | 25.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\codegen.py",
        "type": ".py",
        "size_kb": 3.2,
        "lines": 92,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKRnVsbCBDb250aW51aXR5IEV4cG9ydCAodjAuNCkKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClNjYW5zIHByb2plY3QgZGlyZWN0b3JpZXMgYW5kIGV4cG9ydHMgYWxsIHNvdXJjZSBmaWxlcyAoUHl0aG9uLCBKUywgUmVhY3QsIENTUywgSFRNTCwgY29uZmlncywgZG9jcykKaW50byBhIHNpbmdsZSBKU09OIGZpbGUgd2l0aCBiYXNlNjQtZW5jb2RlZCBjb250ZW50LgoKT3V0cHV0OiBkb2NzL3Byb2plY3RfZGF0YS5qc29uCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IGJhc2U2NAppbXBvcnQgb3MKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgojID09PSBDT05GSUcgPT09ClBST0pFQ1RfUk9PVCA9IFBhdGgob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguZGlybmFtZShfX2ZpbGVfXykpKS5yZXNvbHZlKCkKSlNPTl9QQVRIID0gUFJPSkVDVF9ST09UIC8gJ2RvY3MnIC8gJ3Byb2plY3RfZGF0YS5qc29uJwoKIyBEaXJlY3RvcmllcyB0byBpbmNsdWRlCkNPREVfRElSUyA9IFsKICAgICdiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQnLAogICAgJ2Zyb250ZW5kL3NyYycsCiAgICAnYmFja2VuZC90ZXN0cycsCiAgICAnZnJvbnRlbmQvcHVibGljJywKICAgICdkb2NzJwpdCgojIEZpbGUgdHlwZXMgdG8gaW5jbHVkZQpBTExPV0VEX0VYVFMgPSBbCiAgICAnLnB5JywgJy5qcycsICcuanN4JywgJy50cycsICcudHN4JywgJy5qc29uJywgJy5tZCcsCiAgICAnLmNzcycsICcuc2NzcycsICcuaHRtbCcsICcueW1sJywgJy55YW1sJywgJy50b21sJywgJy50eHQnLCAnLmluaScKXQoKIyBNYXggZmlsZSBzaXplIChpbiBieXRlcykg4oCUIGluY3JlYXNlIGZvciBmdWxsIHByb2plY3QKTUFYX0ZJTEVfU0laRSA9IDEwMDBfMDAwICAjIH4yNTAgS0IKCiMgPT09IExPR0lDID09PQpkZWYgZ2VuX2NvZGVfc2VjdGlvbigpOgogICAgZmlsZXMgPSBbXQogICAgZm9yIGRpcl9yZWwgaW4gQ09ERV9ESVJTOgogICAgICAgIGRpcl9wYXRoID0gUFJPSkVDVF9ST09UIC8gZGlyX3JlbAogICAgICAgIGlmIG5vdCBkaXJfcGF0aC5leGlzdHMoKToKICAgICAgICAgICAgcHJpbnQoZiLimqDvuI8gIE1pc3NpbmcgZGlyZWN0b3J5OiB7ZGlyX3BhdGh9IikKICAgICAgICAgICAgY29udGludWUKICAgICAgICBmb3IgZmlsZV9wYXRoIGluIGRpcl9wYXRoLnJnbG9iKCcqJyk6CiAgICAgICAgICAgIGlmIG5vdCBmaWxlX3BhdGguaXNfZmlsZSgpOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgc3VmZml4ID0gZmlsZV9wYXRoLnN1ZmZpeC5sb3dlcigpCiAgICAgICAgICAgIGlmIHN1ZmZpeCBpbiBBTExPV0VEX0VYVFMgYW5kIGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSA8IE1BWF9GSUxFX1NJWkU6CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwgJ3InLCBlbmNvZGluZz0ndXRmLTgnLCBlcnJvcnM9J2lnbm9yZScpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQogICAgICAgICAgICAgICAgICAgIGI2NCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoKSkuZGVjb2RlKCkKICAgICAgICAgICAgICAgICAgICBzdW1tYXJ5ID0gZiJ7bGVuKGNvbnRlbnQuc3BsaXRsaW5lcygpKX1MIHwge2ZpbGVfcGF0aC5uYW1lfSB8IHtzdWZmaXh9IHwge3JvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpfSBLQiIKICAgICAgICAgICAgICAgICAgICBmaWxlcy5hcHBlbmQoewogICAgICAgICAgICAgICAgICAgICAgICAicGF0aCI6IHN0cihmaWxlX3BhdGgucmVsYXRpdmVfdG8oUFJPSkVDVF9ST09UKSksCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogc3VmZml4LAogICAgICAgICAgICAgICAgICAgICAgICAic2l6ZV9rYiI6IHJvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpLAogICAgICAgICAgICAgICAgICAgICAgICAiY29udGVudCI6IGI2NCwKICAgICAgICAgICAgICAgICAgICAgICAgInN1bW1hcnkiOiBzdW1tYXJ5CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKchSB7ZmlsZV9wYXRoLm5hbWU6NDB9IHwge3N1bW1hcnl9IikKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKdjCBSZWFkIGZhaWxlZCB7ZmlsZV9wYXRofToge2V9IikKICAgIHJldHVybiB7ImZpbGVzIjogZmlsZXN9CgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgIyBMb2FkIGV4aXN0aW5nIGRhdGEgaWYgcHJlc2VudAogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihKU09OX1BBVEgsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZGF0YSA9IGpzb24ubG9hZChmKQogICAgICAgIHByaW50KCJNZXJnaW5nIGludG8gZXhpc3RpbmcgcHJvamVjdF9kYXRhLmpzb24g4oCmIikKICAgIGV4Y2VwdCAoRmlsZU5vdEZvdW5kRXJyb3IsIGpzb24uSlNPTkRlY29kZUVycm9yKToKICAgICAgICBkYXRhID0geyJwcm9qZWN0IjogeyJuYW1lIjogIkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCIsICJ2ZXJzaW9uIjogInYwLjQifX0KICAgICAgICBwcmludCgiSW5pdGlhbGl6aW5nIG5ldyBKU09OIOKApiIpCgogICAgIyBHZW5lcmF0ZSBjb2RlIHNlY3Rpb24KICAgIGNvZGVfZGF0YSA9IGdlbl9jb2RlX3NlY3Rpb24oKQogICAgZGF0YVsiY29kZSJdID0gY29kZV9kYXRhCiAgICBkYXRhWyJtZXRhZGF0YSJdID0gewogICAgICAgICJ1cGRhdGVkIjogZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVZLSVtLSVkICVIOiVNOiVTIiksCiAgICAgICAgInRvdGFsX2ZpbGVzIjogbGVuKGNvZGVfZGF0YVsiZmlsZXMiXSksCiAgICAgICAgIm1heF9maWxlX3NpemVfa2IiOiByb3VuZChNQVhfRklMRV9TSVpFIC8gMTAyNCwgMSkKICAgIH0KCiAgICAjIFdyaXRlIEpTT04KICAgIHdpdGggb3BlbihKU09OX1BBVEgsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICBqc29uLmR1bXAoZGF0YSwgZiwgaW5kZW50PTIsIGVuc3VyZV9hc2NpaT1GYWxzZSkKCiAgICBwcmludChmIlxu8J+foiBFeHBvcnQgQ29tcGxldGU6IHtsZW4oY29kZV9kYXRhWydmaWxlcyddKX0gZmlsZXMgc2F2ZWQg4oaSIHtKU09OX1BBVEh9IikK",
        "summary": "92L | codegen.py | .py | 3.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\codegen_index.md",
        "type": ".md",
        "size_kb": 8.4,
        "lines": 92,
        "content": "",
        "summary": "92L | codegen_index.md | .md | 8.4 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\continuity_log.json",
        "type": ".json",
        "size_kb": 10.7,
        "lines": 269,
        "content": "",
        "summary": "269L | continuity_log.json | .json | 10.7 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\continuity_state.json",
        "type": ".json",
        "size_kb": 0.9,
        "lines": 22,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMzo1NDoyOCIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kIjogICJ1bmhlYWx0aHkiLAogICAgInVwdGltZVBjdCI6ICA0MCwKICAgICJmaWxlX2hhc2hlcyI6ICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJtZXRyaWNzLnB5IjogICIxNzJFMzkxIiwKICAgICAgICAgICAgICAgICAgICAgICAgImJsdWVwcmludC5weSI6ICAiMkUzMEYwMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ1dGlscy5weSI6ICAiNTNDN0JBRSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJxdWFudF9lbmdpbmUucHkiOiAgIjk0OTA2Q0EiLAogICAgICAgICAgICAgICAgICAgICAgICAiYmluYW5jZV93c19jbGllbnQucHkiOiAgIjc3OTQ3RDkiLAogICAgICAgICAgICAgICAgICAgICAgICAid3NnaS5weSI6ICAiQUZFQTdGNiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJBcHAuanN4IjogICJGRTg3RDhCIiwKICAgICAgICAgICAgICAgICAgICAgICAgImFwcC5weSI6ICAiNTNFRjRFRSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJkYi5weSI6ICAiODMxQTBDOCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjbGkucHkiOiAgIjA0MEQ1MjQiLAogICAgICAgICAgICAgICAgICAgICAgICAic2NyYXBlci5weSI6ICAiRUJERDYzRiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb25maWcucHkiOiAgIjk3NEZDRUEiLAogICAgICAgICAgICAgICAgICAgICAgICAidmVyc2lvbi5weSI6ICAiQTI4NTQ4QiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2luaXRfXy5weSI6ICAiRDI4MzVCRiIKICAgICAgICAgICAgICAgICAgICB9Cn0=",
        "summary": "22L | continuity_state.json | .json | 0.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\continuity_state.md",
        "type": ".md",
        "size_kb": 1.7,
        "lines": 36,
        "content": "IyBDb250aW51aXR5IFN0YXRlIC0gQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkCkxhc3QgU3luYzogMjAyNS0xMC0yMSAyMzo1NDoyOApQaGFzZTogUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUKCiMjIENvcmUgRmlsZSBWZXJzaW9ucwp8IG1ldHJpY3MucHkgfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwgMTcyRTM5MSB8CnwgYmx1ZXByaW50LnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDJFMzBGMDEgfAp8IHV0aWxzLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDUzQzdCQUUgfAp8IHF1YW50X2VuZ2luZS5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCA5NDkwNkNBIHwKfCBiaW5hbmNlX3dzX2NsaWVudC5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCA3Nzk0N0Q5IHwKfCB3c2dpLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEFGRUE3RjYgfAp8IEFwcC5qc3ggfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwgRkU4N0Q4QiB8CnwgYXBwLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDUzRUY0RUUgfAp8IGRiLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IDgzMUEwQzggfAp8IGNsaS5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCAwNDBENTI0IHwKfCBzY3JhcGVyLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEVCREQ2M0YgfAp8IGNvbmZpZy5weSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfCA5NzRGQ0VBIHwKfCB2ZXJzaW9uLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEEyODU0OEIgfAp8IF9faW5pdF9fLnB5IHwgMjAyNS0xMC0yMSAyMzo1NDoyOCB8IEQyODM1QkYgfAoKIyMgQmFja2VuZCBIZWFsdGgKdW5oZWFsdGh5CiMjIFJlY2VudCBTbmFwc2hvdHMKfCBUaW1lc3RhbXAgfCBCYWNrZW5kIHwgUGhhc2UgfAp8LS0tLS0tLS0tLS0tfC0tLS0tLS0tLS18LS0tLS0tLXwKfCAyMDI1LTEwLTIxVDEyOjIwOjAwIHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE4OjA3IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjE3OjA2IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxVDEyOjEyOjA2IHwgaGVhbHRoeSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIxIDIzOjUyOjEzIHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjEgMjM6NDk6NTcgfCB1bmhlYWx0aHkgfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgMjAyNS0xMC0yMSAyMzo0Njo0NCB8IHVuaGVhbHRoeSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKfCAyMDI1LTEwLTIxIDIzOjQyOjE1IHwgdW5oZWFsdGh5IHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8IDIwMjUtMTAtMjEgMjM6MzI6MDEgfCB1bmhlYWx0aHkgfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgMjAyNS0xMC0yMSAyMjozMjoxMCB8IHVuaGVhbHRoeSB8IFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIHwKVXB0aW1lIChsYXN0IDEwKTogNC8xMCAtPiA0MCUK",
        "summary": "36L | continuity_state.md | .md | 1.7 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\docs_rehaul_plan.md",
        "type": ".md",
        "size_kb": 5.9,
        "lines": 140,
        "content": "",
        "summary": "140L | docs_rehaul_plan.md | .md | 5.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\index.md",
        "type": ".md",
        "size_kb": 1.6,
        "lines": 39,
        "content": "IyBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQg4oCTIERvY3VtZW50YXRpb24gSW5kZXgKCldlbGNvbWUgdG8gdGhlIHByb2plY3QgZG9jdW1lbnRhdGlvbiBodWIgZm9yIHRoZSAqKkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCoqLgoKVGhpcyByZXBvc2l0b3J5IGRvY3VtZW50cyBib3RoIHRoZSBsaXZlIHRyYWRpbmcgYmFja2VuZCAoYGZ1dHVyZXNib2FyZGApIGFuZCB0aGUKZnJvbnRlbmQgYW5hbHl0aWNzIGRhc2hib2FyZC4gIApFdmVyeSBkb2N1bWVudCBpbiBgL2RvY3NgIGlzIG1haW50YWluZWQgYnkgdGhlICoqQ29udGludWl0eSBGcmFtZXdvcmsqKiB0aHJvdWdoCmF1dG9tYXRlZCBzbmFwc2hvdHMsIHN5bmNzLCBhbmQgcGhhc2UgdHJhY2tpbmcuCgotLS0KCiMjIPCflJcgUXVpY2sgQWNjZXNzCgp8IEFyZWEgfCBEZXNjcmlwdGlvbiB8IEZpbGUgfAp8LS0tLS0tfC0tLS0tLS0tLS0tLS0tfC0tLS0tLXwKfCAqKkFyY2hpdGVjdHVyZSBPdmVydmlldyoqIHwgU3lzdGVtIGRlc2lnbiwgY29tcG9uZW50cywgYW5kIGRhdGEgZmxvdyB8IFthcmNoaXRlY3R1cmUubWRdKGFyY2hpdGVjdHVyZS5tZCkgfAp8ICoqRGV2ZWxvcGVyIEd1aWRlKiogfCBBUEkgcmVmZXJlbmNlLCBlbnZpcm9ubWVudCBzZXR1cCwgYW5kIHRlc3RpbmcgfCBbZGV2ZWxvcGVyX2d1aWRlLm1kXShkZXZlbG9wZXJfZ3VpZGUubWQpIHwKfCAqKlF1YW50IEJsdWVwcmludCoqIHwgUXVhbnRpdGF0aXZlIG1vZGVsIGRlc2lnbiBhbmQgcHJvZ3Jlc3MgdHJhY2tlciB8IFtxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kXShxdWFudF9ibHVlcHJpbnRfc3luY2VkLm1kKSB8CnwgKipDb250aW51aXR5IEZyYW1ld29yayoqIHwgU25hcHNob3QgYW5kIHN5bmMgYXV0b21hdGlvbiBkZXRhaWxzIHwgW2NvbnRpbnVpdHlfZGlhZ3JhbS5tZF0oY29udGludWl0eV9kaWFncmFtLm1kKSB8CnwgKipTdGF0dXMgUmVwb3J0cyoqIHwgQXV0by1nZW5lcmF0ZWQgYmFja2VuZCBoZWFsdGggc3VtbWFyaWVzIHwgW3N0YXR1c19yZXBvcnQubWRdKHN0YXR1c19yZXBvcnQubWQpIHwKCi0tLQoKIyMg8J+TmCBIb3cgRG9jcyBVcGRhdGUKCkFsbCBgLm1kYCBmaWxlcyBpbiB0aGlzIGRpcmVjdG9yeSBhcmUgdXBkYXRlZCBieSBQb3dlclNoZWxsIHByb2ZpbGUgZnVuY3Rpb25zOgoKfCBGdW5jdGlvbiB8IFB1cnBvc2UgfAp8LS0tLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgfCBDYXB0dXJlcyBiYWNrZW5kIHN0YXRlIGFuZCB1cHRpbWUgfAp8IGBJbnZva2UtU3RhdHVzUmVwb3J0YCB8IEdlbmVyYXRlcyB0aGlzIHBoYXNl4oCZcyBzeXN0ZW0gc3VtbWFyeSB8CnwgYEludm9rZS1QaGFzZVRyYWNrYCB8IFVwZGF0ZXMgcXVhbnQgcHJvZ3Jlc3MgdHJhY2tlciB8CnwgYFN5bmMtQ29udGludWl0eWAgfCBSdW5zIGZ1bGwgZG9jICsgYmFja3VwICsgY29tbWl0IGN5Y2xlIHwKClVzZSBgU3luYy1Db250aW51aXR5YCB0byBrZWVwIGRvY3VtZW50YXRpb24gYWxpZ25lZCB3aXRoIHRoZSBsaXZlIHByb2plY3QuCgotLS0KCl9MYXN0IHVwZGF0ZWQgYXV0b21hdGljYWxseSBieSB0aGUgQ29udGludWl0eSBGcmFtZXdvcmsuXwo=",
        "summary": "39L | index.md | .md | 1.6 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\project_context_v3.json",
        "type": ".json",
        "size_kb": 0.5,
        "lines": 14,
        "content": "ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAyMzo1NDoyOCIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kX2hlYWx0aCI6ICAidW5oZWFsdGh5IiwKICAgICJ1cHRpbWVfcGN0IjogIDQwLAogICAgImJhY2tlbmRfbmFtZSI6ICAiZnV0dXJlc2JvYXJkIiwKICAgICJkYl9wYXRoIjogICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIsCiAgICAic3lzdGVtIjogIHsKICAgICAgICAgICAgICAgICAgICJub2RlIjogICJ2MjIuMjAuMCIsCiAgICAgICAgICAgICAgICAgICAidXNlciI6ICAiTGlhbiIsCiAgICAgICAgICAgICAgICAgICAib3MiOiAgIk1pY3Jvc29mdCBXaW5kb3dzIDEwIFBybyIsCiAgICAgICAgICAgICAgICAgICAicHl0aG9uIjogICJQeXRob24gMy4xMy4xIgogICAgICAgICAgICAgICB9Cn0=",
        "summary": "14L | project_context_v3.json | .json | 0.5 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\project_data.json",
        "type": ".json",
        "size_kb": 598.3,
        "lines": 691,
        "content": "",
        "summary": "691L | project_data.json | .json | 598.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\quant_blueprint.md",
        "type": ".md",
        "size_kb": 7.1,
        "lines": 93,
        "content": "",
        "summary": "93L | quant_blueprint.md | .md | 7.1 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\quant_blueprint_synced.md",
        "type": ".md",
        "size_kb": 0.3,
        "lines": 9,
        "content": "IyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZCkKCiMjIEF1dG8tS1BJIFVwZGF0ZSAoMjAyNS0xMC0yMSAyMzo1NCkKfCBNZXRyaWMgfCBWYWx1ZSB8CnwtLS0tLS0tLS18LS0tLS0tLXwKfCAqKldlaWdodGVkIE9JIChVU0QpKiogfCBcJDUuMTlCIHwKfCAqKlBoYXNlKiogfCBQMy42IC0gVVRGOCBMb2dnaW5nICsgUXVhbnRTdW1tYXJ5IFN0YWJsZSB8CnwgKipVcHRpbWUqKiB8IDQwLjAlIHwKfCAqKlN0YXR1cyoqIHwgV2VpZ2h0ZWQgT0kgZnJvbSA1MCBwYWlycyB8Cg==",
        "summary": "9L | quant_blueprint_synced.md | .md | 0.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\quant_progress_tracker.md",
        "type": ".md",
        "size_kb": 8.6,
        "lines": 134,
        "content": "",
        "summary": "134L | quant_progress_tracker.md | .md | 8.6 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\README.md",
        "type": ".md",
        "size_kb": 2.4,
        "lines": 71,
        "content": "IyDwn5OaIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCDigJMgRG9jdW1lbnRhdGlvbiBJbmRleAoKX1VwZGF0ZWQ6IDIwMjUtMTAtMjAgfCBWZXJzaW9uOiB2Mi4zIChQaGFzZSAzIOKAkyBXZWlnaHRlZCBPSSAmIEFsZXJ0cylfCgotLS0KCiMjIPCfp60gQ29yZSBPdmVydmlldwoKLSAqKlByb2plY3Q6KiogUmVhbC10aW1lIENyeXB0byBGdXR1cmVzIFF1YW50IERhc2hib2FyZCAgCi0gKipPd25lcjoqKiBMaWFuIElzYWFjICAKLSAqKkJhY2tlbmQ6KiogRmxhc2sgKyBTUUxBbGNoZW15ICsgU29ja2V0SU8gIAotICoqRnJvbnRlbmQ6KiogVml0ZSArIFRyZW1vciArIFJlY2hhcnRzICAKLSAqKlBoYXNlOioqIFAzIOKAkyBXZWlnaHRlZCBPSSwgVG9wIEwvUywgQWxlcnRzICAKLSAqKkdvYWw6KiogRGV0ZWN0IGRpcmVjdGlvbmFsIGJpYXMgKFo+Mi41LCBMUz4yLCBJbWI+MyUpIGFuZCBzaW11bGF0ZSBjb25mbHVlbmNlIOKGkiBQNCByZXBsYXkuCgotLS0KCiMjIPCflJcgRG9jdW1lbnRhdGlvbiBNYXAKCnwgRmlsZSB8IERlc2NyaXB0aW9uIHwgTGFzdCBVcGRhdGVkIHwKfC0tLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfAp8IFtjb250aW51aXR5X3N0YXRlLm1kXShjb250aW51aXR5X3N0YXRlLm1kKSB8IExpdmUgc3lzdGVtIHNuYXBzaG90IChhdXRvLXVwZGF0ZWQgYnkgUG93ZXJTaGVsbCkgfCBEeW5hbWljIHwKfCBbYXBpX2d1aWRlLm1kXShhcGlfZ3VpZGUubWQpIHwgUkVTVCArIFdTIGVuZHBvaW50cyByZWZlcmVuY2UgfCAyMDI1LTEwLTE4IHwKfCBbcXVhbnRfYmx1ZXByaW50Lm1kXShxdWFudF9ibHVlcHJpbnQubWQpIHwgQXJjaGl0ZWN0dXJlLCBtZXRyaWNzLCBhbmQgcXVhbnQgZW5naW5lZXJpbmcgYmx1ZXByaW50IHwgMjAyNS0xMC0xOCB8CnwgW3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWRdKHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQpIHwgUHJvZ3Jlc3MgYnkgcGhhc2UsIEtQSXMsIGFuZCBtZXRyaWNzIGV2b2x1dGlvbiB8IDIwMjUtMTAtMTggfAp8IFtyb2FkbWFwLm1kXShyb2FkbWFwLm1kKSB8IEV4ZWN1dGlvbiBtYXRyaXggYWNyb3NzIGJhY2tlbmQsIFVYLCBvcHMgfCAyMDI1LTEwLTE4IHwKfCBbdGVzdGluZ19oYXJuZXNzLm1kXSh0ZXN0aW5nX2hhcm5lc3MubWQpIHwgUHl0ZXN0IGFuZCBxdWFudCB2YWxpZGF0aW9uIGhhcm5lc3MgfCAyMDI1LTEwLTE4IHwKCi0tLQoKIyMg8J+nqSBBdXRvbWF0aW9uIFNjcmlwdHMKCnwgU2NyaXB0IHwgRnVuY3Rpb24gfCBDb21tYW5kIHwKfC0tLS0tLS0tLXwtLS0tLS0tLS0tLXwtLS0tLS0tLS0tfAp8IGBnZW5fYmx1ZXByaW50LnB5YCB8IFVwZGF0ZXMgYmx1ZXByaW50IEtQSXMgYW5kIGZvcm11bGFzIHwgYHB5dGhvbiBkb2NzL2dlbl9ibHVlcHJpbnQucHlgIHwKfCBgZ2VuX3RyYWNrZXIucHlgIHwgVXBkYXRlcyBwaGFzZSBwcm9ncmVzcyAmIEtQSXMgZnJvbSBEQiB8IGBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weWAgfAp8IGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCB8IFVwZGF0ZXMgc3lzdGVtIHNuYXBzaG90IGF1dG9tYXRpY2FsbHkgfCBQb3dlclNoZWxsIGZ1bmN0aW9uIHwKCi0tLQoKIyMg8J+nriBRdWFudCBNb2RlbCBTdW1tYXJ5Cgp8IE1ldHJpYyB8IFB1cnBvc2UgfCBQaGFzZSB8CnwtLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IFotU2NvcmUgfCBEZXZpYXRpb24vQW5vbWFseSBkZXRlY3Rpb24gfCBQMiB8CnwgTFMgUmF0aW8gfCBTZW50aW1lbnQgc2tldyB8IFAxIHwKfCBXZWlnaHRlZCBPSSB8IFZvbHVtZS13ZWlnaHRlZCBPSSBzdHJlbmd0aCB8IFAzIHwKfCBDb25mbHVlbmNlIHwgQ29tYmluZWQgYmlhcyB0cmlnZ2VyIChaL0xTL0ltYikgfCBQMyB8CnwgQ29yciBSZXBsYXkgfCBSb2xsaW5nIGNvcnJlbGF0aW9uIHJlcGxheSBzaW0gfCBQNCB8CgotLS0KCiMjIPCfp7EgUGhhc2UgU3VtbWFyeQoKfCBQaGFzZSB8IEZvY3VzIHwgU3RhdHVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tfAp8IDEuNSB8IFNjYWZmb2xkICsgV1MgRW1pdCB8IOKchSBDb21wbGV0ZSB8CnwgMiB8IENvcmUgVEYgKyBFeHBvcnRzIHwg4pyFIENvbXBsZXRlIHwKfCAzIHwgV2VpZ2h0ZWQgT0kgKyBBbGVydHMgfCDwn5SEIEluIFByb2dyZXNzIHwKfCA0IHwgUmVwbGF5ICsgQ29yciBTaW0gfCDij7MgUGxhbm5lZCB8CgotLS0KCiMjIPCfp6ogVGVzdGluZyBIb29rcwoKUnVuIHRoZSBmdWxsIHZhbGlkYXRpb24gaGFybmVzczoKCmBgYHBvd2Vyc2hlbGwKcHl0ZXN0IC1xCmN1cmwgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9tZXRyaWNzP3RmPTE1bSB8IGpxIGxlbmd0aApweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQo=",
        "summary": "71L | README.md | .md | 2.4 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\roadmap.md",
        "type": ".md",
        "size_kb": 6.0,
        "lines": 43,
        "content": "",
        "summary": "43L | roadmap.md | .md | 6.0 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\status_report.md",
        "type": ".md",
        "size_kb": 2.6,
        "lines": 103,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIDIwMjUtMTAtMjEgMjM6NTQ6MjggIAoqKlBoYXNlOioqIFAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlICAKKipCYWNrZW5kOioqIGZ1dHVyZXNib2FyZCAgCioqTWFpbnRhaW5lcjoqKiBMaWFuIElzYWFjICAKCi0tLQoKIyMgT3ZlcnZpZXcKCnwgRmllbGQgfCBWYWx1ZSB8CnwtLS0tLS0tfC0tLS0tLS18CnwgKipQaGFzZSoqIHwgUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUgfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHVuaGVhbHRoeSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwgNDAuMCAlIHwKfCAqKlN5c3RlbSoqIHwgTWljcm9zb2Z0IFdpbmRvd3MgMTAgUHJvIHwKfCAqKkRhdGFiYXNlIFBhdGgqKiB8IGJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIHwKCi0tLQoKIyMgQmFja2VuZCBTdW1tYXJ5CgoqKkxhc3QgU25hcHNob3Q6KiogMjAyNS0xMC0yMSAyMzo1NDoyOCAgCioqSGVhbHRoIENoZWNrOioqIHVuaGVhbHRoeSAgCgojIyMgS2V5IENvbXBvbmVudHMKfCBGaWxlIHwgSGFzaCB8IExhc3QgVXBkYXRlZCB8CnwtLS0tLS18LS0tLS0tfC0tLS0tLS0tLS0tLS0tLXwKfCBtZXRyaWNzLnB5IHwge3toYXNoX21ldHJpY3N9fSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfAp8IGRiLnB5IHwge3toYXNoX2RifX0gfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwKfCBhcHAucHkgfCB7e2hhc2hfYXBwfX0gfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwKfCBzY3JhcGVyLnB5IHwge3toYXNoX3NjcmFwZXJ9fSB8IDIwMjUtMTAtMjEgMjM6NTQ6MjggfAp8IEFwcC5qc3ggfCB7e2hhc2hfYXBwanN4fX0gfCAyMDI1LTEwLTIxIDIzOjU0OjI4IHwKCi0tLQoKIyMgUXVhbnQgUHJvZ3Jlc3MgU25hcHNob3QKCnwgUGhhc2UgfCAlIENvbXBsZXRlIHwgU3RhdHVzIHwgTm90ZXMgfAp8LS0tLS0tLS18LS0tLS0tLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwKfCAxLjUgU2NhZmZvbGQgfCB7e3BoYXNlXzE1fX0gfCBEb25lIHwgU2VlZCArIFdTIFN0YWJsZSB8CnwgMiBDb3JlIHwge3twaGFzZV8yfX0gfCBEb25lIHwgVEYgU3dpdGNoICsgRXhwb3J0cyB8CnwgMyBBZHYgfCB7e3BoYXNlXzN9fSB8IEluIFByb2dyZXNzIHwgV2VpZ2h0ZWQgT0kgLyBDb25mbHVlbmNlIHwKfCA0IEdyYW5kIHwge3twaGFzZV80fX0gfCBQbGFubmVkIHwgUmVwbGF5IFNpbSBQbGFubmVkIHwKCiMjIyBRdWFudCBLUElzCnwgS1BJIHwgQ3VycmVudCB8IFRhcmdldCB8IFRyZW5kIHwKfC0tLS0tLXwtLS0tLS0tLS0tfC0tLS0tLS0tLXwtLS0tLS0tLXwKfCBEQiBSb3dzIHwge3tkYl9yb3dzfX0gfCA+NTAwIHwge3tkYl90cmVuZH19IHwKfCBBdmcgWi1TY29yZSB8IHt7YXZnX3p9fSB8IDwyLjAgfCB7e3pfdHJlbmR9fSB8CnwgQWxlcnQgQWNjdXJhY3kgfCB7e2FsZXJ0X2FjY319IHwgPjk1JSB8IHt7YWxlcnRfdHJlbmR9fSB8CnwgQ29uZmx1ZW5jZSBIaXRzIHwge3tjb25mbHVlbmNlX2hpdHN9fSB8ID4wLjY2IHwge3tjb25mbHVlbmNlX3RyZW5kfX0gfAp8IFdTIFVwdGltZSB8IHt7d3NfdXB0aW1lfX0gfCA5OS45JSB8IHt7d3NfdHJlbmR9fSB8CgotLS0KCiMjIFN5c3RlbSBDb250ZXh0CgoqKlB5dGhvbjoqKiBQeXRob24gMy4xMy4xICAKKipOb2RlOioqIHYyMi4yMC4wICAKKipPUzoqKiBNaWNyb3NvZnQgV2luZG93cyAxMCBQcm8gIAoqKlVzZXI6KiogTGlhbiAgCgoqKlJlcG8gU3VtbWFyeToqKiAgCmBgYHRleHQKCmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB1bmhlYWx0aHkgIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6KiogQ2hlY2sgL2hlYWx0aCByb3V0ZSBhbmQgYmFja2VuZCBsb2dzICAKLSAqKkxhc3QgS25vd24gSGVhbHRoeSBTbmFwc2hvdDoqKiAyMDI1LTEwLTIxIDIzOjU0OjM0ICAKCi0tLQoKIyMgUmVjb21tZW5kYXRpb25zCgoxLiBWZXJpZnkgYC9oZWFsdGhgIGVuZHBvaW50IHJlc3BvbnNlLiAgCjIuIENoZWNrIGBiYWNrZW5kL2xvZ3MvYXBwLmxvZ2AgZm9yIFVURi04IGVuY29kaW5nIGVycm9ycy4gIAozLiBSZS1ydW4gYEludm9rZS1Db250aW51aXR5U25hcHNob3RgIGFmdGVyIGNvbmZpcm1pbmcgYmFja2VuZCBmaXguICAKNC4gQ29tbWl0IHdpdGggYEludm9rZS1QaGFzZVRyYWNrIC1wIFAzLjcgLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCgotLS0KQmFja2VuZCBIZWFsdGh5IC0gMjAyNS0xMC0yMSAyMzo1NDozNA==",
        "summary": "103L | status_report.md | .md | 2.6 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\status_report_template.md",
        "type": ".md",
        "size_kb": 2.5,
        "lines": 100,
        "content": "IyBQcm9qZWN0IFN0YXR1cyBSZXBvcnQgVGVtcGxhdGUgLSBDcnlwdG8gRnV0dXJlcyBEYXNoYm9hcmQKCioqR2VuZXJhdGVkOioqIHt7dGltZXN0YW1wfX0gIAoqKlBoYXNlOioqIHt7cGhhc2V9fSAgCioqQmFja2VuZDoqKiB7e2JhY2tlbmRfbmFtZX19ICAKKipNYWludGFpbmVyOioqIExpYW4gSXNhYWMgIAoKLS0tCgojIyBPdmVydmlldwoKfCBGaWVsZCB8IFZhbHVlIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAqKlBoYXNlKiogfCB7e3BoYXNlfX0gfAp8ICoqQmFja2VuZCBIZWFsdGgqKiB8IHt7YmFja2VuZF9oZWFsdGh9fSB8CnwgKipVcHRpbWUgKDctU2FtcGxlKSoqIHwge3t1cHRpbWVfcGN0fX0gJSB8CnwgKipTeXN0ZW0qKiB8IHt7c3lzdGVtX2luZm99fSB8CnwgKipEYXRhYmFzZSBQYXRoKiogfCB7e2RiX3BhdGh9fSB8CgotLS0KCiMjIEJhY2tlbmQgU3VtbWFyeQoKKipMYXN0IFNuYXBzaG90OioqIHt7dGltZXN0YW1wfX0gIAoqKkhlYWx0aCBDaGVjazoqKiB7e2hlYWx0aF9tZXNzYWdlfX0gIAoKIyMjIEtleSBDb21wb25lbnRzCnwgRmlsZSB8IEhhc2ggfCBMYXN0IFVwZGF0ZWQgfAp8LS0tLS0tfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS18CnwgbWV0cmljcy5weSB8IHt7aGFzaF9tZXRyaWNzfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBkYi5weSB8IHt7aGFzaF9kYn19IHwge3t0aW1lc3RhbXB9fSB8CnwgYXBwLnB5IHwge3toYXNoX2FwcH19IHwge3t0aW1lc3RhbXB9fSB8Cnwgc2NyYXBlci5weSB8IHt7aGFzaF9zY3JhcGVyfX0gfCB7e3RpbWVzdGFtcH19IHwKfCBBcHAuanN4IHwge3toYXNoX2FwcGpzeH19IHwge3t0aW1lc3RhbXB9fSB8CgotLS0KCiMjIFF1YW50IFByb2dyZXNzIFNuYXBzaG90Cgp8IFBoYXNlIHwgJSBDb21wbGV0ZSB8IFN0YXR1cyB8IE5vdGVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tLS0tLS18LS0tLS0tLS18LS0tLS0tLS18CnwgMS41IFNjYWZmb2xkIHwge3twaGFzZV8xNX19IHwgRG9uZSB8IFNlZWQgKyBXUyBTdGFibGUgfAp8IDIgQ29yZSB8IHt7cGhhc2VfMn19IHwgRG9uZSB8IFRGIFN3aXRjaCArIEV4cG9ydHMgfAp8IDMgQWR2IHwge3twaGFzZV8zfX0gfCBJbiBQcm9ncmVzcyB8IFdlaWdodGVkIE9JIC8gQ29uZmx1ZW5jZSB8CnwgNCBHcmFuZCB8IHt7cGhhc2VfNH19IHwgUGxhbm5lZCB8IFJlcGxheSBTaW0gUGxhbm5lZCB8CgojIyMgUXVhbnQgS1BJcwp8IEtQSSB8IEN1cnJlbnQgfCBUYXJnZXQgfCBUcmVuZCB8CnwtLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS18CnwgREIgUm93cyB8IHt7ZGJfcm93c319IHwgPjUwMCB8IHt7ZGJfdHJlbmR9fSB8CnwgQXZnIFotU2NvcmUgfCB7e2F2Z196fX0gfCA8Mi4wIHwge3t6X3RyZW5kfX0gfAp8IEFsZXJ0IEFjY3VyYWN5IHwge3thbGVydF9hY2N9fSB8ID45NSUgfCB7e2FsZXJ0X3RyZW5kfX0gfAp8IENvbmZsdWVuY2UgSGl0cyB8IHt7Y29uZmx1ZW5jZV9oaXRzfX0gfCA+MC42NiB8IHt7Y29uZmx1ZW5jZV90cmVuZH19IHwKfCBXUyBVcHRpbWUgfCB7e3dzX3VwdGltZX19IHwgOTkuOSUgfCB7e3dzX3RyZW5kfX0gfAoKLS0tCgojIyBTeXN0ZW0gQ29udGV4dAoKKipQeXRob246Kioge3tweXRob25fdmVyc2lvbn19ICAKKipOb2RlOioqIHt7bm9kZV92ZXJzaW9ufX0gIAoqKk9TOioqIHt7b3NfdmVyc2lvbn19ICAKKipVc2VyOioqIHt7dXNlcn19ICAKCioqUmVwbyBTdW1tYXJ5OioqICAKYGBgdGV4dAp7e3JlcG9fc3VtbWFyeX19CmBgYAoKLS0tCgojIyBEaWFnbm9zdGljIFN1bW1hcnkKCi0gKipCYWNrZW5kIFN0YXR1czoqKiB7e2JhY2tlbmRfaGVhbHRofX0gIAotICoqUHJvYmFibGUgQ2F1c2UgKGlmIHVuaGVhbHRoeSk6Kioge3tkaWFnbm9zdGljX2hpbnR9fSAgCi0gKipMYXN0IEtub3duIEhlYWx0aHkgU25hcHNob3Q6Kioge3tsYXN0X2hlYWx0aHlfdGltZXN0YW1wfX0gIAoKLS0tCgojIyBSZWNvbW1lbmRhdGlvbnMKCjEuIFZlcmlmeSBgL2hlYWx0aGAgZW5kcG9pbnQgcmVzcG9uc2UuICAKMi4gQ2hlY2sgYGJhY2tlbmQvbG9ncy9hcHAubG9nYCBmb3IgVVRGLTggZW5jb2RpbmcgZXJyb3JzLiAgCjMuIFJlLXJ1biBgSW52b2tlLUNvbnRpbnVpdHlTbmFwc2hvdGAgYWZ0ZXIgY29uZmlybWluZyBiYWNrZW5kIGZpeC4gIAo0LiBDb21taXQgd2l0aCBgSW52b2tlLVBoYXNlVHJhY2sgLXAge3tuZXh0X3BoYXNlfX0gLW0gIkRvY3MgKyBTdGFiaWxpdHkgVXBkYXRlImAuICAKCi0tLQoKIyMgTmV4dCBTdGVwcwoKfCBHb2FsIHwgVGFyZ2V0IFBoYXNlIHwgRVRBIHwKfC0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfC0tLS0tfAp8IFdlaWdodGVkIE9JIChCeWJpdCBtZXJnZSkgfCBQMy43IHwge3tldGFfd2VpZ2h0ZWR9fSB8CnwgVGllcjIgQWxlcnRzIChDb25mbHVlbmNlPjAuNjYpIHwgUDMuNyB8IHt7ZXRhX2FsZXJ0c319IHwKfCBSZXBsYXkgRW5naW5lIEFjdGl2YXRpb24gfCBQNC4wIHwge3tldGFfcmVwbGF5fX0gfAoKLS0tCgoqKkVuZCBvZiBTdGF0dXMgUmVwb3J0IFRlbXBsYXRlKiogIAoqVG8gYmUgcG9wdWxhdGVkIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgZWFjaCBzdWNjZXNzZnVsIGBTeW5jLUNvbnRpbnVpdHlgIHJ1bi4qCg==",
        "summary": "100L | status_report_template.md | .md | 2.5 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\testing_harness.md",
        "type": ".md",
        "size_kb": 1.3,
        "lines": 21,
        "content": "IyBUZXN0aW5nIEhhcm5lc3MgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpGb2N1czogU21va2UgKDw1cyksIEJlbmNoICg8MTBzLzUwIHBhaXJzKSwgUXVhbnQgVmFsIChaIGZpbml0ZS9mYWxzZS1wb3MpLiBSdW46IHB5dGVzdCAtcSA7IGNvZGVfZXhlY3V0aW9uIHNuaXBwZXRzLgoKIyMgUHl0ZXN0IFN1aXRlIChweXRlc3QuaW5pICsgRmlsZXMpCi0gdGVzdF9tZXRyaWNzLnB5OiBgZGVmIHRlc3RfZ2V0X2FsbCgpOiBtZXRyaWNzID0gZ2V0X2FsbF9tZXRyaWNzKHRmPScxNW0nKTsgYXNzZXJ0IGxlbihtZXRyaWNzKSA9PSAyMDsgYXNzZXJ0IGFsbChucC5pc2Zpbml0ZShtWyd6X3Njb3JlJ10pIGZvciBtIGluIG1ldHJpY3MpYAotIHRlc3Rfd3MucHk6IGBkZWYgdGVzdF9lbWl0KCk6IC4uLiBhc3NlcnQgJ21ldHJpY3NfdXBkYXRlJyBpbiBzb2NrZXRpby5ldmVudHNgCi0gQmVuY2g6IGBweXRlc3QgLS1iZW5jaG1hcmstb25seWAgKFRhcmdldDogPDVzIGxvYWQsIG5vIGJsYW5rcykuCgojIyBUb29sIFNuaXBwZXRzIChjb2RlX2V4ZWN1dGlvbikKfCBUZXN0IHwgU25pcHBldCB8IEV4cGVjdGVkIHwKfC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBaIEZpbml0ZSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IHogPSBucC5yYW5kb20ubm9ybWFsKDAsMSwyMCk7IGFzc2VydCBucC5hbGwobnAuaXNmaW5pdGUoeikpICYgKG5wLmFicyh6KSA8IDEwKWAgfCBUcnVlIHwKfCBXZWlnaHRlZCBPSSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IG9pID0gbnAuYXJyYXkoWzFlOSwyZTldKTsgdm9scyA9IG5wLmFycmF5KFsxZTksMmU5XSk7IHcgPSBucC5hdmVyYWdlKG9pLCB3ZWlnaHRzPXZvbHMvdm9scy5zdW0oKSk7IHByaW50KHcpYCB8IDEuNjY2ZTkgfAp8IENvbmZsdWVuY2UgfCBgZGVmIGNhbGMoeixscyxpbWIpOiByZXR1cm4gc3VtKFt6PjIuNSwgbHM+MiwgYWJzKGltYik+M10pLzM7IHByaW50KGNhbGMoMi42LDIuMSwtMy4xKSlgIHwgMS4wIHwKfCBEQiBSb3dzIHwgQXMgZ2VuX3RyYWNrZXIucHkgfCA+NTgxIHwKCiMjIDI0aCBIYXJuZXNzIChQUyBDaGFpbikKYGBgcG93ZXJzaGVsbApweXRlc3QgLXEgOyBjdXJsIC9hcGkvbWV0cmljcz90Zj0xNW0gfCBqcSAnbGVuZ3RoJyA7IEdldC1Db250ZW50IGJhY2tlbmQvbG9ncy9hcHAubG9nIC1UYWlsIDEwIHwgU2VsZWN0LVN0cmluZyAiZW1pdHxlcnJvciIgOyBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQojIE91dHB1dDogLi4uLi4uLi4gMjAgOyBFbWl0dGVkMjAgKG5vIGVycm9yKQ==",
        "summary": "21L | testing_harness.md | .md | 1.3 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\z_history.json",
        "type": ".json",
        "size_kb": 0.1,
        "lines": 1,
        "content": "Wy0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1LCAtMC4wMDQzMDczMTg3MTYwNDYxOTUsIC0wLjAwNDMwNzMxODcxNjA0NjE5NSwgLTAuMDA0MzA3MzE4NzE2MDQ2MTk1XQ==",
        "summary": "1L | z_history.json | .json | 0.1 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\autogen\\codegen_v1.py",
        "type": ".py",
        "size_kb": 5.9,
        "lines": 173,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKY29kZWdlbl92MS5weSDigJQgRnVsbCBDb250aW51aXR5IEV4cG9ydCAoRFItUDIgSW50ZWdyYXRlZCkKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpTY2FucyBwcm9qZWN0IGRpcmVjdG9yaWVzIGFuZCBleHBvcnRzIHNvdXJjZSBmaWxlcyBpbnRvIGEgc2luZ2xlIEpTT04gZmlsZQp3aXRoIGNvbnRleHQgbWV0YWRhdGEgKHBoYXNlLCB1cHRpbWUpIHB1bGxlZCBmcm9tIGNvbnRpbnVpdHkgZXhwb3J0cy4KCk91dHB1dHM6CiAtIGRvY3MvcHJvamVjdF9kYXRhLmpzb24KIC0gZG9jcy9jb2RlZ2VuX2luZGV4Lm1kCgpVc2FnZToKICBjZCA8cHJvamVjdF9yb290PgogIHB5dGhvbiBkb2NzL2F1dG9nZW4vY29kZWdlbl92MS5weQoiIiIKCmltcG9ydCBqc29uCmltcG9ydCBiYXNlNjQKaW1wb3J0IG9zCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQoKIyA9PT0gQ09ORklHID09PQpQUk9KRUNUX1JPT1QgPSBQYXRoKF9fZmlsZV9fKS5yZXNvbHZlKCkucGFyZW50LnBhcmVudC5wYXJlbnQgICMgYXV0b2dlbiDihpIgZG9jcyDihpIgcm9vdApET0NTX0RJUiA9IFBST0pFQ1RfUk9PVCAvICJkb2NzIgpPVVRQVVRfSlNPTiA9IERPQ1NfRElSIC8gInByb2plY3RfZGF0YS5qc29uIgpPVVRQVVRfTUQgPSBET0NTX0RJUiAvICJjb2RlZ2VuX2luZGV4Lm1kIgoKIyBEaXJlY3RvcmllcyB0byBpbmNsdWRlIChyZWxhdGl2ZSB0byBQUk9KRUNUX1JPT1QpCkNPREVfRElSUyA9IFsKICAgICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQiLAogICAgImZyb250ZW5kL3NyYyIsCiAgICAiYmFja2VuZC90ZXN0cyIsCiAgICAiZnJvbnRlbmQvcHVibGljIiwKICAgICJkb2NzIgpdCgojIEZpbGUgdHlwZXMgdG8gaW5jbHVkZQpBTExPV0VEX0VYVFMgPSB7CiAgICAiLnB5IiwgIi5qcyIsICIuanN4IiwgIi50cyIsICIudHN4IiwgIi5qc29uIiwgIi5tZCIsCiAgICAiLmNzcyIsICIuc2NzcyIsICIuaHRtbCIsICIueW1sIiwgIi55YW1sIiwgIi50b21sIiwgIi50eHQiLCAiLmluaSIKfQoKIyBNYXggZmlsZSBzaXplIChpbiBieXRlcykKTUFYX0ZJTEVfU0laRSA9IDEwMDBfMDAwICAjIH4xIE1CIGJ5IGRlZmF1bHQ7IGFkanVzdCBhcyBuZWVkZWQKCiMgQ29udGV4dCBzb3VyY2VzICh0cnkgcHJvamVjdF9jb250ZXh0X3YzLmpzb24sIHRoZW4gY29udGludWl0eV9zdGF0ZS5qc29uKQpDT05URVhUX0NBTkRJREFURVMgPSBbCiAgICBET0NTX0RJUiAvICJwcm9qZWN0X2NvbnRleHRfdjMuanNvbiIsCiAgICBET0NTX0RJUiAvICJjb250aW51aXR5X3N0YXRlLmpzb24iLAogICAgRE9DU19ESVIgLyAiY29udGludWl0eV9zdGF0ZS5tZCIKXQoKZGVmIGxvYWRfY29udGV4dCgpOgogICAgY3R4ID0ge30KICAgIGZvciBwIGluIENPTlRFWFRfQ0FORElEQVRFUzoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlmIHAuZXhpc3RzKCk6CiAgICAgICAgICAgICAgICBpZiBwLnN1ZmZpeC5sb3dlcigpID09ICIuanNvbiI6CiAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKHAsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgICAgICAgICAgICAgY3R4ID0ganNvbi5sb2FkKGYpCiAgICAgICAgICAgICAgICAgICAgICAgICMgbm9ybWFsaXplIGtleXMgZm9yIHRvcC1sZXZlbCBwcm9qZWN0IG1ldGFkYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICdwaGFzZScgaW4gY3R4OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN0eAogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAjIHNpbXBsZSBwYXJzZSBmcm9tIGNvbnRpbnVpdHlfc3RhdGUubWQgZm9yIGEgZmV3IGZpZWxkcwogICAgICAgICAgICAgICAgICAgIHRleHQgPSBwLnJlYWRfdGV4dChlbmNvZGluZz0idXRmLTgiKQogICAgICAgICAgICAgICAgICAgICMgdHJ5IHRvIGV4dHJhY3QgTGFzdCBTeW5jIGFuZCBQaGFzZSBsaW5lcwogICAgICAgICAgICAgICAgICAgIGZvciBsaW5lIGluIHRleHQuc3BsaXRsaW5lcygpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBsaW5lLnN0YXJ0c3dpdGgoIkxhc3QgU3luYzoiKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5zZXRkZWZhdWx0KCJ0aW1lc3RhbXAiLCBsaW5lLnNwbGl0KCI6IiwxKVsxXS5zdHJpcCgpKQogICAgICAgICAgICAgICAgICAgICAgICBpZiBsaW5lLnN0YXJ0c3dpdGgoIlBoYXNlOiIpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnNldGRlZmF1bHQoInBoYXNlIiwgbGluZS5zcGxpdCgiOiIsMSlbMV0uc3RyaXAoKSkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICBwYXNzICAjIEZpeGVkOiBJbmRlbnQgbWF0Y2hlcyB0cnkgKHVuZGVyIGZvciBsb29wKQogICAgcmV0dXJuIGN0eAoKZGVmIHNhZmVfYjY0KHM6IHN0cikgLT4gc3RyOgogICAgcmV0dXJuIGJhc2U2NC5iNjRlbmNvZGUocy5lbmNvZGUoInV0Zi04IikpLmRlY29kZSgiYXNjaWkiKQoKZGVmIHN1bW1hcml6ZV9maWxlKHBhdGg6IFBhdGgpOgogICAgdHJ5OgogICAgICAgIHRleHQgPSBwYXRoLnJlYWRfdGV4dChlbmNvZGluZz0idXRmLTgiLCBlcnJvcnM9Imlnbm9yZSIpCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIHJldHVybiBOb25lCiAgICBsaW5lcyA9IGxlbih0ZXh0LnNwbGl0bGluZXMoKSkKICAgIHNpemVfa2IgPSByb3VuZChwYXRoLnN0YXQoKS5zdF9zaXplIC8gMTAyNCwgMSkKICAgIHJldHVybiB7CiAgICAgICAgInBhdGgiOiBzdHIocGF0aC5yZWxhdGl2ZV90byhQUk9KRUNUX1JPT1QpKSwKICAgICAgICAidHlwZSI6IHBhdGguc3VmZml4Lmxvd2VyKCksCiAgICAgICAgInNpemVfa2IiOiBzaXplX2tiLAogICAgICAgICJsaW5lcyI6IGxpbmVzLAogICAgICAgICJjb250ZW50Ijogc2FmZV9iNjQodGV4dCksCiAgICAgICAgInN1bW1hcnkiOiBmIntsaW5lc31MIHwge3BhdGgubmFtZX0gfCB7cGF0aC5zdWZmaXgubG93ZXIoKX0gfCB7c2l6ZV9rYn0gS0IiCiAgICB9CgpkZWYgZ2VuX2NvZGVfc2VjdGlvbigpOgogICAgZmlsZXMgPSBbXQogICAgZm9yIGRpcl9yZWwgaW4gQ09ERV9ESVJTOgogICAgICAgIGRpcl9wYXRoID0gUFJPSkVDVF9ST09UIC8gZGlyX3JlbAogICAgICAgIGlmIG5vdCBkaXJfcGF0aC5leGlzdHMoKToKICAgICAgICAgICAgIyBza2lwIG1pc3NpbmcgZGlyZWN0b3JpZXMKICAgICAgICAgICAgY29udGludWUKICAgICAgICBmb3IgZmlsZV9wYXRoIGluIGRpcl9wYXRoLnJnbG9iKCcqJyk6CiAgICAgICAgICAgIGlmIG5vdCBmaWxlX3BhdGguaXNfZmlsZSgpOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgc3VmZml4ID0gZmlsZV9wYXRoLnN1ZmZpeC5sb3dlcigpCiAgICAgICAgICAgIGlmIHN1ZmZpeCBpbiBBTExPV0VEX0VYVFMgYW5kIGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSA8IE1BWF9GSUxFX1NJWkU6CiAgICAgICAgICAgICAgICBlbnRyeSA9IHN1bW1hcml6ZV9maWxlKGZpbGVfcGF0aCkKICAgICAgICAgICAgICAgIGlmIGVudHJ5OgogICAgICAgICAgICAgICAgICAgIGZpbGVzLmFwcGVuZChlbnRyeSkKICAgIHJldHVybiB7ImZpbGVzIjogZmlsZXN9ICAjIEZpeGVkOiBFbnN1cmUgY3Jpc3AgaW5kZW50IGF0IGZ1bmMgbGV2ZWwKCmRlZiB3cml0ZV9qc29uX3NhZmUocGF0aDogUGF0aCwgZGF0YSk6CiAgICB0bXAgPSBwYXRoLndpdGhfc3VmZml4KCIudG1wIikKICAgIHdpdGggb3Blbih0bXAsICJ3IiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICBqc29uLmR1bXAoZGF0YSwgZiwgaW5kZW50PTIsIGVuc3VyZV9hc2NpaT1GYWxzZSkKICAgIHRtcC5yZXBsYWNlKHBhdGgpCgpkZWYgd3JpdGVfaW5kZXhfbWQocGF0aDogUGF0aCwgcHJvamVjdF9tZXRhLCBmaWxlcyk6CiAgICBsaW5lcyA9IFtdCiAgICB0cyA9IHByb2plY3RfbWV0YS5nZXQoImxhc3Rfc3luYyIpIG9yIHByb2plY3RfbWV0YS5nZXQoInVwZGF0ZWQiKSBvciBkYXRldGltZS5ub3coKS5zdHJmdGltZSgiJVktJW0tJWQgJUg6JU06JVMiKQogICAgdmVyc2lvbiA9IHByb2plY3RfbWV0YS5nZXQoInZlcnNpb24iLCAidjAuMCIpCiAgICBwaGFzZSA9IHByb2plY3RfbWV0YS5nZXQoInBoYXNlIiwgIlVua25vd24iKQogICAgdXB0aW1lID0gcHJvamVjdF9tZXRhLmdldCgidXB0aW1lX3BjdCIsICJOL0EiKQogICAgbGluZXMuYXBwZW5kKGYiIyBDb2RlIEV4cG9ydCBJbmRleCAtIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCAoe3ZlcnNpb259KSIpCiAgICBsaW5lcy5hcHBlbmQoIiIpCiAgICBsaW5lcy5hcHBlbmQoZiJfTGFzdCB1cGRhdGVkOiB7dHN9XyIpCiAgICBsaW5lcy5hcHBlbmQoIiIpCiAgICBsaW5lcy5hcHBlbmQoZiJ8IEZpbGUgfCBUeXBlIHwgTGluZXMgfCBTaXplIChLQikgfCBQYXRoIHwiKQogICAgbGluZXMuYXBwZW5kKGYifC0tLS0tLXwtLS0tLS18LS0tLS0tLTp8LS0tLS0tLS0tOnwtLS0tLS18IikKICAgIGZvciBmIGluIHNvcnRlZChmaWxlcywga2V5PWxhbWJkYSB4OiB4WyJwYXRoIl0pOgogICAgICAgIGxpbmVzLmFwcGVuZChmInwge2ZbJ3BhdGgnXS5zcGxpdCgnLycpWy0xXX0gfCB7ZlsndHlwZSddfSB8IHtmWydsaW5lcyddfSB8IHtmWydzaXplX2tiJ119IHwge2ZbJ3BhdGgnXX0gfCIpCiAgICBsaW5lcy5hcHBlbmQoIiIpCiAgICBsaW5lcy5hcHBlbmQoZiJfVG90YWwgRmlsZXM6IHtsZW4oZmlsZXMpfSB8IFBoYXNlOiB7cGhhc2V9IHwgVXB0aW1lOiB7dXB0aW1lfV8iKQogICAgY29udGVudCA9ICJcbiIuam9pbihsaW5lcykKICAgIHRtcCA9IHBhdGgud2l0aF9zdWZmaXgoIi50bXAubWQiKQogICAgd2l0aCBvcGVuKHRtcCwgInciLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmaDoKICAgICAgICBmaC53cml0ZShjb250ZW50KQogICAgdG1wLnJlcGxhY2UocGF0aCkKCmRlZiBtYWluKCk6CiAgICBET0NTX0RJUi5ta2RpcihwYXJlbnRzPVRydWUsIGV4aXN0X29rPVRydWUpCiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgcHJvamVjdF9tZXRhID0gewogICAgICAgICJuYW1lIjogIkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCIsCiAgICAgICAgInZlcnNpb24iOiAidjEuMCIsCiAgICAgICAgInBoYXNlIjogY3R4LmdldCgicGhhc2UiLCAiVW5rbm93biIpLAogICAgICAgICJ1cHRpbWVfcGN0IjogY3R4LmdldCgidXB0aW1lX3BjdCIsIGN0eC5nZXQoInVwdGltZSIsICJOL0EiKSksCiAgICAgICAgImJhY2tlbmRfc3RhdHVzIjogY3R4LmdldCgiYmFja2VuZF9oZWFsdGgiLCBjdHguZ2V0KCJiYWNrZW5kIiwgInVua25vd24iKSksCiAgICAgICAgImxhc3Rfc3luYyI6IGN0eC5nZXQoInRpbWVzdGFtcCIsIGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTTolUyIpKQogICAgfQoKICAgIGNvZGVfc2VjdGlvbiA9IGdlbl9jb2RlX3NlY3Rpb24oKQogICAgdG90YWxfZmlsZXMgPSBsZW4oY29kZV9zZWN0aW9uWyJmaWxlcyJdKQoKICAgIG91dCA9IHsKICAgICAgICAicHJvamVjdCI6IHByb2plY3RfbWV0YSwKICAgICAgICAiY29kZSI6IGNvZGVfc2VjdGlvbiwKICAgICAgICAibWV0YWRhdGEiOiB7CiAgICAgICAgICAgICJ1cGRhdGVkIjogZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVZLSVtLSVkICVIOiVNOiVTIiksCiAgICAgICAgICAgICJ0b3RhbF9maWxlcyI6IHRvdGFsX2ZpbGVzLAogICAgICAgICAgICAibWF4X2ZpbGVfc2l6ZV9rYiI6IHJvdW5kKE1BWF9GSUxFX1NJWkUgLyAxMDI0LCAxKQogICAgICAgIH0KICAgIH0KCiAgICB3cml0ZV9qc29uX3NhZmUoT1VUUFVUX0pTT04sIG91dCkKICAgIHdyaXRlX2luZGV4X21kKE9VVFBVVF9NRCwgcHJvamVjdF9tZXRhLCBjb2RlX3NlY3Rpb25bImZpbGVzIl0pCgogICAgcHJpbnQoZiJFeHBvcnQgQ29tcGxldGU6IHt0b3RhbF9maWxlc30gZmlsZXMgc2F2ZWQgLT4ge09VVFBVVF9KU09OfSIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigp",
        "summary": "173L | codegen_v1.py | .py | 5.9 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\autogen\\gen_blueprint_v2.py",
        "type": ".py",
        "size_kb": 2.8,
        "lines": 82,
        "content": "IyBnZW5fYmx1ZXByaW50X3YyLnB5IOKAkyBEUi1QMiBJbnRlZ3JhdGlvbiAoQ29udGV4dC1Bd2FyZSwgQXV0b0RvY3MgUmVhZHkpCiMgVXNhZ2U6IGNkIGRvY3MvYXV0b2dlbiA7IHB5dGhvbiBnZW5fYmx1ZXByaW50X3YyLnB5CmltcG9ydCBzcWxpdGUzCmltcG9ydCBwYW5kYXMgYXMgcGQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBqc29uCmltcG9ydCBvcwppbXBvcnQgcmUKaW1wb3J0IHRlbXBmaWxlCmltcG9ydCBzaHV0aWwKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgpDT05URVhUX1BBVEggPSBQYXRoKHIiRTpcVHJhZGluZ1xjcnlwdG8tZnV0dXJlcy1kYXNoYm9hcmRcZG9jc1xwcm9qZWN0X2NvbnRleHRfdjMuanNvbiIpCk9VVFBVVF9QQVRIID0gUGF0aChyIkU6XFRyYWRpbmdcY3J5cHRvLWZ1dHVyZXMtZGFzaGJvYXJkXGRvY3NccXVhbnRfYmx1ZXByaW50X3N5bmNlZC5tZCIpCgpkZWYgY2xlYW5fb2xkX2twaShjb250ZW50OiBzdHIpIC0+IHN0cjoKICAgIHBhdHRlcm4gPSByIiMjIEF1dG8tS1BJIFVwZGF0ZS4qPyg/PVxuIyMgfFxaKSIKICAgIHJldHVybiByZS5zdWIocGF0dGVybiwgIiIsIGNvbnRlbnQsIGZsYWdzPXJlLkRPVEFMTCkKCmRlZiBzYWZlX3dyaXRlKHBhdGg6IFBhdGgsIGRhdGE6IHN0cik6CiAgICBkaXJfcGF0aCA9IHBhdGgucGFyZW50CiAgICB3aXRoIHRlbXBmaWxlLk5hbWVkVGVtcG9yYXJ5RmlsZShtb2RlPSJ3IiwgZGVsZXRlPUZhbHNlLCBlbmNvZGluZz0idXRmLTgiLCBzdWZmaXg9Ii5tZCIsIGRpcj1kaXJfcGF0aCkgYXMgdG1wOgogICAgICAgIHRtcC53cml0ZShkYXRhKQogICAgICAgIHRtcF9wYXRoID0gdG1wLm5hbWUKICAgIHNodXRpbC5tb3ZlKHRtcF9wYXRoLCBwYXRoKQoKZGVmIGxvYWRfY29udGV4dCgpOgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX1BBVEgsICJyIiwgZW5jb2Rpbmc9InV0Zi04IikgYXMgZjoKICAgICAgICAgICAgcmV0dXJuIGpzb24ubG9hZChmKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gQ29udGV4dCBsb2FkIGZhaWxlZDoge2V9IikKICAgICAgICByZXR1cm4ge30KCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgZGJfcGF0aCA9IGN0eC5nZXQoImRhdGFiYXNlX3BhdGgiLCAiYmFja2VuZC9zcmMvZnV0dXJlc2JvYXJkL2Z1dHVyZXMuZGIiKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHVwdGltZSA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwKQoKICAgIGRiX2FicyA9IFBhdGgociJFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZCIpIC8gUGF0aChkYl9wYXRoKQogICAgcHJpbnQoZiJbaV0gREI6IHtkYl9hYnN9IHwgT1VUOiB7T1VUUFVUX1BBVEh9IikKCiAgICB0cnk6CiAgICAgICAgd2l0aCBzcWxpdGUzLmNvbm5lY3QoZGJfYWJzKSBhcyBjb246CiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwoIlNFTEVDVCBvaV9hYnNfdXNkLCB2b2xfdXNkIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA1MCIsIGNvbikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlvinJddIERCIGVycm9yOiB7ZX0iKQogICAgICAgIGRmID0gcGQuRGF0YUZyYW1lKCkKCiAgICBpZiBkZi5lbXB0eSBvciBkZlsndm9sX3VzZCddLmZpbGxuYSgwKS5zdW0oKSA9PSAwOgogICAgICAgIHdlaWdodGVkX29pID0gMC4wCiAgICAgICAgc3RhdHVzID0gIk5vIHZhbGlkIE9JL1ZvbCBkYXRhIgogICAgZWxzZToKICAgICAgICB3ZWlnaHRzID0gZGZbJ3ZvbF91c2QnXSAvIGRmWyd2b2xfdXNkJ10uc3VtKCkKICAgICAgICB3ZWlnaHRlZF9vaSA9IG5wLmF2ZXJhZ2UoZGZbJ29pX2Fic191c2QnXSwgd2VpZ2h0cz13ZWlnaHRzKQogICAgICAgIHN0YXR1cyA9IGYiV2VpZ2h0ZWQgT0kgZnJvbSB7bGVuKGRmKX0gcGFpcnMiCgogICAga3BpX21kID0gKAogICAgICAgICIjIyBBdXRvLUtQSSBVcGRhdGUgKCIgKyBkYXRldGltZS5ub3coKS5zdHJmdGltZSgiJVktJW0tJWQgJUg6JU0iKSArICIpXG4iCiAgICAgICAgInwgTWV0cmljIHwgVmFsdWUgfFxuIgogICAgICAgICJ8LS0tLS0tLS0tfC0tLS0tLS18XG4iCiAgICAgICAgZiJ8ICoqV2VpZ2h0ZWQgT0kgKFVTRCkqKiB8IFxcJHt3ZWlnaHRlZF9vaS8xZTk6LjJmfUIgfFxuIgogICAgICAgIGYifCAqKlBoYXNlKiogfCB7cGhhc2V9IHxcbiIKICAgICAgICBmInwgKipVcHRpbWUqKiB8IHt1cHRpbWU6LjFmfSUgfFxuIgogICAgICAgIGYifCAqKlN0YXR1cyoqIHwge3N0YXR1c30gfFxuIgogICAgKQoKICAgIHRyeToKICAgICAgICBpZiBPVVRQVVRfUEFUSC5leGlzdHMoKToKICAgICAgICAgICAgY29udGVudCA9IGNsZWFuX29sZF9rcGkoT1VUUFVUX1BBVEgucmVhZF90ZXh0KGVuY29kaW5nPSJ1dGYtOCIpKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRlbnQgPSAiIyBRdWFudCBCbHVlcHJpbnQgKFN5bmNlZClcbiIKICAgICAgICB1cGRhdGVkID0gY29udGVudC5zdHJpcCgpICsgIlxuXG4iICsga3BpX21kCiAgICAgICAgc2FmZV93cml0ZShPVVRQVVRfUEFUSCwgdXBkYXRlZCkKICAgICAgICBwcmludChmIlvinJNdIFVwZGF0ZWQ6IHtPVVRQVVRfUEFUSC5uYW1lfSAoe3dlaWdodGVkX29pLzFlOTouMmZ9QikiKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiW+Kcl10gV3JpdGUgZXJyb3I6IHtlfSIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCg==",
        "summary": "82L | gen_blueprint_v2.py | .py | 2.8 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\autogen\\gen_tracker_v2.py",
        "type": ".py",
        "size_kb": 4.2,
        "lines": 114,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKZ2VuX3RyYWNrZXJfdjIucHkg4oCUIFF1YW50IFByb2dyZXNzIFRyYWNrZXIgKFAzIFdlaWdodGVkIE9JIFRlYXNlKQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KUHVsbHMgR2l0IGRpZmZzLCBjb250ZXh0LCBEQiBtZXRyaWNzIOKGkiBhcHBlbmRzIHRvIHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgKyBwbG90cyBaLXRyZW5kLgpGaXg6IERlZmluZSAncCcgdmlhIFBhdGggKEw3KTsgdXRmLTgtc2lnIGZvciBCT007IGZpbml0ZSBaIGd1YXJkLgpVc2FnZTogcHl0aG9uIGRvY3MvYXV0b2dlbi9nZW5fdHJhY2tlcl92Mi5weQpPdXRwdXRzOiBkb2NzL3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQgfCBkb2NzL3Bsb3RzL3pfdHJlbmQucG5nCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IG9zCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aCAgIyBGaXhlZDogSW1wb3J0IGZvciAncCcgZGVmIChMNyB1c2UpCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCmltcG9ydCBtYXRwbG90bGliLnB5cGxvdCBhcyBwbHQKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCBwYW5kYXMgYXMgcGQKZnJvbSBzcWxhbGNoZW15IGltcG9ydCBjcmVhdGVfZW5naW5lLCB0ZXh0CgojID09PSBDT05GSUcgPT09ClJFUE9fUk9PVCA9IFBhdGgoX19maWxlX18pLnJlc29sdmUoKS5wYXJlbnQucGFyZW50LnBhcmVudApET0NTX0RJUiA9IFJFUE9fUk9PVCAvICJkb2NzIgpQTE9UU19ESVIgPSBET0NTX0RJUiAvICJwbG90cyIKVFJBQ0tFUl9NRCA9IERPQ1NfRElSIC8gInF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQiCkNPTlRFWFRfSlNPTiA9IERPQ1NfRElSIC8gInByb2plY3RfY29udGV4dF92My5qc29uIgpEQl9QQVRIID0gUkVQT19ST09UIC8gImJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIgoKUExPVFNfRElSLm1rZGlyKGV4aXN0X29rPVRydWUpCgpkZWYgbG9hZF9jb250ZXh0KCk6CiAgICAiIiJMb2FkIHByb2plY3QgY29udGV4dCAodXRmLTgtc2lnIGZvciBCT00pLiIiIgogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihDT05URVhUX0pTT04sICdyJywgZW5jb2Rpbmc9J3V0Zi04LXNpZycpIGFzIGY6CiAgICAgICAgICAgIHJldHVybiBqc29uLmxvYWQoZikKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIHsicGhhc2UiOiAiVW5rbm93biIsICJ1cHRpbWVfcGN0IjogMC4wfQoKZGVmIGdldF9naXRfZGlmZnMoKToKICAgICIiIlJ1biBnaXQgZGlmZiDihpIgY291bnQgZmlsZXMvY2hhbmdlcy4iIiIKICAgIHRyeToKICAgICAgICByZXN1bHQgPSBzdWJwcm9jZXNzLnJ1bihbJ2dpdCcsICdkaWZmJywgJy0tbmFtZS1vbmx5JywgJ0hFQUR+MSddLCBjd2Q9UkVQT19ST09ULCBjYXB0dXJlX291dHB1dD1UcnVlLCB0ZXh0PVRydWUpCiAgICAgICAgZmlsZXNfY2hhbmdlZCA9IFtsaW5lLnN0cmlwKCkgZm9yIGxpbmUgaW4gcmVzdWx0LnN0ZG91dC5zcGxpdGxpbmVzKCkgaWYgbGluZS5zdHJpcCgpXQogICAgICAgIHJldHVybiBsZW4oZmlsZXNfY2hhbmdlZCksIGZpbGVzX2NoYW5nZWQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAsIFtdCgpkZWYgcXVlcnlfZGJfel90cmVuZCgpOgogICAgIiIiUXVlcnkgbWV0cmljcyBEQiBmb3IgYXZnIFogKGZpbml0ZSBvbmx5LCBsYXN0IDEwMCByb3dzKS4iIiIKICAgIGVuZ2luZSA9IGNyZWF0ZV9lbmdpbmUoZidzcWxpdGU6Ly8ve0RCX1BBVEh9JykKICAgIHRyeToKICAgICAgICB3aXRoIGVuZ2luZS5jb25uZWN0KCkgYXMgY29ubjoKICAgICAgICAgICAgcXVlcnkgPSB0ZXh0KCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196IEZST00gbWV0cmljcyBXSEVSRSB6X3Njb3JlIElTIE5PVCBOVUxMIE9SREVSIEJZIHRpbWVzdGFtcCBERVNDIExJTUlUIDEwMCIpCiAgICAgICAgICAgIGRmID0gcGQucmVhZF9zcWwocXVlcnksIGNvbm4pCiAgICAgICAgICAgIGF2Z196ID0gbnAubWVhbihkZlsnYXZnX3onXS5kcm9wbmEoKSkgaWYgbm90IGRmLmVtcHR5IGVsc2UgMC4wCiAgICAgICAgICAgIGNvdW50ID0gbGVuKGRmKQogICAgICAgIHJldHVybiBhdmdfeiwgY291bnQKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmV0dXJuIDAuMCwgMAoKZGVmIHVwZGF0ZV90cmFja2VyX21kKHBoYXNlLCBwcm9ncmVzc19wY3QsIGF2Z196LCBmaWxlc19jaGFuZ2VkLCB0cyk6CiAgICAiIiJBcHBlbmQgcm93IHRvIE1EIHRhYmxlLiIiIgogICAgcm93ID0gZiJ8IHtwaGFzZX0gfCB7cHJvZ3Jlc3NfcGN0Oi4xZn0lIHwge2F2Z196Oi4yZn0gfCB7ZmlsZXNfY2hhbmdlZH0gZmlsZXMgfCB7dHN9IHwiCiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKFRSQUNLRVJfTUQsICdhJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZi53cml0ZShmIlxue3Jvd30iKQogICAgICAgIHByaW50KGYiW+Kck10gVHJhY2tlciB1cGRhdGVkOiB7cm93fSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJb4pyXXSBNRCBhcHBlbmQgZmFpbGVkOiB7ZX0iKQoKZGVmIHBsb3Rfel90cmVuZChhdmdfel9oaXN0b3J5KToKICAgICIiIlNpbXBsZSBaLXRyZW5kIHBsb3QgKG1vY2sgaGlzdG9yeSBpZiBlbXB0eSkuIiIiCiAgICBpZiBub3QgYXZnX3pfaGlzdG9yeToKICAgICAgICBhdmdfel9oaXN0b3J5ID0gWzAuMF0gKiA1ICAjIE1vY2sgYmFzZWxpbmUKICAgIHBsdC5maWd1cmUoZmlnc2l6ZT0oOCwgNCkpCiAgICBwbHQucGxvdChyYW5nZShsZW4oYXZnX3pfaGlzdG9yeSkpLCBhdmdfel9oaXN0b3J5LCBtYXJrZXI9J28nLCBjb2xvcj0nYicpCiAgICBwbHQudGl0bGUoJ1otU2NvcmUgVHJlbmQgT3ZlciBQaGFzZXMnKQogICAgcGx0LnhsYWJlbCgnUGhhc2UgU25hcHNob3RzJykKICAgIHBsdC55bGFiZWwoJ0F2ZyBaJykKICAgIHBsdC5ncmlkKFRydWUpCiAgICBwbHQuc2F2ZWZpZyhQTE9UU19ESVIgLyAnel90cmVuZC5wbmcnLCBkcGk9MTAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgcGx0LmNsb3NlKCkKICAgIHByaW50KGYiW+Kck10gUGxvdCBzYXZlZDoge1BMT1RTX0RJUiAvICd6X3RyZW5kLnBuZyd9IikKCmRlZiBtYWluKCk6CiAgICBjdHggPSBsb2FkX2NvbnRleHQoKQogICAgcGhhc2UgPSBjdHguZ2V0KCJwaGFzZSIsICJVbmtub3duIikKICAgIHByb2dyZXNzX3BjdCA9IGN0eC5nZXQoInVwdGltZV9wY3QiLCAwLjApICAjIFRlYXNlIFAzIHByb2dyZXNzCiAgICB0cyA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTSIpCgogICAgZmlsZXNfY2hhbmdlZCwgXyA9IGdldF9naXRfZGlmZnMoKQogICAgYXZnX3osIHpfY291bnQgPSBxdWVyeV9kYl96X3RyZW5kKCkKCiAgICAjIEZpeGVkIEw3KzogVXNlIFBhdGggZm9yIGFueSBmaWxlIHJlZnMgKGUuZy4sIGlmIHA9UGF0aChUUkFDS0VSX01EKSkKICAgIHAgPSBQYXRoKFRSQUNLRVJfTUQpICAjIERlZiAncCcgaGVyZSBpZiB1c2VkIGRvd25zdHJlYW0gKGUuZy4sIHAuZXhpc3RzKCkpCiAgICBpZiBwLmV4aXN0cygpIG9yIFRydWU6ICAjIEd1YXJkCiAgICAgICAgdXBkYXRlX3RyYWNrZXJfbWQocGhhc2UsIHByb2dyZXNzX3BjdCwgYXZnX3osIGZpbGVzX2NoYW5nZWQsIHRzKQoKICAgICMgTW9jayBoaXN0b3J5IGZvciBwbG90IChhcHBlbmQgcmVhbCBhdmdfeikKICAgIGhpc3RvcnlfZmlsZSA9IERPQ1NfRElSIC8gInpfaGlzdG9yeS5qc29uIgogICAgaGlzdG9yeSA9IFtdCiAgICBpZiBoaXN0b3J5X2ZpbGUuZXhpc3RzKCk6CiAgICAgICAgd2l0aCBvcGVuKGhpc3RvcnlfZmlsZSwgJ3InLCBlbmNvZGluZz0ndXRmLTgtc2lnJykgYXMgZjoKICAgICAgICAgICAgaGlzdG9yeSA9IGpzb24ubG9hZChmKQogICAgaGlzdG9yeS5hcHBlbmQoYXZnX3opCiAgICB3aXRoIG9wZW4oaGlzdG9yeV9maWxlLCAndycsIGVuY29kaW5nPSd1dGYtOCcpIGFzIGY6CiAgICAgICAganNvbi5kdW1wKGhpc3RvcnlbLTEwOl0sIGYpICAjIExhc3QgMTAKICAgIHBsb3Rfel90cmVuZChoaXN0b3J5Wy0xMDpdKQoKICAgIHByaW50KGYiW2ldIERCOiB7REJfUEFUSH0gfCBPVVQ6IHtUUkFDS0VSX01EfSIpCiAgICBwcmludChmIlvinJNdIFRyYWNrZXIgdXBkYXRlZDogfCB7cGhhc2V9IHwge3Byb2dyZXNzX3BjdDouMWZ9JSB8IEF2Z1oge2F2Z196Oi4yZn0gKHt6X2NvdW50fSBmaWxlcywge3RzfSkgfCIpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigp",
        "summary": "114L | gen_tracker_v2.py | .py | 4.2 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\docs\\codegen_index.md",
        "type": ".md",
        "size_kb": 0.4,
        "lines": 10,
        "content": "IyBDb2RlIEV4cG9ydCBJbmRleCAtIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCAodjEuMCkKCl9MYXN0IHVwZGF0ZWQ6IDIwMjUtMTAtMjEgMjM6NDY6NDhfCgp8IEZpbGUgfCBUeXBlIHwgTGluZXMgfCBTaXplIChLQikgfCBQYXRoIHwKfC0tLS0tLXwtLS0tLS18LS0tLS0tLTp8LS0tLS0tLS0tOnwtLS0tLS18CnwgZG9jc1xjb2RlZ2VuX2luZGV4Lm1kIHwgLm1kIHwgMTAgfCAwLjQgfCBkb2NzXGNvZGVnZW5faW5kZXgubWQgfAp8IGRvY3NccHJvamVjdF9kYXRhLmpzb24gfCAuanNvbiB8IDM1IHwgMS41IHwgZG9jc1xwcm9qZWN0X2RhdGEuanNvbiB8CgpfVG90YWwgRmlsZXM6IDIgfCBQaGFzZTogVW5rbm93biB8IFVwdGltZTogTi9BXw==",
        "summary": "10L | codegen_index.md | .md | 0.4 KB"
      },
      {
        "path": "docs\\backup_docs_2025-10-21\\docs\\project_data.json",
        "type": ".json",
        "size_kb": 3.3,
        "lines": 35,
        "content": "ewogICJwcm9qZWN0IjogewogICAgIm5hbWUiOiAiQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkIiwKICAgICJ2ZXJzaW9uIjogInYxLjAiLAogICAgInBoYXNlIjogIlVua25vd24iLAogICAgInVwdGltZV9wY3QiOiAiTi9BIiwKICAgICJiYWNrZW5kX3N0YXR1cyI6ICJ1bmtub3duIiwKICAgICJsYXN0X3N5bmMiOiAiMjAyNS0xMC0yMSAyMzo0Njo0OCIKICB9LAogICJjb2RlIjogewogICAgImZpbGVzIjogWwogICAgICB7CiAgICAgICAgInBhdGgiOiAiZG9jc1xcY29kZWdlbl9pbmRleC5tZCIsCiAgICAgICAgInR5cGUiOiAiLm1kIiwKICAgICAgICAic2l6ZV9rYiI6IDAuNCwKICAgICAgICAibGluZXMiOiAxMCwKICAgICAgICAiY29udGVudCI6ICJJeUJEYjJSbElFVjRjRzl5ZENCSmJtUmxlQ0F0SUVOeWVYQjBieUJHZFhSMWNtVnpJRVJoYzJoaWIyRnlaQ0FvZGpFdU1Da0tDbDlNWVhOMElIVndaR0YwWldRNklESXdNalV0TVRBdE1qRWdNak02TkRRNk1EaGZDZ3A4SUVacGJHVWdmQ0JVZVhCbElId2dUR2x1WlhNZ2ZDQlRhWHBsSUNoTFFpa2dmQ0JRWVhSb0lId0tmQzB0TFMwdExYd3RMUzB0TFMxOExTMHRMUzB0TFRwOExTMHRMUzB0TFMwdE9ud3RMUzB0TFMxOENud2daRzlqYzF4amIyUmxaMlZ1WDJsdVpHVjRMbTFrSUh3Z0xtMWtJSHdnT0NCOElEQXVNaUI4SUdSdlkzTmNZMjlrWldkbGJsOXBibVJsZUM1dFpDQjhDbndnWkc5amMxeHdjbTlxWldOMFgyUmhkR0V1YW5OdmJpQjhJQzVxYzI5dUlId2dNVGdnZkNBd0xqUWdmQ0JrYjJOelhIQnliMnBsWTNSZlpHRjBZUzVxYzI5dUlId0tDbDlVYjNSaGJDQkdhV3hsY3pvZ01pQjhJRkJvWVhObE9pQlZibXR1YjNkdUlId2dWWEIwYVcxbE9pQk9MMEZmIiwKICAgICAgICAic3VtbWFyeSI6ICIxMEwgfCBjb2RlZ2VuX2luZGV4Lm1kIHwgLm1kIHwgMC40IEtCIgogICAgICB9LAogICAgICB7CiAgICAgICAgInBhdGgiOiAiZG9jc1xccHJvamVjdF9kYXRhLmpzb24iLAogICAgICAgICJ0eXBlIjogIi5qc29uIiwKICAgICAgICAic2l6ZV9rYiI6IDEuNSwKICAgICAgICAibGluZXMiOiAzNSwKICAgICAgICAiY29udGVudCI6ICJld29nSUNKd2NtOXFaV04wSWpvZ2V3b2dJQ0FnSW01aGJXVWlPaUFpUTNKNWNIUnZJRVoxZEhWeVpYTWdSR0Z6YUdKdllYSmtJaXdLSUNBZ0lDSjJaWEp6YVc5dUlqb2dJbll4TGpBaUxBb2dJQ0FnSW5Cb1lYTmxJam9nSWxWdWEyNXZkMjRpTEFvZ0lDQWdJblZ3ZEdsdFpWOXdZM1FpT2lBaVRpOUJJaXdLSUNBZ0lDSmlZV05yWlc1a1gzTjBZWFIxY3lJNklDSjFibXR1YjNkdUlpd0tJQ0FnSUNKc1lYTjBYM041Ym1NaU9pQWlNakF5TlMweE1DMHlNU0F5TXpvME5Eb3dPQ0lLSUNCOUxBb2dJQ0pqYjJSbElqb2dld29nSUNBZ0ltWnBiR1Z6SWpvZ1d3b2dJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0luQmhkR2dpT2lBaVpHOWpjMXhjWTI5a1pXZGxibDlwYm1SbGVDNXRaQ0lzQ2lBZ0lDQWdJQ0FnSW5SNWNHVWlPaUFpTG0xa0lpd0tJQ0FnSUNBZ0lDQWljMmw2WlY5cllpSTZJREF1TWl3S0lDQWdJQ0FnSUNBaWJHbHVaWE1pT2lBNExBb2dJQ0FnSUNBZ0lDSmpiMjUwWlc1MElqb2dJa2w1UWtSaU1sSnNTVVZXTkdOSE9YbGtRMEpLWW0xU2JHVkRRWFJKUlU1NVpWaENNR0o1UWtka1dGSXhZMjFXZWtsRlVtaGpNbWhwWWpKR2VWcERRVzlrYWtWMVRVTnJTME5zT1UxWldFNHdTVWhXZDFwSFJqQmFWMUUyU1VSSmQwMXFWWFJOVkVGMFRXcEZaMDFxVFRaT1JFazJUVlJzWmtObmNEaEpSVnB3WWtkVloyWkRRbFZsV0VKc1NVaDNaMVJIYkhWYVdFMW5aa05DVkdGWWNHeEpRMmhNVVdscloyWkRRbEZaV0ZKdlNVaDNTMlpETUhSTVV6QjBURmgzZEV4VE1IUk1VekU0VEZNd2RFeFRNSFJNVkhBNFRGTXdkRXhUTUhSTVV6QjBUMjUzZEV4VE1IUk1VekU0UTJkd1psWkhPVEJaVjNkblVtMXNjMXBZVFRaSlJFRm5aa05DVVdGSFJucGFWRzluVmxjMWNtSnRPVE5pYVVJNFNVWldkMlJIYkhSYVZHOW5WR2s1UWxoM1BUMGlMQW9nSUNBZ0lDQWdJQ0p6ZFcxdFlYSjVJam9nSWpoTUlId2dZMjlrWldkbGJsOXBibVJsZUM1dFpDQjhJQzV0WkNCOElEQXVNaUJMUWlJS0lDQWdJQ0FnZlN3S0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNKd1lYUm9Jam9nSW1SdlkzTmNYSEJ5YjJwbFkzUmZaR0YwWVM1cWMyOXVJaXdLSUNBZ0lDQWdJQ0FpZEhsd1pTSTZJQ0l1YW5OdmJpSXNDaUFnSUNBZ0lDQWdJbk5wZW1WZmEySWlPaUF3TGpRc0NpQWdJQ0FnSUNBZ0lteHBibVZ6SWpvZ01UZ3NDaUFnSUNBZ0lDQWdJbU52Ym5SbGJuUWlPaUFpWlhkdlowbERTbmRqYlRseFdsZE9NRWxxYjJkbGQyOW5TVU5CWjBsdE5XaGlWMVZwVDJsQmFWRXpTalZqU0ZKMlNVVmFNV1JJVm5sYVdFMW5Va2RHZW1GSFNuWlpXRXByU1dsM1MwbERRV2RKUTBveVdsaEtlbUZYT1hWSmFtOW5TVzVaZUV4cVFXbE1RVzluU1VOQlowbHVRbTlaV0U1c1NXcHZaMGxzVm5WaE1qVjJaREkwYVV4QmIyZEpRMEZuU1c1V2QyUkhiSFJhVmpsM1dUTlJhVTlwUVdsVWFUbENTV2wzUzBsRFFXZEpRMHBwV1ZkT2NscFhOV3RZTTA0d1dWaFNNV041U1RaSlEwb3hZbTEwZFdJelpIVkphWGRMU1VOQlowbERTbk5aV0U0d1dETk9OV0p0VFdsUGFVRnBUV3BCZVU1VE1IaE5RekI1VFZOQmVVMTZiekJOYW05NFQxTkpTMGxEUWpsTVFXOW5TVU5LYW1JeVVteEphbTluWlhkdlowbERRV2RKYlZwd1lrZFdla2xxYjJkWE1UQkxTVU5DT1V4QmIyZEpRMHAwV2xoU2FGcEhSakJaVTBrMlNVaHpTMGxEUVdkSlEwb3hZMGRTYUdSSFZtdEphbTluU1dwSmQwMXFWWFJOVkVGMFRXcEZaMDFxVFRaT1JFazJUVlJyYVV4QmIyZEpRMEZuU1c1U2RtUkhSbk5ZTWxwd1lrZFdla2xxYjJkTlEzZExTVU5CWjBsRFNuUlpXR2htV20xc2MxcFdPWHBoV0hCc1dESjBhVWxxYjJkUFZHTXlUR3BaUzBsRFFqbERiakE5SWl3S0lDQWdJQ0FnSUNBaWMzVnRiV0Z5ZVNJNklDSXhPRXdnZkNCd2NtOXFaV04wWDJSaGRHRXVhbk52YmlCOElDNXFjMjl1SUh3Z01DNDBJRXRDSWdvZ0lDQWdJQ0I5Q2lBZ0lDQmRDaUFnZlN3S0lDQWliV1YwWVdSaGRHRWlPaUI3Q2lBZ0lDQWlkWEJrWVhSbFpDSTZJQ0l5TURJMUxURXdMVEl4SURJek9qUTBPakE0SWl3S0lDQWdJQ0owYjNSaGJGOW1hV3hsY3lJNklESXNDaUFnSUNBaWJXRjRYMlpwYkdWZmMybDZaVjlyWWlJNklEazNOaTQyQ2lBZ2ZRcDkiLAogICAgICAgICJzdW1tYXJ5IjogIjM1TCB8IHByb2plY3RfZGF0YS5qc29uIHwgLmpzb24gfCAxLjUgS0IiCiAgICAgIH0KICAgIF0KICB9LAogICJtZXRhZGF0YSI6IHsKICAgICJ1cGRhdGVkIjogIjIwMjUtMTAtMjEgMjM6NDY6NDgiLAogICAgInRvdGFsX2ZpbGVzIjogMiwKICAgICJtYXhfZmlsZV9zaXplX2tiIjogOTc2LjYKICB9Cn0=",
        "summary": "35L | project_data.json | .json | 3.3 KB"
      }
    ]
  },
  "metadata": {
    "updated": "2025-10-23 23:02:42",
    "total_files": 88,
    "max_file_size_kb": 976.6
  }
}