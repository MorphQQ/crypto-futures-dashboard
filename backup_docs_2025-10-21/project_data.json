{
  "project": {
    "name": "Crypto Futures Dashboard",
    "progress": {
      "P2": "95%",
      "P3": "20%"
    }
  },
  "code": {
    "files": [
      {
        "path": "backend\\src\\futuresboard\\app.py",
        "type": ".py",
        "size_kb": 14.5,
        "content": "",
        "summary": "382L | app.py | .py | 14.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\binance_ws_client.py",
        "type": ".py",
        "size_kb": 1.9,
        "content": "aW1wb3J0IGFzeW5jaW8KaW1wb3J0IGpzb24KaW1wb3J0IGFpb2h0dHAKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKCkJJTkFOQ0VfV1NfQkFTRSA9ICJ3c3M6Ly9mc3RyZWFtLmJpbmFuY2UuY29tL3N0cmVhbT9zdHJlYW1zPSIgICMgRm9yIFVTRFMtTSBmdXR1cmVzCgphc3luYyBkZWYgY29ubmVjdF9hbmRfbGlzdGVuKHNlc3Npb246IGFpb2h0dHAuQ2xpZW50U2Vzc2lvbiwgdXJsOiBzdHIsIGhhbmRsZV9tc2cpOgogICAgdHJ5OgogICAgICAgIGFzeW5jIHdpdGggc2Vzc2lvbi53c19jb25uZWN0KHVybCwgaGVhcnRiZWF0PTE1MCkgYXMgd3M6ICAjIEFkanVzdGVkIGhlYXJ0YmVhdAogICAgICAgICAgICBwcmludCgiQ29ubmVjdGVkIHRvIiwgdXJsKQogICAgICAgICAgICBhc3luYyBmb3IgbXNnIGluIHdzOgogICAgICAgICAgICAgICAgaWYgbXNnLnR5cGUgPT0gYWlvaHR0cC5XU01zZ1R5cGUuVEVYVDoKICAgICAgICAgICAgICAgICAgICBkYXRhID0ganNvbi5sb2Fkcyhtc2cuZGF0YSkKICAgICAgICAgICAgICAgICAgICBhd2FpdCBoYW5kbGVfbXNnKGRhdGEpCiAgICAgICAgICAgICAgICBlbGlmIG1zZy50eXBlID09IGFpb2h0dHAuV1NNc2dUeXBlLlBJTkc6CiAgICAgICAgICAgICAgICAgICAgYXdhaXQgd3MucG9uZygpCiAgICAgICAgICAgICAgICBlbGlmIG1zZy50eXBlID09IGFpb2h0dHAuV1NNc2dUeXBlLkVSUk9SOgogICAgICAgICAgICAgICAgICAgIHByaW50KCJXUyBFcnJvcjoiLCBtc2cpCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgIGV4Y2VwdCBhaW9odHRwLkNsaWVudEVycm9yIGFzIGU6CiAgICAgICAgcHJpbnQoIkNvbm5lY3Rpb24gZXJyb3I6IiwgZSkKICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDUpICAjIFNpbXBsZSBiYWNrb2ZmIGFsdGVybmF0aXZlCgphc3luYyBkZWYgYnVpbGRfY29tYmluZWRfc3RyZWFtKHBhaXJfc3RyZWFtczogTGlzdFtzdHJdKSAtPiBzdHI6CiAgICByZXR1cm4gQklOQU5DRV9XU19CQVNFICsgIi8iLmpvaW4ocGFpcl9zdHJlYW1zKQoKYXN5bmMgZGVmIGhhbmRsZV9tZXNzYWdlKGRhdGEpOgogICAgIyBFeGFtcGxlOiBFeHRyYWN0IG1hcmtQcmljZSwgT0kgaWYgc3Vic2NyaWJlZAogICAgc3RyZWFtID0gZGF0YVsic3RyZWFtIl0KICAgIGlmICJtYXJrUHJpY2UiIGluIHN0cmVhbToKICAgICAgICBwcmludCgiTWFyayBQcmljZSBVcGRhdGU6IiwgZGF0YVsiZGF0YSJdWyJwIl0pICAjIFByaWNlCiAgICAjIFB1c2ggdG8gcXVldWUvREIgaGVyZQoKYXN5bmMgZGVmIHN0YXJ0X3N0cmVhbV93b3JrZXIocGFpcnM6IExpc3Rbc3RyXSk6CiAgICBzdHJlYW1zID0gW2Yie3AubG93ZXIoKX1AbWFya1ByaWNlQDFzIiBmb3IgcCBpbiBwYWlyc10gICMgMXMgdXBkYXRlcwogICAgc3RyZWFtcyArPSBbZiJ7cC5sb3dlcigpfUBvcGVuSW50ZXJlc3RAMWgiIGZvciBwIGluIHBhaXJzXSAgIyBPSSBob3VybHkKICAgIHVybCA9IGF3YWl0IGJ1aWxkX2NvbWJpbmVkX3N0cmVhbShzdHJlYW1zKQogICAgYXN5bmMgd2l0aCBhaW9odHRwLkNsaWVudFNlc3Npb24oKSBhcyBzZXNzaW9uOgogICAgICAgIHdoaWxlIFRydWU6ICAjIFJlY29ubmVjdCBsb29wCiAgICAgICAgICAgIGF3YWl0IGNvbm5lY3RfYW5kX2xpc3RlbihzZXNzaW9uLCB1cmwsIGhhbmRsZV9tZXNzYWdlKQogICAgICAgICAgICBhd2FpdCBhc3luY2lvLnNsZWVwKDUpICAjIEJhY2tvZmYKCiMgRXhhbXBsZSBydW4gKGluIGZ1dHVyZXNib2FyZDogY2FsbCBpbiB0aHJlYWQpCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBwYWlycyA9IFsiQlRDVVNEVCIsICJFVEhVU0RUIiwgIlNPTFVTRFQiXQogICAgYXN5bmNpby5ydW4oc3RhcnRfc3RyZWFtX3dvcmtlcihwYWlycykp",
        "summary": "47L | binance_ws_client.py | .py | 1.9 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\blueprint.py",
        "type": ".py",
        "size_kb": 50.2,
        "content": "",
        "summary": "1426L | blueprint.py | .py | 50.2 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\cli.py",
        "type": ".py",
        "size_kb": 3.5,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBsb2dnaW5nCmltcG9ydCBwYXRobGliCmltcG9ydCBzeXMKaW1wb3J0IG9zICAjIEZvciBzdHIoKSBjb21wYXQgaWYgbmVlZGVkCmltcG9ydCB0cmFjZWJhY2sgICMgRm9yIGVycm9yIHByaW50CgppbXBvcnQgZnV0dXJlc2JvYXJkLmFwcAppbXBvcnQgZnV0dXJlc2JvYXJkLnNjcmFwZXIKZnJvbSBmdXR1cmVzYm9hcmQgaW1wb3J0IF9fdmVyc2lvbl9fICAjIHR5cGU6IGlnbm9yZVthdHRyLWRlZmluZWRdCmZyb20gZnV0dXJlc2JvYXJkLmNvbmZpZyBpbXBvcnQgQ29uZmlnCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudiAgIyBFeHBsaWNpdCAuZW52IGxvYWQKCmxvZyA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKCmRlZiBtYWluKCk6CiAgICBwcmludCgiQ0xJIExvYWRlZDogU3RhcnRpbmcgbWFpbigpIikgICMgRGVidWc6IENvbmZpcm1zIGVudHJ5CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihwcm9nPSJmdXR1cmVzYm9hcmQiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS12ZXJzaW9uIiwgYWN0aW9uPSJ2ZXJzaW9uIiwgdmVyc2lvbj1mIiUocHJvZylzIHtfX3ZlcnNpb25fX30iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLWMiLAogICAgICAgICItLWNvbmZpZy1kaXIiLAogICAgICAgIHR5cGU9cGF0aGxpYi5QYXRoLAogICAgICAgIGRlZmF1bHQ9Tm9uZSwKICAgICAgICBoZWxwPSJQYXRoIHRvIGNvbmZpZ3VyYXRpb24gZGlyZWN0b3J5LiBEZWZhdWx0cyB0byB0aGUgYGNvbmZpZy9gIHN1Yi1kaXJlY3Rvcnkgb24gdGhlIGN1cnJlbnQgZGlyZWN0b3J5IiwKICAgICkKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoCiAgICAgICAgIi0tc2NyYXBlLW9ubHkiLCBkZWZhdWx0PUZhbHNlLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJSdW4gb25seSB0aGUgc2NyYXBlciBjb2RlIgogICAgKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1kaXNhYmxlLWF1dG8tc2NyYXBlciIsCiAgICAgICAgZGVmYXVsdD1GYWxzZSwKICAgICAgICBhY3Rpb249InN0b3JlX3RydWUiLAogICAgICAgIGhlbHA9IkRpc2FibGUgdGhlIHJvdXRpbmVzIHdoaWNoIHNjcmFwZSB3aGlsZSB0aGUgd2Vic2VydmljZSBpcyBydW5uaW5nIiwKICAgICkKICAgIHNlcnZlcl9zZXR0aW5ncyA9IHBhcnNlci5hZGRfYXJndW1lbnRfZ3JvdXAoIlNlcnZlciBTZXR0aW5ncyIpCiAgICBzZXJ2ZXJfc2V0dGluZ3MuYWRkX2FyZ3VtZW50KAogICAgICAgICItLWhvc3QiLAogICAgICAgIGRlZmF1bHQ9JzAuMC4wLjAnLAogICAgICAgIGhlbHA9IlNlcnZlciBob3N0LiBEZWZhdWx0OiAwLjAuMC4wIiwKICAgICAgICB0eXBlPXN0ciwgICMgU3RyIGZvciBhcmdwYXJzZSAodjEgY29tcGF0KQogICAgKQogICAgc2VydmVyX3NldHRpbmdzLmFkZF9hcmd1bWVudCgKICAgICAgICAiLS1wb3J0IiwgdHlwZT1pbnQsIGRlZmF1bHQ9Tm9uZSwgaGVscD0iU2VydmVyIHBvcnQuIERlZmF1bHQ6IDUwMDAiCiAgICApCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgIHByaW50KGYiQXJncyBwYXJzZWQ6IGNvbmZpZ19kaXI9e2FyZ3MuY29uZmlnX2Rpcn0sIHBvcnQ9e2FyZ3MucG9ydH0sIHNjcmFwZV9vbmx5PXthcmdzLnNjcmFwZV9vbmx5fSIpICAjIERlYnVnOiBBcmdwYXJzZSBPSz8KCiAgICAjIERlZmF1bHQgY29uZmlnX2RpciB0byByb290L2NvbmZpZyAoYmFja2VuZC8gLT4gLi4vY29uZmlnIGZvciBqc29uL2RiKQogICAgaWYgYXJncy5jb25maWdfZGlyIGlzIE5vbmU6CiAgICAgICAgYXJncy5jb25maWdfZGlyID0gcGF0aGxpYi5QYXRoLmN3ZCgpLnBhcmVudCAvICJjb25maWciCiAgICBlbHNlOgogICAgICAgIGFyZ3MuY29uZmlnX2RpciA9IGFyZ3MuY29uZmlnX2Rpci5yZXNvbHZlKCkKCiAgICBwcmludChmIlJlc29sdmVkIGNvbmZpZ19kaXI6IHthcmdzLmNvbmZpZ19kaXJ9IChleGlzdHM/IHthcmdzLmNvbmZpZ19kaXIuZXhpc3RzKCl9KSIpICAjIERlYnVnOiBQYXRoIGNoZWNrCgogICAgIyAuZW52IGxvYWQgZnJvbSBiYWNrZW5kLyAoY3dkPWJhY2tlbmQsIHNlbGYpCiAgICBiYWNrZW5kX2RpciA9IHBhdGhsaWIuUGF0aC5jd2QoKQogICAgZG90ZW52X3BhdGggPSBiYWNrZW5kX2RpciAvICIuZW52IgogICAgbG9hZF9kb3RlbnYoZG90ZW52X3BhdGg9c3RyKGRvdGVudl9wYXRoKSkKICAgICMgRGVidWcgcHJpbnQ6IENvbmZpcm0gbG9hZCBiZWZvcmUgQ29uZmlnCiAgICBwcmludChmIkRlYnVnOiBMb2FkZWQgQVBJX0tFWSBmcm9tIC5lbnY6IHtvcy5nZXRlbnYoJ0FQSV9LRVknKVs6MTBdICsgJy4uLicgaWYgb3MuZ2V0ZW52KCdBUElfS0VZJykgZWxzZSAnTUlTU0lORyd9IikKICAgIHByaW50KGYiRGVidWc6IC5lbnYgcGF0aCByZXNvbHZlZDoge2RvdGVudl9wYXRoLnJlc29sdmUoKX0gKGV4aXN0cz8ge2RvdGVudl9wYXRoLmV4aXN0cygpfSkiKQoKICAgIHByaW50KCJQcmUtQ29uZmlnOiBBYm91dCB0byBjYWxsIGZyb21fY29uZmlnX2Rpci4uLiIpICAjIERlYnVnOiBCZWZvcmUgY2FsbAogICAgdHJ5OgogICAgICAgIGNvbmZpZyA9IENvbmZpZy5mcm9tX2NvbmZpZ19kaXIoYXJncy5jb25maWdfZGlyKQogICAgICAgIHByaW50KCJQb3N0LUNvbmZpZzogQ29uZmlnIGxvYWRlZCBPSyEiKSAgIyBJZiByZWFjaGVzLCB2YWxpZGF0aW9uIHBhc3NlZAogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiQ29uZmlnIEVycm9yOiB7ZX0iKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgIHN5cy5leGl0KDEpCiAgICBpZiBub3QgYXJncy5ob3N0OgogICAgICAgIGFyZ3MuaG9zdCA9IGNvbmZpZy5IT1NUCiAgICBpZiBub3QgYXJncy5wb3J0OgogICAgICAgIGFyZ3MucG9ydCA9IGNvbmZpZy5QT1JUCgogICAgIyBSdW4gdGhlIGFwcGxpY2F0aW9uCiAgICB0cnk6CiAgICAgICAgYXBwID0gZnV0dXJlc2JvYXJkLmFwcC5pbml0X2FwcChjb25maWcpCiAgICAgICAgcHJpbnQoIkluaXQgQXBwIE9LISIpICAjIENvbmZpcm1zIGluaXRfYXBwIChEQi9ibHVlcHJpbnQvc2NyYXBlciBzZXR1cCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIkluaXQgQXBwIEVycm9yOiB7ZX0iKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgaWYgYXJncy5zY3JhcGVfb25seToKICAgICAgICB3aXRoIGFwcC5hcHBfY29udGV4dCgpOgogICAgICAgICAgICBmdXR1cmVzYm9hcmQuc2NyYXBlci5zY3JhcGUoKQogICAgICAgIHN5cy5leGl0KDApCgogICAgYXBwLnJ1bihob3N0PWFyZ3MuaG9zdCwgcG9ydD1hcmdzLnBvcnQpICAjIERpcmVjdCBzdHIgaG9zdAoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBtYWluKCk=",
        "summary": "100L | cli.py | .py | 3.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\config.py",
        "type": ".py",
        "size_kb": 6.7,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGNvcHkKaW1wb3J0IGVudW0KaW1wb3J0IGpzb24KaW1wb3J0IHBhdGhsaWIKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKZnJvbSB0eXBpbmcgaW1wb3J0IE9wdGlvbmFsCgpmcm9tIHB5ZGFudGljIGltcG9ydCBCYXNlTW9kZWwKZnJvbSBweWRhbnRpYyBpbXBvcnQgRGlyZWN0b3J5UGF0aApmcm9tIHB5ZGFudGljIGltcG9ydCBGaWVsZApmcm9tIHB5ZGFudGljIGltcG9ydCByb290X3ZhbGlkYXRvcgpmcm9tIHB5ZGFudGljIGltcG9ydCB2YWxpZGF0b3IKCmZyb20gZG90ZW52IGltcG9ydCBsb2FkX2RvdGVudgppbXBvcnQgb3MKaW1wb3J0IGxvZ2dpbmcgICMgQWRkZWQgZm9yIGNvbmRpdGlvbmFsIGxvZ2dpbmcKCmxvYWRfZG90ZW52KCkgICMgUHVsbHMgLmVudgoKIyBNb2R1bGUtbGV2ZWwgZmxhZyAob25jZS1wcmludCBhY3Jvc3MgaW1wb3J0cy9jYWxscykKX2NvbmZpZ19wcmludGVkID0gRmFsc2UKCmNsYXNzIE5hdmJhckJHKGVudW0uRW51bSk6CiAgICBCR19EQVJLID0gImJnLWRhcmsiCiAgICBCR19QUklNQVJZID0gImJnLXByaW1hcnkiCiAgICBCR19TRUNPTkRBUlkgPSAiYmctc2Vjb25kYXJ5IgogICAgQkdfU1VDQ0VTUyA9ICJiZy1zdWNjZXNzIgogICAgQkdfREFOR0VSID0gImJnLWRhbmdlciIKICAgIEJHX1dBUk5JTkcgPSAiYmctd2FybmluZyIKICAgIEJHX0lORk8gPSAiYmctaW5mbyIKICAgIEJHX0xJR0hUID0gImJnLWxpZ2h0IgoKCmNsYXNzIEV4Y2hhbmdlcyhlbnVtLkVudW0pOgogICAgQklOQU5DRSA9ICJiaW5hbmNlIgogICAgQllCSVQgPSAiYnliaXQiCgoKY2xhc3MgQ3VzdG9tKEJhc2VNb2RlbCk6CiAgICBOQVZCQVJfVElUTEU6IE9wdGlvbmFsW3N0cl0gPSBGaWVsZCgiRnV0dXJlc2JvYXJkIiwgbWluX2xlbmd0aD0xLCBtYXhfbGVuZ3RoPTUwKQogICAgTkFWQkFSX0JHOiBPcHRpb25hbFtOYXZiYXJCR10gPSBOYXZiYXJCRy5CR19EQVJLCiAgICBQUk9KRUNUSU9OUzogTGlzdFtmbG9hdF0gPSBGaWVsZChbMS4wMDMsIDEuMDA1LCAxLjAxLCAxLjAxMl0sIG1pbl9pdGVtcz0xLCBtYXhfaXRlbXM9MTApCgogICAgQHZhbGlkYXRvcigiUFJPSkVDVElPTlMiLCBlYWNoX2l0ZW09VHJ1ZSkKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIF92YWxpZGF0ZV9wcm9qZWN0aW9ucyhjbHMsIHZhbHVlKToKICAgICAgICBpZiBub3QgaXNpbnN0YW5jZSh2YWx1ZSwgZmxvYXQpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB2YWx1ZSA9IGZsb2F0KHZhbHVlKQogICAgICAgICAgICBleGNlcHQgVHlwZUVycm9yOgogICAgICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmIkNhbm5vdCBjYXN0IHt2YWx1ZSFyfSB0byBhIGZsb2F0IikKICAgICAgICBpZiB2YWx1ZSA8IC0zLjA6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIlRoZSBsb3dlciBhbGxvd2VkIHByb2plY3Rpb24gdmFsdWUgaXMgLTMuMCIpCiAgICAgICAgaWYgdmFsdWUgPiAzLjA6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIlRoZSB1cHBlciBhbGxvd2VkIHByb2plY3Rpb24gdmFsdWUgaXMgMy4wIikKICAgICAgICByZXR1cm4gdmFsdWUKCgpjbGFzcyBDb25maWcoQmFzZU1vZGVsKToKICAgIENPTkZJR19ESVI6IERpcmVjdG9yeVBhdGggPSBwYXRobGliLlBhdGguY3dkKCkKICAgIERBVEFCQVNFOiBPcHRpb25hbFtwYXRobGliLlBhdGhdCiAgICBFWENIQU5HRTogT3B0aW9uYWxbRXhjaGFuZ2VzXSA9IEV4Y2hhbmdlcy5CSU5BTkNFCiAgICBURVNUX01PREU6IE9wdGlvbmFsW2Jvb2xdID0gRmFsc2UKICAgIEFQSV9CQVNFX1VSTDogT3B0aW9uYWxbc3RyXQogICAgQVVUT19TQ1JBUEVfSU5URVJWQUw6IGludCA9IDMwMAogICAgRElTQUJMRV9BVVRPX1NDUkFQRTogYm9vbCA9IEZhbHNlCiAgICBIT1NUOiBPcHRpb25hbFtzdHJdID0gRmllbGQoZGVmYXVsdD0nMC4wLjAuMCcpICAjIEZpeDogU3RyIGRlZmF1bHQgKHYxIGNvbXBhdDsgbm8gSVB2QW55SW50ZXJmYWNlIGNhbGwpCiAgICBQT1JUOiBPcHRpb25hbFtpbnRdID0gRmllbGQoNTAwMCwgZ2U9MSwgbGU9NjU1MzUpCiAgICBBUElfS0VZOiBzdHIKICAgIEFQSV9TRUNSRVQ6IHN0cgogICAgU1lNQk9MUzogTGlzdFtzdHJdID0gRmllbGQoZGVmYXVsdF9mYWN0b3J5PWxhbWJkYTogWyJCVENVU0RUIiwgIkVUSFVTRFQiLCAiU09MVVNEVCJdKSAgIyBOZXc6IFVwcGVyY2FzZSwgZGVmYXVsdCBsaXN0IChuZXZlciBOb25lKQogICAgQ1VTVE9NOiBPcHRpb25hbFtDdXN0b21dID0gQ3VzdG9tKCkKCiAgICBAdmFsaWRhdG9yKCJEQVRBQkFTRSIsIGFsd2F5cz1UcnVlKQogICAgQGNsYXNzbWV0aG9kCiAgICBkZWYgX3ZhbGlkYXRlX2RhdGFiYXNlKGNscywgdmFsdWUsIHZhbHVlcyk6CiAgICAgICAgaWYgbm90IHZhbHVlOgogICAgICAgICAgICB2YWx1ZSA9IHZhbHVlc1siQ09ORklHX0RJUiJdIC8gImZ1dHVyZXMuZGIiCiAgICAgICAgcmV0dXJuIHZhbHVlLnJlc29sdmUoKQoKICAgIEB2YWxpZGF0b3IoIkFQSV9CQVNFX1VSTCIsIGFsd2F5cz1UcnVlKQogICAgQGNsYXNzbWV0aG9kCiAgICBkZWYgX3ZhbGlkYXRlX2FwaV9iYXNlX3VybChjbHMsIHZhbHVlLCB2YWx1ZXMpOgogICAgICAgIGlmIG5vdCB2YWx1ZToKICAgICAgICAgICAgaWYgdmFsdWVzWyJFWENIQU5HRSJdID09IEV4Y2hhbmdlcy5CSU5BTkNFOgogICAgICAgICAgICAgICAgaWYgdmFsdWVzWyJURVNUX01PREUiXToKICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9ICJodHRwczovL3Rlc3RuZXQuYmluYW5jZWZ1dHVyZS5jb20iCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHZhbHVlID0gImh0dHBzOi8vZmFwaS5iaW5hbmNlLmNvbSIKICAgICAgICAgICAgZWxpZiB2YWx1ZXNbIkVYQ0hBTkdFIl0gPT0gRXhjaGFuZ2VzLkJZQklUOgogICAgICAgICAgICAgICAgaWYgdmFsdWVzWyJURVNUX01PREUiXToKICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9ICJodHRwczovL2FwaS10ZXN0bmV0LmJ5Yml0LmNvbSIKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSAiaHR0cHM6Ly9hcGkuYnliaXQuY29tIgogICAgICAgIHJldHVybiB2YWx1ZQoKICAgIEB2YWxpZGF0b3IoIkFVVE9fU0NSQVBFX0lOVEVSVkFMIikKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIF92YWxpZGF0ZV9pbnRlcnZhbChjbHMsIHZhbHVlKToKICAgICAgICBpZiB2YWx1ZSA8IDEwOiAgIyBMb3dlciBmb3IgUGhhc2UgMSBXUyAoPDMwcyk7IENDWFQgcmF0ZS1zYWZlCiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIlRoZSBsb3dlciBhbGxvd2VkIHZhbHVlIGlzIDEwIikKICAgICAgICBpZiB2YWx1ZSA+IDM2MDA6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIlRoZSB1cHBlciBhbGxvd2VkIHZhbHVlIGlzIDM2MDAiKQogICAgICAgIHJldHVybiB2YWx1ZQoKICAgIEByb290X3ZhbGlkYXRvcihwcmU9VHJ1ZSkKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIF9jYXBpdGFsaXplX2FsbF9rZXlzKGNscywgZmllbGRzKToKICAgICAgICBkZWYgX2NhcGl0YWxpemVfa2V5cyhjKToKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UoYywgZGljdCk6CiAgICAgICAgICAgICAgICByZXR1cm4gYwogICAgICAgICAgICBmb3Iga2V5LCB2YWx1ZSBpbiBjb3B5LmRlZXBjb3B5KGMpLml0ZW1zKCk6CiAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKHZhbHVlLCBkaWN0KToKICAgICAgICAgICAgICAgICAgICBfY2FwaXRhbGl6ZV9rZXlzKHZhbHVlKQogICAgICAgICAgICAgICAgY1trZXkudXBwZXIoKV0gPSB2YWx1ZQogICAgICAgICAgICAgICAgaWYgbm90IGtleS5pc3VwcGVyKCk6CiAgICAgICAgICAgICAgICAgICAgYy5wb3Aoa2V5KQoKICAgICAgICBmb3Iga2V5LCB2YWx1ZSBpbiBjb3B5LmRlZXBjb3B5KGZpZWxkcykuaXRlbXMoKToKICAgICAgICAgICAgX2NhcGl0YWxpemVfa2V5cyh2YWx1ZSkKICAgICAgICAgICAgZmllbGRzW2tleS51cHBlcigpXSA9IHZhbHVlCiAgICAgICAgICAgIGlmIG5vdCBrZXkuaXN1cHBlcigpOgogICAgICAgICAgICAgICAgZmllbGRzLnBvcChrZXkpCgogICAgICAgIHJldHVybiBmaWVsZHMKCiAgICBAY2xhc3NtZXRob2QKICAgIGRlZiBmcm9tX2NvbmZpZ19kaXIoY2xzLCBjb25maWdfZGlyOiBwYXRobGliLlBhdGgpIC0+IENvbmZpZzoKICAgICAgICBjb25maWdfZmlsZSA9IGNvbmZpZ19kaXIgLyAiY29uZmlnLmpzb24iCiAgICAgICAgaWYgY29uZmlnX2ZpbGUuZXhpc3RzKCk6CiAgICAgICAgICAgIGNvbmZpZ19kaWN0ID0ganNvbi5sb2Fkcyhjb25maWdfZmlsZS5yZWFkX3RleHQoKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBjb25maWdfZGljdCA9IHt9CiAgICAgICAgY29uZmlnX2RpY3RbIkNPTkZJR19ESVIiXSA9IGNvbmZpZ19kaXIKCiAgICAgICAgIyAuZW52IE92ZXJyaWRlcyAoa2VlcCBleGlzdGluZykKICAgICAgICBlbnZfZXhjaGFuZ2UgPSBvcy5nZXRlbnYoIkVYQ0hBTkdFIiwgY29uZmlnX2RpY3QuZ2V0KCJFWENIQU5HRSIsICJiaW5hbmNlIikpLnVwcGVyKCkKICAgICAgICBjb25maWdfZGljdFsiRVhDSEFOR0UiXSA9IEV4Y2hhbmdlc1tlbnZfZXhjaGFuZ2VdCgogICAgICAgIGNvbmZpZ19kaWN0WyJBUElfS0VZIl0gPSBvcy5nZXRlbnYoIkFQSV9LRVkiLCBjb25maWdfZGljdC5nZXQoIkFQSV9LRVkiLCAiIikpCiAgICAgICAgY29uZmlnX2RpY3RbIkFQSV9TRUNSRVQiXSA9IG9zLmdldGVudigiQVBJX1NFQ1JFVCIsIGNvbmZpZ19kaWN0LmdldCgiQVBJX1NFQ1JFVCIsICIiKSkKICAgICAgICBjb25maWdfZGljdFsiQVVUT19TQ1JBUEVfSU5URVJWQUwiXSA9IGludChvcy5nZXRlbnYoIklOVEVSVkFMIiwgc3RyKGNvbmZpZ19kaWN0LmdldCgiQVVUT19TQ1JBUEVfSU5URVJWQUwiLCAzMDApKSkpCgogICAgICAgIGNvbmZpZ19kaWN0WyJURVNUX01PREUiXSA9IG9zLmdldGVudigiVEVTVF9NT0RFIiwgIkZhbHNlIikubG93ZXIoKSA9PSAidHJ1ZSIKICAgICAgICAjIEFkZDogREFUQUJBU0Ugb3ZlcnJpZGUgZnJvbSAuZW52ICh1bmlmeSB3aXRoIGJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiKQogICAgICAgIGVudl9kYl9wYXRoID0gb3MuZ2V0ZW52KCJEQl9QQVRIIikKICAgICAgICBpZiBlbnZfZGJfcGF0aDoKICAgICAgICAgICAgY29uZmlnX2RpY3RbIkRBVEFCQVNFIl0gPSBwYXRobGliLlBhdGgoZW52X2RiX3BhdGgpLnJlc29sdmUoKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMgZmFsbGJhY2sgdG8gY29uZmlnX2Rpci9mdXR1cmVzLmRiIGlmIG5vdCBpbiAuZW52CiAgICAgICAgICAgIGNvbmZpZ19kaWN0WyJEQVRBQkFTRSJdID0gKGNvbmZpZ19kaXIgLyAiZnV0dXJlcy5kYiIpLnJlc29sdmUoKQogICAgICAgICAgICAgICAgCiAgICAgICAgIyBOZXc6IFNZTUJPTFMgZnJvbSAuZW52L0pTT04gKGNvbW1hLXNwbGl0IGlmIGVudiBzdHIpCiAgICAgICAgZW52X3N5bWJvbHMgPSBvcy5nZXRlbnYoIlNZTUJPTFMiLCAiIikKICAgICAgICBpZiBlbnZfc3ltYm9sczoKICAgICAgICAgICAgY29uZmlnX2RpY3RbIlNZTUJPTFMiXSA9IFtzLnN0cmlwKCkgZm9yIHMgaW4gZW52X3N5bWJvbHMuc3BsaXQoIiwiKSBpZiBzLnN0cmlwKCldCiAgICAgICAgZWxpZiAiU1lNQk9MUyIgbm90IGluIGNvbmZpZ19kaWN0OgogICAgICAgICAgICBjb25maWdfZGljdFsiU1lNQk9MUyJdID0gWyJCVENVU0RUIiwgIkVUSFVTRFQiLCAiU09MVVNEVCJdICAjIEVuc3VyZSBsaXN0CgogICAgICAgICMgQWRkOiBERVZfTU9ERSBmcm9tIC5lbnYKICAgICAgICBjb25maWdfZGljdFsiREVWX01PREUiXSA9IG9zLmdldGVudigiREVWX01PREUiLCAiZmFsc2UiKS5sb3dlcigpID09ICJ0cnVlIgogICAgICAgIAogICAgICAgICMgQWRkOiBMT0dfTEVWRUwgZnJvbSAuZW52CiAgICAgICAgY29uZmlnX2RpY3RbIkxPR19MRVZFTCJdID0gb3MuZ2V0ZW52KCJMT0dfTEVWRUwiLCAiSU5GTyIpLnVwcGVyKCkKCiAgICAgICAgIyBDb25kaXRpb25hbCBsb2cgKERFQlVHIG9ubHkgKyBvbmNlLWZsYWc7IG5vIHNwYW0gQCBJTkZPKQogICAgICAgIGdsb2JhbCBfY29uZmlnX3ByaW50ZWQKICAgICAgICBpZiBub3QgX2NvbmZpZ19wcmludGVkIGFuZCBjb25maWdfZGljdC5nZXQoIkxPR19MRVZFTCIsICJJTkZPIikudXBwZXIoKSA9PSAiREVCVUciOgogICAgICAgICAgICBsb2dnaW5nLmJhc2ljQ29uZmlnKGxldmVsPWxvZ2dpbmcuREVCVUcpICAjIElmIG5vdCBzZXR1cAogICAgICAgICAgICBsb2dnaW5nLmluZm8oZiJDb25maWcgbG9hZGVkOiBERVZfTU9ERT17Y29uZmlnX2RpY3RbJ0RFVl9NT0RFJ119LCBMT0dfTEVWRUw9e2NvbmZpZ19kaWN0WydMT0dfTEVWRUwnXX0sIElOVEVSVkFMPXtjb25maWdfZGljdFsnQVVUT19TQ1JBUEVfSU5URVJWQUwnXX1zIikKICAgICAgICAgICAgX2NvbmZpZ19wcmludGVkID0gVHJ1ZQogICAgICAgIGVsaWYgbm90IF9jb25maWdfcHJpbnRlZDogICMgU2lsZW50IEAgSU5GTyAob3IgbWluaW1hbCBpZiB3YW50KQogICAgICAgICAgICBfY29uZmlnX3ByaW50ZWQgPSBUcnVlICAjIEZsYWcgc2V0IG5vLW9wCgogICAgICAgIHJldHVybiBjbHMucGFyc2Vfb2JqKGNvbmZpZ19kaWN0KQ==",
        "summary": "177L | config.py | .py | 6.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\db.py",
        "type": ".py",
        "size_kb": 18.8,
        "content": "",
        "summary": "520L | db.py | .py | 18.8 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\metrics.py",
        "type": ".py",
        "size_kb": 8.6,
        "content": "",
        "summary": "220L | metrics.py | .py | 8.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\quant_engine.py",
        "type": ".py",
        "size_kb": 3.7,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvcXVhbnRfZW5naW5lLnB5CiIiIgpRdWFudCBFbmdpbmUg4oCTIFRpZXIgMiBJbnRlbGxpZ2VudCBNZXRyaWNzIFBpcGVsaW5lCkNvbXB1dGVzIHJvbGxpbmcgT0kgWi1zY29yZSwgTFMgzpQlLCBpbWJhbGFuY2UgJSwgZnVuZGluZyBiaWFzLCBjb25mbHVlbmNlIHNjb3JlLgoiIiIKCmltcG9ydCBzcWxpdGUzLCBudW1weSBhcyBucCwgcGFuZGFzIGFzIHBkLCBkYXRldGltZQoKREJfUEFUSCA9ICJiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvZnV0dXJlcy5kYiIKCmRlZiBjb21wdXRlX3F1YW50X21ldHJpY3MobGltaXQ6IGludCA9IDIwMCk6CiAgICBjb25uID0gc3FsaXRlMy5jb25uZWN0KERCX1BBVEgpCiAgICBkZiA9IHBkLnJlYWRfc3FsX3F1ZXJ5KCIiIgogICAgICAgIFNFTEVDVCBzeW1ib2wsIHRpbWVmcmFtZSwgb2lfdXNkLAogICAgICAgICAgICAgICBsb25nX2FjY291bnRfcGN0LCBzaG9ydF9hY2NvdW50X3BjdCwKICAgICAgICAgICAgICAgZnVuZGluZywgbHNfZGVsdGFfcGN0LCBpbWJhbGFuY2UsIHRpbWVzdGFtcAogICAgICAgIEZST00gbWV0cmljcyBPUkRFUiBCWSB0aW1lc3RhbXAgREVTQyBMSU1JVCA/CiAgICAiIiIsIGNvbm4sIHBhcmFtcz0obGltaXQsKSkKICAgIGNvbm4uY2xvc2UoKQogICAgaWYgZGYuZW1wdHk6CiAgICAgICAgcmV0dXJuIFtdCgogICAgIyBFbnN1cmUgYWxsIG51bWVyaWMgY29sdW1ucyBhcmUgZmxvYXRzIChub3Qgb2JqZWN0cykKICAgIG51bV9jb2xzID0gWyJvaV91c2QiLCJsb25nX2FjY291bnRfcGN0Iiwic2hvcnRfYWNjb3VudF9wY3QiLAogICAgICAgICAgICAgICAgImZ1bmRpbmciLCJsc19kZWx0YV9wY3QiLCJpbWJhbGFuY2UiXQogICAgZm9yIGMgaW4gbnVtX2NvbHM6CiAgICAgICAgaWYgYyBpbiBkZi5jb2x1bW5zOgogICAgICAgICAgICBkZltjXSA9IHBkLnRvX251bWVyaWMoZGZbY10sIGVycm9ycz0iY29lcmNlIikuZmlsbG5hKDAuMCkKCiAgICAjIC0tLSBPSSBaLVNjb3JlIC0tLQogICAgZGZbIm9pX3oiXSA9IChkZlsib2lfdXNkIl0gLSBkZlsib2lfdXNkIl0ubWVhbigpKSAvIChkZlsib2lfdXNkIl0uc3RkKGRkb2Y9MCkgb3IgMSkKCiAgICAjIC0tLSBMUyBEZWx0YSAvIEltYmFsYW5jZSAtLS0KICAgIGlmICJsc19kZWx0YV9wY3QiIG5vdCBpbiBkZi5jb2x1bW5zIG9yIGRmWyJsc19kZWx0YV9wY3QiXS5pc25hKCkuYWxsKCk6CiAgICAgICAgZGZbImxzX2RlbHRhX3BjdCJdID0gKGRmWyJsb25nX2FjY291bnRfcGN0Il0gLSBkZlsic2hvcnRfYWNjb3VudF9wY3QiXSkKICAgIGlmICJpbWJhbGFuY2UiIG5vdCBpbiBkZi5jb2x1bW5zIG9yIGRmWyJpbWJhbGFuY2UiXS5pc25hKCkuYWxsKCk6CiAgICAgICAgZGZbImltYmFsYW5jZSJdID0gKGRmWyJsb25nX2FjY291bnRfcGN0Il0gLyAoZGZbInNob3J0X2FjY291bnRfcGN0Il0gKyAxZS02KSkgKiAxMDAKCiAgICAjIC0tLSBGdW5kaW5nIEJpYXMgLS0tCiAgICBkZlsiZnVuZGluZ19iaWFzIl0gPSBwZC50b19udW1lcmljKGRmWyJmdW5kaW5nIl0sIGVycm9ycz0iY29lcmNlIikuZmlsbG5hKDAuMCkgKiAxMDAwMAoKICAgICMgLS0tIENvbmZsdWVuY2UgU2NvcmUgLS0tCiAgICBvaV96X25wID0gZGZbIm9pX3oiXS50b19udW1weShkdHlwZT1mbG9hdCkKICAgIGxzX25wID0gZGZbImxzX2RlbHRhX3BjdCJdLnRvX251bXB5KGR0eXBlPWZsb2F0KQogICAgaW1iX25wID0gZGZbImltYmFsYW5jZSJdLnRvX251bXB5KGR0eXBlPWZsb2F0KQogICAgZmJfbnAgPSBkZlsiZnVuZGluZ19iaWFzIl0udG9fbnVtcHkoZHR5cGU9ZmxvYXQpCgogICAgZGZbImNvbmZsdWVuY2Vfc2NvcmUiXSA9ICgKICAgICAgICBucC50YW5oKG5wLmFicyhvaV96X25wKSAvIDIpCiAgICAgICAgKyBucC50YW5oKG5wLmFicyhsc19ucCkgLyA1MCkKICAgICAgICArIG5wLnRhbmgobnAuYWJzKGltYl9ucCkgLyAyMDApCiAgICAgICAgKyBucC50YW5oKG5wLmFicyhmYl9ucCkgLyA1KQogICAgKSAvIDQuMAoKICAgICMgLS0tIEJpYXMgRGV0ZWN0aW9uIC0tLQogICAgZGZbImJpYXMiXSA9IG5wLndoZXJlKGRmWyJjb25mbHVlbmNlX3Njb3JlIl0gPiAwLjY2LCAiQlVMTCIsICJCRUFSIikKICAgIGRmWyJ1cGRhdGVkX2F0Il0gPSBkYXRldGltZS5kYXRldGltZS51dGNub3coKS5pc29mb3JtYXQoKQoKICAgIHJldHVybiBkZltbCiAgICAgICAgInN5bWJvbCIsInRpbWVmcmFtZSIsIm9pX3oiLCJsc19kZWx0YV9wY3QiLAogICAgICAgICJpbWJhbGFuY2UiLCJmdW5kaW5nIiwiY29uZmx1ZW5jZV9zY29yZSIsCiAgICAgICAgImJpYXMiLCJ1cGRhdGVkX2F0IgogICAgXV0udG9fZGljdChvcmllbnQ9InJlY29yZHMiKQoKCmRlZiB1cGRhdGVfcXVhbnRfc3VtbWFyeSgpOgogICAgcm93cyA9IGNvbXB1dGVfcXVhbnRfbWV0cmljcygpCiAgICBpZiBub3Qgcm93czoKICAgICAgICByZXR1cm4gMAogICAgY29ubiA9IHNxbGl0ZTMuY29ubmVjdChEQl9QQVRIKQogICAgY3VyID0gY29ubi5jdXJzb3IoKQogICAgY3VyLmV4ZWN1dGUoIiIiCiAgICAgICAgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgcXVhbnRfc3VtbWFyeSAoCiAgICAgICAgICAgIGlkIElOVEVHRVIgUFJJTUFSWSBLRVkgQVVUT0lOQ1JFTUVOVCwKICAgICAgICAgICAgc3ltYm9sIFRFWFQsIHRpbWVmcmFtZSBURVhULAogICAgICAgICAgICBvaV96IFJFQUwsIGxzX2RlbHRhX3BjdCBSRUFMLCBpbWJhbGFuY2UgUkVBTCwKICAgICAgICAgICAgZnVuZGluZyBSRUFMLCBjb25mbHVlbmNlX3Njb3JlIFJFQUwsIGJpYXMgVEVYVCwKICAgICAgICAgICAgdXBkYXRlZF9hdCBURVhUCiAgICAgICAgKTsKICAgICIiIikKICAgIGNvbm4uY29tbWl0KCkKICAgIGN1ci5leGVjdXRlbWFueSgiIiIKICAgICAgICBJTlNFUlQgSU5UTyBxdWFudF9zdW1tYXJ5CiAgICAgICAgKHN5bWJvbCx0aW1lZnJhbWUsb2lfeixsc19kZWx0YV9wY3QsaW1iYWxhbmNlLGZ1bmRpbmcsCiAgICAgICAgIGNvbmZsdWVuY2Vfc2NvcmUsYmlhcyx1cGRhdGVkX2F0KQogICAgICAgIFZBTFVFUyAoOnN5bWJvbCw6dGltZWZyYW1lLDpvaV96LDpsc19kZWx0YV9wY3QsOmltYmFsYW5jZSwKICAgICAgICAgICAgICAgIDpmdW5kaW5nLDpjb25mbHVlbmNlX3Njb3JlLDpiaWFzLDp1cGRhdGVkX2F0KQogICAgIiIiLCByb3dzKQogICAgY29ubi5jb21taXQoKQogICAgY29ubi5jbG9zZSgpCiAgICByZXR1cm4gbGVuKHJvd3MpCgoKIyA9PT0gQ0xJIHJ1bm5lciA9PT0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHByaW50KCJbUXVhbnRFbmdpbmVdIFJ1bm5pbmcgaW50ZWxsaWdlbnQgbWV0cmljcyB1cGRhdGUuLi4iKQogICAgdHJ5OgogICAgICAgIGNvdW50ID0gdXBkYXRlX3F1YW50X3N1bW1hcnkoKQogICAgICAgIGlmIGNvdW50ID4gMDoKICAgICAgICAgICAgcHJpbnQoZiJbUXVhbnRFbmdpbmVdIOKchSBJbnNlcnRlZCB7Y291bnR9IG5ldyByb3dzIGludG8gcXVhbnRfc3VtbWFyeS4iKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KCJbUXVhbnRFbmdpbmVdIOKaoO+4jyBObyBkYXRhIGZvdW5kIG9yIHVwZGF0ZSBza2lwcGVkLiIpCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIGltcG9ydCB0cmFjZWJhY2sKICAgICAgICBwcmludCgiW1F1YW50RW5naW5lXSDinYwgRXJyb3IgZHVyaW5nIHVwZGF0ZToiKQogICAgICAgIHRyYWNlYmFjay5wcmludF9leGMoKQo=",
        "summary": "106L | quant_engine.py | .py | 3.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\scraper.py",
        "type": ".py",
        "size_kb": 11.0,
        "content": "IyBiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQvc2NyYXBlci5weQpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgppbXBvcnQgb3MKaW1wb3J0IHRpbWUKaW1wb3J0IGFzeW5jaW8KaW1wb3J0IHBhdGhsaWIKaW1wb3J0IGpzb24KaW1wb3J0IHRocmVhZGluZwpmcm9tIHF1ZXVlIGltcG9ydCBRdWV1ZSwgRW1wdHkKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBkb3RlbnYgaW1wb3J0IGxvYWRfZG90ZW52CmltcG9ydCByZXF1ZXN0cwoKbG9hZF9kb3RlbnYoKQoKUkVQT19ST09UID0gcGF0aGxpYi5QYXRoKF9fZmlsZV9fKS5yZXNvbHZlKCkucGFyZW50c1syXQpEQl9QQVRIID0gb3MuZ2V0ZW52KCJEQl9QQVRIIiwgc3RyKFJFUE9fUk9PVCAvICJiYWNrZW5kIiAvICJzcmMiIC8gImZ1dHVyZXNib2FyZCIgLyAiZnV0dXJlcy5kYiIpKQpJTlRFUlZBTCA9IGludChvcy5nZXRlbnYoIklOVEVSVkFMIiwgb3MuZ2V0ZW52KCJBVVRPX1NDUkFQRV9JTlRFUlZBTCIsICIzMCIpKSkKCl9lbWl0X3F1ZXVlOiBRdWV1ZSA9IFF1ZXVlKCkKX2VtaXRfdGhyZWFkID0gTm9uZQoKIyA9PT0gTG9nZ2luZyBzZXR1cCA9PT0KTE9HU19ESVIgPSBwYXRobGliLlBhdGgoUkVQT19ST09UIC8gImxvZ3MiKQpMT0dTX0RJUi5ta2RpcihwYXJlbnRzPVRydWUsIGV4aXN0X29rPVRydWUpClFVQU5UX1NVTU1BUllfTE9HID0gTE9HU19ESVIgLyAicXVhbnRfc3VtbWFyeS5sb2ciCgoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBIZWxwZXJzCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmRlZiBfYXBwZW5kX3F1YW50X2xvZyhsaW5lOiBzdHIpOgogICAgdHJ5OgogICAgICAgIHdpdGggUVVBTlRfU1VNTUFSWV9MT0cub3BlbigiYSIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgICAgIGYud3JpdGUobGluZSArICJcbiIpCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIHBhc3MKCgpkZWYgX2xvZyhhcHAsICphcmdzLCBsZXZlbD0iaW5mbyIpOgogICAgIiIiCiAgICBFbmhhbmNlZCB1bml2ZXJzYWwgbG9nZ2VyIGZvciBmdXR1cmVzYm9hcmQuCiAgICAtIEFsd2F5cyBVVEYtOCBzYWZlCiAgICAtIEZsdXNoZXMgaW1tZWRpYXRlbHkgKHNvIHlvdSBzZWUgbGl2ZSB1cGRhdGVzKQogICAgLSBDb2xvci1jb2RlZCBmb3IgzpRPSSAvIFJTSSBjaGFuZ2VzCiAgICAtIFdvcmtzIGluIFBvd2VyU2hlbGwsIFZTQ29kZSwgQ01ELCBMaW51eCB0ZXJtaW5hbHMKICAgICIiIgoKICAgIGltcG9ydCBzeXMKICAgIGZyb20gY29sb3JhbWEgaW1wb3J0IEZvcmUsIFN0eWxlLCBpbml0IGFzIGNvbG9yYW1hX2luaXQKICAgIGNvbG9yYW1hX2luaXQoYXV0b3Jlc2V0PVRydWUpCgogICAgcHJlZml4ID0gZiJbQ29udGludWl0eTp7b3MuZ2V0ZW52KCdQSEFTRScsICdQMycpfV0iCiAgICBtc2cgPSAiICIuam9pbihzdHIoYSkgZm9yIGEgaW4gYXJncykKICAgIHRleHQgPSBmIntwcmVmaXh9IHttc2d9IgoKICAgICMgLS0tIFNhZmUgVVRGLTggZW5jb2RpbmcgLS0tCiAgICBzYWZlX3RleHQgPSB0ZXh0LmVuY29kZSgidXRmLTgiLCBlcnJvcnM9Imlnbm9yZSIpLmRlY29kZSgidXRmLTgiLCBlcnJvcnM9Imlnbm9yZSIpCgogICAgIyAtLS0gQXV0byBjb2xvciBzZWxlY3Rpb24gLS0tCiAgICBjb2xvciA9IFN0eWxlLlJFU0VUX0FMTAoKICAgICMgSGV1cmlzdGljOiBpZiB0aGlzIGlzIGEgcXVhbnQgc3VtbWFyeSBsaW5lLCBjb2xvciBpbnRlbGxpZ2VudGx5CiAgICBpZiAizpRPSSIgaW4gc2FmZV90ZXh0IG9yICLOlE9JIiBpbiBtc2cgb3IgIs6UT0kiIGluIHRleHQ6CiAgICAgICAgaWYgIisiIGluIHNhZmVfdGV4dCBhbmQgIs6UT0kiIGluIHNhZmVfdGV4dDoKICAgICAgICAgICAgY29sb3IgPSBGb3JlLkdSRUVOCiAgICAgICAgZWxpZiAiLSIgaW4gc2FmZV90ZXh0IGFuZCAizpRPSSIgaW4gc2FmZV90ZXh0OgogICAgICAgICAgICBjb2xvciA9IEZvcmUuUkVECiAgICBlbGlmICJSU0kiIGluIHNhZmVfdGV4dDoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGltcG9ydCByZQogICAgICAgICAgICBtYXRjaCA9IHJlLnNlYXJjaChyIlJTSVxzKFxkK1wuP1xkKikiLCBzYWZlX3RleHQpCiAgICAgICAgICAgIGlmIG1hdGNoOgogICAgICAgICAgICAgICAgcnNpX3ZhbCA9IGZsb2F0KG1hdGNoLmdyb3VwKDEpKQogICAgICAgICAgICAgICAgaWYgcnNpX3ZhbCA+IDcwOgogICAgICAgICAgICAgICAgICAgIGNvbG9yID0gRm9yZS5SRUQKICAgICAgICAgICAgICAgIGVsaWYgcnNpX3ZhbCA8IDMwOgogICAgICAgICAgICAgICAgICAgIGNvbG9yID0gRm9yZS5HUkVFTgogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBjb2xvciA9IEZvcmUuWUVMTE9XCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgcGFzcwoKICAgICMgLS0tIExvZ2dpbmcgdG8gRmxhc2sgbG9nZ2VyIGlmIGF2YWlsYWJsZSAtLS0KICAgIHRyeToKICAgICAgICBpZiBhcHAgYW5kIGdldGF0dHIoYXBwLCAibG9nZ2VyIiwgTm9uZSk6CiAgICAgICAgICAgIGlmIGxldmVsID09ICJ3YXJuaW5nIjoKICAgICAgICAgICAgICAgIGFwcC5sb2dnZXIud2FybmluZyhzYWZlX3RleHQpCiAgICAgICAgICAgIGVsaWYgbGV2ZWwgPT0gImVycm9yIjoKICAgICAgICAgICAgICAgIGFwcC5sb2dnZXIuZXJyb3Ioc2FmZV90ZXh0KQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgYXBwLmxvZ2dlci5pbmZvKHNhZmVfdGV4dCkKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcGFzcwoKICAgICMgLS0tIEFsd2F5cyBwcmludCB0byBjb25zb2xlLCBjb2xvcml6ZWQgLS0tCiAgICB0cnk6CiAgICAgICAgcHJpbnQoY29sb3IgKyBzYWZlX3RleHQgKyBTdHlsZS5SRVNFVF9BTEwpCiAgICAgICAgc3lzLnN0ZG91dC5mbHVzaCgpCiAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgIHBhc3MKCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMgUXVhbnQgU3VtbWFyeQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpkZWYgZ2VuZXJhdGVfcXVhbnRfc3VtbWFyeShhcHAsIHRpbWVmcmFtZTogc3RyID0gIjVtIiwgcGVyX3N5bWJvbDogaW50ID0gMyk6CiAgICAiIiIKICAgIEdlbmVyYXRlIGNvbXBhY3QgcGVyLXN5bWJvbCBzdW1tYXJ5IGZvciB0aGUgbGF0ZXN0IG1ldHJpY3MsCiAgICB3cml0aW5nIHRvIGxvZ3MvcXVhbnRfc3VtbWFyeS5sb2cgYW5kIGNvbnNvbGUuCiAgICAiIiIKICAgIHRyeToKICAgICAgICBmcm9tIC5kYiBpbXBvcnQgZ2V0X2xhdGVzdF9tZXRyaWNzLCBnZXRfbWV0cmljc19ieV9zeW1ib2wKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgX2xvZyhhcHAsICJbUXVhbnRdIERCIGhlbHBlcnMgbm90IGF2YWlsYWJsZSBmb3Igc3VtbWFyeSIsIGxldmVsPSJ3YXJuaW5nIikKICAgICAgICByZXR1cm4KCiAgICB0cnk6CiAgICAgICAgcmVjZW50X3Jvd3MgPSBnZXRfbGF0ZXN0X21ldHJpY3MobGltaXQ9MjAwLCB0Zj10aW1lZnJhbWUpCiAgICAgICAgaWYgbm90IHJlY2VudF9yb3dzOgogICAgICAgICAgICByZXR1cm4KCiAgICAgICAgc3ltYm9scyA9IFtdCiAgICAgICAgZm9yIHIgaW4gcmVjZW50X3Jvd3M6CiAgICAgICAgICAgIGlmIGhhc2F0dHIociwgInN5bWJvbCIpOgogICAgICAgICAgICAgICAgcyA9IHIuc3ltYm9sCiAgICAgICAgICAgIGVsaWYgaXNpbnN0YW5jZShyLCBkaWN0KToKICAgICAgICAgICAgICAgIHMgPSByLmdldCgic3ltYm9sIikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHMgPSByWyJzeW1ib2wiXSBpZiAic3ltYm9sIiBpbiByLmtleXMoKSBlbHNlIE5vbmUKICAgICAgICAgICAgaWYgcyBhbmQgcyBub3QgaW4gc3ltYm9sczoKICAgICAgICAgICAgICAgIHN5bWJvbHMuYXBwZW5kKHMpCgogICAgICAgIGxpbmVzID0gW10KICAgICAgICB0cyA9IGRhdGV0aW1lLnV0Y25vdygpLmlzb2Zvcm1hdCh0aW1lc3BlYz0ic2Vjb25kcyIpCgogICAgICAgIGZvciBzeW0gaW4gc3ltYm9sczoKICAgICAgICAgICAgcm93cyA9IGdldF9tZXRyaWNzX2J5X3N5bWJvbChzeW0sIGxpbWl0PXBlcl9zeW1ib2wsIHRmPXRpbWVmcmFtZSkKICAgICAgICAgICAgaWYgbm90IHJvd3M6CiAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgbm9ybSA9IFtdCiAgICAgICAgICAgIGZvciByIGluIHJvd3M6CiAgICAgICAgICAgICAgICBpZiBoYXNhdHRyKHIsICJfX2RpY3RfXyIpOgogICAgICAgICAgICAgICAgICAgIGQgPSB7azogdiBmb3IgaywgdiBpbiByLl9fZGljdF9fLml0ZW1zKCkgaWYgbm90IGsuc3RhcnRzd2l0aCgiXyIpfQogICAgICAgICAgICAgICAgZWxpZiBpc2luc3RhbmNlKHIsIGRpY3QpOgogICAgICAgICAgICAgICAgICAgIGQgPSByCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGQgPSB7azogcltrXSBmb3IgayBpbiByLmtleXMoKX0KICAgICAgICAgICAgICAgIG5vcm0uYXBwZW5kKGQpCgogICAgICAgICAgICBuZXdlc3QgPSBub3JtWzBdCiAgICAgICAgICAgIHByZXYgPSBub3JtWzFdIGlmIGxlbihub3JtKSA+IDEgZWxzZSBOb25lCgogICAgICAgICAgICBvaSA9IG5ld2VzdC5nZXQoIm9pX2Fic191c2QiKSBvciAwLjAKICAgICAgICAgICAgdm9sID0gbmV3ZXN0LmdldCgidm9sX3VzZCIpIG9yIDAuMAogICAgICAgICAgICByc2kgPSBuZXdlc3QuZ2V0KCJyc2kiKSBvciA1MC4wCiAgICAgICAgICAgIGxzID0gbmV3ZXN0LmdldChmImdsb2JhbF9sc197dGltZWZyYW1lfSIpIG9yIG5ld2VzdC5nZXQoImdsb2JhbF9sc181bSIpIG9yIE5vbmUKICAgICAgICAgICAgbHNfcHJldiA9IHByZXYuZ2V0KGYiZ2xvYmFsX2xzX3t0aW1lZnJhbWV9IikgaWYgcHJldiBlbHNlIE5vbmUKICAgICAgICAgICAgdG9wX2FjYyA9IG5ld2VzdC5nZXQoInRvcF9sc19hY2NvdW50cyIpIG9yIE5vbmUKICAgICAgICAgICAgdG9wX2FjY19wcmV2ID0gcHJldi5nZXQoInRvcF9sc19hY2NvdW50cyIpIGlmIHByZXYgZWxzZSBOb25lCgogICAgICAgICAgICBkZWYgcGN0KG5ldywgb2xkKToKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBpZiBvbGQgYW5kIG9sZCAhPSAwOgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKG5ldyAtIG9sZCkgLyBvbGQgKiAxMDAuMAogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICByZXR1cm4gMC4wCgogICAgICAgICAgICBvaV9kZWx0YSA9IHBjdChvaSwgcHJldi5nZXQoIm9pX2Fic191c2QiKSkgaWYgcHJldiBlbHNlIDAuMAogICAgICAgICAgICBsc19kZWx0YSA9IHBjdChscywgbHNfcHJldikgaWYgKGxzIGlzIG5vdCBOb25lIGFuZCBsc19wcmV2IGlzIG5vdCBOb25lKSBlbHNlIDAuMAogICAgICAgICAgICB0b3BfYWNjX2RlbHRhID0gcGN0KHRvcF9hY2MsIHRvcF9hY2NfcHJldikgaWYgKHRvcF9hY2MgaXMgbm90IE5vbmUgYW5kIHRvcF9hY2NfcHJldiBpcyBub3QgTm9uZSkgZWxzZSAwLjAKCiAgICAgICAgICAgIG9pX3MgPSBmIiR7b2k6LC4wZn0iIGlmIG9pIGVsc2UgIiQwIgogICAgICAgICAgICB2b2xfcyA9IGYiJHt2b2wvMWU5Oi4yZn1CIiBpZiB2b2wgYW5kIHZvbCA+IDAgZWxzZSAiJDAiCiAgICAgICAgICAgIHJzaV9zID0gZiJ7cnNpOi4yZn0iCiAgICAgICAgICAgIGxzX3MgPSBmIntsczouM2Z9IiBpZiBscyBpcyBub3QgTm9uZSBlbHNlICJOL0EiCiAgICAgICAgICAgIHRvcGFjY19zID0gZiJ7dG9wX2FjYzouM2Z9IiBpZiB0b3BfYWNjIGlzIG5vdCBOb25lIGVsc2UgIk4vQSIKCiAgICAgICAgICAgIHNpZ24gPSBsYW1iZGEgeDogKCIrIiBpZiB4ID4gMCBlbHNlICIiKSArIGYie3g6LjJmfSUiCiAgICAgICAgICAgIGxpbmUgPSBmIltRdWFudCB7dGltZWZyYW1lfV0ge3N5bX0gzpRPSSB7c2lnbihvaV9kZWx0YSl9IHwgTC9TIHtsc19zfSAoe3NpZ24obHNfZGVsdGEpfSkgfCBUb3BBY2Mge3RvcGFjY19zfSAoe3NpZ24odG9wX2FjY19kZWx0YSl9KSB8IFJTSSB7cnNpX3N9IHwgVm9sIHt2b2xfc30iCiAgICAgICAgICAgIGxpbmVzLmFwcGVuZChsaW5lKQoKICAgICAgICBpZiBsaW5lczoKICAgICAgICAgICAgaGVhZGVyID0gZiJbUXVhbnRTdW1tYXJ5IHt0aW1lZnJhbWV9XSB7dHN9IC0gc3ltYm9scz17bGVuKGxpbmVzKX0iCiAgICAgICAgICAgIF9sb2coYXBwLCBoZWFkZXIpCiAgICAgICAgICAgIF9hcHBlbmRfcXVhbnRfbG9nKGhlYWRlcikKICAgICAgICAgICAgZm9yIGxuIGluIGxpbmVzOgogICAgICAgICAgICAgICAgX2xvZyhhcHAsIGxuKQogICAgICAgICAgICAgICAgX2FwcGVuZF9xdWFudF9sb2cobG4pCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgX2xvZyhhcHAsIGYiW1F1YW50XSBnZW5lcmF0ZV9xdWFudF9zdW1tYXJ5IGZhaWxlZDoge2V9IiwgbGV2ZWw9Indhcm5pbmciKQoKCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiMgU29ja2V0IEVtaXQgV29ya2VyCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmRlZiBlbWl0X3dvcmtlcihzb2NrZXRpbyk6CiAgICBfbG9nKE5vbmUsICJFbWl0IHdvcmtlciBzdGFydGVkIikKICAgIGlkbGUgPSAwCiAgICB3aGlsZSBUcnVlOgogICAgICAgIHRyeToKICAgICAgICAgICAgcGF5bG9hZCA9IF9lbWl0X3F1ZXVlLmdldCh0aW1lb3V0PTE1KQogICAgICAgICAgICBpZiBwYXlsb2FkIGFuZCBzb2NrZXRpbzoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBzb2NrZXRpby5lbWl0KCJtZXRyaWNzX3VwZGF0ZSIsIHBheWxvYWQpCiAgICAgICAgICAgICAgICAgICAgX2xvZyhOb25lLCBmIkVtaXR0ZWQge2xlbihwYXlsb2FkLmdldCgnZGF0YScsIFtdKSl9IHBhaXJzIikKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBfbG9nKE5vbmUsIGYiRW1pdCBlcnJvcjoge2V9IiwgbGV2ZWw9ImVycm9yIikKICAgICAgICAgICAgX2VtaXRfcXVldWUudGFza19kb25lKCkKICAgICAgICAgICAgaWRsZSA9IDAKICAgICAgICBleGNlcHQgRW1wdHk6CiAgICAgICAgICAgIGlkbGUgKz0gMQogICAgICAgICAgICBpZiBpZGxlICUgOCA9PSAwOgogICAgICAgICAgICAgICAgX2xvZyhOb25lLCBmIkVtaXQgd29ya2VyIGhlYXJ0YmVhdCAoe2lkbGUgKiAxNX1zIGlkbGUpIikKICAgICAgICAgICAgdGltZS5zbGVlcCgwLjI1KQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgX2xvZyhOb25lLCBmIkVtaXQgd29ya2VyIGZhdGFsOiB7ZX0iLCBsZXZlbD0iZXJyb3IiKQogICAgICAgICAgICB0aW1lLnNsZWVwKDEpCgoKIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIyBNYWluIFNjcmFwZXIgTG9vcAojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpkZWYgYXV0b19zY3JhcGUoYXBwKToKICAgICIiIgogICAgU3RhcnQgc2NyYXBpbmcgbG9vcC4gU2FmZSB0byBjYWxsIGFzIGJhY2tncm91bmQgdGFzay4KICAgIFVzZXMgYXN5bmNpbyBnZXRfYWxsX21ldHJpY3MoKSBhbmQgc2F2ZSB2aWEgZGIuc2F2ZV9tZXRyaWNzX3YzLgogICAgIiIiCiAgICBpZiBnZXRhdHRyKGF1dG9fc2NyYXBlLCAiX3J1bm5pbmciLCBGYWxzZSk6CiAgICAgICAgX2xvZyhhcHAsICJbU2NyYXBlcl0gQWxyZWFkeSBydW5uaW5nLCBza2lwcGluZyByZWluaXQuIikKICAgICAgICByZXR1cm4KICAgIGF1dG9fc2NyYXBlLl9ydW5uaW5nID0gVHJ1ZQoKICAgIHRyeToKICAgICAgICBmcm9tIC5tZXRyaWNzIGltcG9ydCBnZXRfYWxsX21ldHJpY3MKICAgICAgICBmcm9tIC5kYiBpbXBvcnQgc2F2ZV9tZXRyaWNzX3YzIGFzIHNhdmVfbWV0cmljcwogICAgICAgIF9sb2coYXBwLCAiW1NjcmFwZXJdIFF1YW50IHNhdmVfbWV0cmljc192MyBsb2FkZWQgc3VjY2Vzc2Z1bGx5LiIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgX2xvZyhhcHAsIGYiQXV0by1zY3JhcGUgaW1wb3J0cyBmYWlsZWQ6IHtlfSIsIGxldmVsPSJ3YXJuaW5nIikKICAgICAgICByZXR1cm4KCiAgICAjIFN0YXJ0IHNvY2tldCBlbWl0IHdvcmtlcgogICAgZ2xvYmFsIF9lbWl0X3RocmVhZAogICAgdHJ5OgogICAgICAgIGZyb20gLmFwcCBpbXBvcnQgc29ja2V0aW8KICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgc29ja2V0aW8gPSBOb25lCgogICAgaWYgX2VtaXRfdGhyZWFkIGlzIE5vbmU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBpZiBzb2NrZXRpbyBhbmQgaGFzYXR0cihzb2NrZXRpbywgInN0YXJ0X2JhY2tncm91bmRfdGFzayIpOgogICAgICAgICAgICAgICAgc29ja2V0aW8uc3RhcnRfYmFja2dyb3VuZF90YXNrKGxhbWJkYTogZW1pdF93b3JrZXIoc29ja2V0aW8pKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgX2VtaXRfdGhyZWFkID0gdGhyZWFkaW5nLlRocmVhZCh0YXJnZXQ9ZW1pdF93b3JrZXIsIGFyZ3M9KHNvY2tldGlvLCksIGRhZW1vbj1UcnVlKQogICAgICAgICAgICAgICAgX2VtaXRfdGhyZWFkLnN0YXJ0KCkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uOgogICAgICAgICAgICBfZW1pdF90aHJlYWQgPSB0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1lbWl0X3dvcmtlciwgYXJncz0oc29ja2V0aW8sKSwgZGFlbW9uPVRydWUpCiAgICAgICAgICAgIF9lbWl0X3RocmVhZC5zdGFydCgpCgogICAgaWYgIl9zaGFyZWRfbG9vcCIgbm90IGluIGdsb2JhbHMoKToKICAgICAgICBnbG9iYWxzKClbIl9zaGFyZWRfbG9vcCJdID0gYXN5bmNpby5uZXdfZXZlbnRfbG9vcCgpCiAgICBsb29wID0gZ2xvYmFscygpWyJfc2hhcmVkX2xvb3AiXQoKICAgIGJhc2VfaW50ZXJ2YWwgPSBtYXgoNSwgSU5URVJWQUwpCiAgICB0ZnMgPSBbIjVtIiwgIjE1bSIsICIzMG0iLCAiMWgiXQogICAgdGZfaWR4ID0gMAogICAgYmFja29mZiA9IDAuMgoKICAgIHdoaWxlIFRydWU6CiAgICAgICAgdGYgPSB0ZnNbdGZfaWR4ICUgbGVuKHRmcyldCiAgICAgICAgdHJ5OgogICAgICAgICAgICBfbG9nKGFwcCwgZiJTY3JhcGUgc3RhcnQgdGY9e3RmfSIpCiAgICAgICAgICAgIG1ldHJpY3MgPSBsb29wLnJ1bl91bnRpbF9jb21wbGV0ZShnZXRfYWxsX21ldHJpY3ModGY9dGYpKQogICAgICAgICAgICBpZiBtZXRyaWNzOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIHNhdmVkID0gc2F2ZV9tZXRyaWNzKG1ldHJpY3MsIHRpbWVmcmFtZT10ZikKICAgICAgICAgICAgICAgICAgICBpZiBzYXZlZCA+IDA6CiAgICAgICAgICAgICAgICAgICAgICAgIHNhbXBsZSA9IG1ldHJpY3NbMF0KICAgICAgICAgICAgICAgICAgICAgICAgb2kgPSBzYW1wbGUuZ2V0KCJvaV9hYnNfdXNkIikgb3IgMC4wCiAgICAgICAgICAgICAgICAgICAgICAgIHYgPSBzYW1wbGUuZ2V0KCJ2b2xfdXNkIikgb3IgMC4wCiAgICAgICAgICAgICAgICAgICAgICAgIHMgPSBzYW1wbGUuZ2V0KCJzeW1ib2wiKQogICAgICAgICAgICAgICAgICAgICAgICBfbG9nKGFwcCwgZiJbUXVhbnRdIFNhdmVkIHtzYXZlZH0gKHt0Zn0pIHwge3N9IG9pPXtvaTouMGZ9IHZvbD17djouMGZ9IikKCiAgICAgICAgICAgICAgICAgICAgICAgICMgLS0tIFF1YW50IFN1bW1hcnkgLS0tCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlbmVyYXRlX3F1YW50X3N1bW1hcnkoYXBwLCB0aW1lZnJhbWU9dGYpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbG9nKGFwcCwgIltRdWFudF0gZ2VuZXJhdGVfcXVhbnRfc3VtbWFyeSBlcnJvciIsIGxldmVsPSJ3YXJuaW5nIikKCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICAgICAgX2xvZyhhcHAsIGYiU2F2ZSBtZXRyaWNzIGVycm9yOiB7ZX0iLCBsZXZlbD0id2FybmluZyIpCgogICAgICAgICAgICAgICAgIyAtLS0gRW1pdCBhbmQgc2xlZXAgLS0tCiAgICAgICAgICAgICAgICBwYXlsb2FkID0geyJkYXRhIjogbWV0cmljcywgInBoYXNlIjogb3MuZ2V0ZW52KCJQSEFTRSIsICJQMyIpLCAidGltZXN0YW1wIjogZGF0ZXRpbWUudXRjbm93KCkuaXNvZm9ybWF0KHRpbWVzcGVjPSJzZWNvbmRzIil9CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgX2VtaXRfcXVldWUucHV0X25vd2FpdChwYXlsb2FkKQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgICAgICBfbG9nKGFwcCwgIkVtaXQgcXVldWUgZnVsbC9mYWlsZWQiLCBsZXZlbD0id2FybmluZyIpCgogICAgICAgICAgICAgICAgc2xlZXBfdGltZSA9IG1heCg1LCBiYXNlX2ludGVydmFsICogMC42KQogICAgICAgICAgICAgICAgYmFja29mZiA9IDAuMgogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgX2xvZyhhcHAsIGYiTm8gbWV0cmljcyByZXR1cm5lZCBmb3IgdGY9e3RmfSIsIGxldmVsPSJ3YXJuaW5nIikKICAgICAgICAgICAgICAgIHNsZWVwX3RpbWUgPSBtaW4oMTIwLCBiYXNlX2ludGVydmFsICogMS41KQoKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIF9sb2coYXBwLCBmIlNjcmFwZSBlcnJvciB0Zj17dGZ9OiB7ZX0iLCBsZXZlbD0iZXJyb3IiKQogICAgICAgICAgICBzbGVlcF90aW1lID0gbWluKDEyMCwgYmFzZV9pbnRlcnZhbCAqIDIpCiAgICAgICAgICAgIGJhY2tvZmYgPSBtaW4oYmFja29mZiAqIDIsIDEwKQogICAgICAgICAgICB0aW1lLnNsZWVwKGJhY2tvZmYgKyAoYmFzZV9pbnRlcnZhbCAqIDAuMSkpCgogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIHRmX2lkeCArPSAxCiAgICAgICAgICAgIHRpbWUuc2xlZXAoc2xlZXBfdGltZSkK",
        "summary": "316L | scraper.py | .py | 11.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\utils.py",
        "type": ".py",
        "size_kb": 2.5,
        "content": "aW1wb3J0IHJlcXVlc3RzCmZyb20gY29sbGVjdGlvbnMgaW1wb3J0IE9yZGVyZWREaWN0CmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCB1cmxlbmNvZGUKZnJvbSBmbGFzayBpbXBvcnQgY3VycmVudF9hcHAKCmRlZiBzZW5kX3B1YmxpY19yZXF1ZXN0KHVybF9wYXRoLCBwYXlsb2FkPXt9LCBhcGlfYmFzZT1Ob25lKToKICAgICIiIlB1YmxpYyBBUEkgcmVxdWVzdCB3aXRoIG9wdGlvbmFsIGJhc2UgVVJMIChkZWZhdWx0IGZhcGkpLiIiIgogICAgYmFzZSA9IGFwaV9iYXNlIG9yIGN1cnJlbnRfYXBwLmNvbmZpZy5nZXQoJ0FQSV9CQVNFX1VSTCcsICdodHRwczovL2ZhcGkuYmluYW5jZS5jb20nKQogICAgcXVlcnlfc3RyaW5nID0gdXJsZW5jb2RlKHBheWxvYWQsIFRydWUpCiAgICB1cmwgPSBiYXNlICsgdXJsX3BhdGgKICAgIGlmIHF1ZXJ5X3N0cmluZzoKICAgICAgICB1cmwgPSB1cmwgKyAiPyIgKyBxdWVyeV9zdHJpbmcKICAgIHRyeToKICAgICAgICBzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpCiAgICAgICAgc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7IkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgifSkKICAgICAgICByZXNwb25zZSA9IHNlc3Npb24uZ2V0KHVybCkKICAgICAgICBwcmludChmIkRFQlVHIEFQSToge3VybH0gLSBTdGF0dXM6IHtyZXNwb25zZS5zdGF0dXNfY29kZX0iKSAgIyBLZWVwIGRlYnVnCiAgICAgICAgaWYgcmVzcG9uc2Uuc3RhdHVzX2NvZGUgIT0gMjAwOgogICAgICAgICAgICBwcmludChmIk5vbi0yMDAgc3RhdHVzIGZvciB7dXJsfToge3Jlc3BvbnNlLnRleHRbOjEwMF19IikKICAgICAgICAgICAgcmV0dXJuIHt9LCBbXSAgIyBGYWxsYmFjawogICAgICAgIAogICAgICAgIGlmIG5vdCByZXNwb25zZS50ZXh0LnN0cmlwKCk6CiAgICAgICAgICAgIHByaW50KGYiRW1wdHkgcmVzcG9uc2UgZm9yIHt1cmx9IikKICAgICAgICAgICAgcmV0dXJuIHt9LCBbXQogICAgICAgIAogICAgICAgICMgRGV0ZWN0IEhUTUwgZXJyb3IgcGFnZQogICAgICAgIGlmIHJlc3BvbnNlLnRleHQuc3RhcnRzd2l0aCgnPCFET0NUWVBFJykgb3IgJ2JpbmFuY2UuY29tL2VuL2Vycm9yJyBpbiByZXNwb25zZS50ZXh0Lmxvd2VyKCk6CiAgICAgICAgICAgIHByaW50KGYiSFRNTCBlcnJvciBwYWdlIGZvciB7dXJsfTogUmVnaW9uYWwgYmxvY2sgb3IgaW52YWxpZCBhY2Nlc3MuIEZhbGxiYWNrIGVtcHR5LiIpCiAgICAgICAgICAgIHJldHVybiB7fSwgW10KICAgICAgICAKICAgICAgICB0cnk6CiAgICAgICAgICAgIGpzb25fcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkKICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5KU09ORGVjb2RlRXJyb3IgYXMgZToKICAgICAgICAgICAgcHJpbnQoZiJOb24tSlNPTiByZXNwb25zZSBmb3Ige3VybH06IHtyZXNwb25zZS50ZXh0WzoyMDBdfSIpCiAgICAgICAgICAgIGpzb25fcmVzcG9uc2UgPSBbXSAgIyBGYWxsYmFjayBlbXB0eSBsaXN0CiAgICAgICAgCiAgICAgICAgaWYgImNvZGUiIGluIGpzb25fcmVzcG9uc2UgYW5kIGpzb25fcmVzcG9uc2VbImNvZGUiXSA8IDA6CiAgICAgICAgICAgIHByaW50KGYiQVBJIGVycm9yIGZvciB7dXJsfToge2pzb25fcmVzcG9uc2VbJ21zZyddfSIpCiAgICAgICAgICAgIHJldHVybiB7fSwgW10KICAgICAgICAKICAgICAgICByZXR1cm4gcmVzcG9uc2UuaGVhZGVycywganNvbl9yZXNwb25zZQogICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yIGFzIGU6CiAgICAgICAgcHJpbnQoZiJDb25uZWN0aW9uIGVycm9yIGZvciB7dXJsfToge2V9IikKICAgICAgICByZXR1cm4ge30sIFtdCgpkZWYgaGFzaGluZyhxdWVyeV9zdHJpbmcsIGV4Y2hhbmdlPSJiaW5hbmNlIiwgdGltZXN0YW1wPU5vbmUpOgogICAgIiIiU2lnbmF0dXJlIGhhc2hpbmcgKGZyb20gc2NyYXBlci5weSkuIiIiCiAgICBpbXBvcnQgaG1hYwogICAgaW1wb3J0IGhhc2hsaWIKICAgIGlmIGV4Y2hhbmdlID09ICJieWJpdCI6CiAgICAgICAgcXVlcnlfc3RyaW5nID0gZiJ7dGltZXN0YW1wfXtjdXJyZW50X2FwcC5jb25maWdbJ0FQSV9LRVknXX01MDAwIiArIHF1ZXJ5X3N0cmluZwogICAgICAgIHJldHVybiBobWFjLm5ldygKICAgICAgICAgICAgYnl0ZXMoY3VycmVudF9hcHAuY29uZmlnWyJBUElfU0VDUkVUIl0uZW5jb2RlKCJ1dGYtOCIpKSwKICAgICAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICAgICAgaGFzaGxpYi5zaGEyNTYsCiAgICAgICAgKS5oZXhkaWdlc3QoKQogICAgcmV0dXJuIGhtYWMubmV3KAogICAgICAgIGJ5dGVzKGN1cnJlbnRfYXBwLmNvbmZpZ1siQVBJX1NFQ1JFVCJdLmVuY29kZSgidXRmLTgiKSksCiAgICAgICAgcXVlcnlfc3RyaW5nLmVuY29kZSgidXRmLTgiKSwKICAgICAgICBoYXNobGliLnNoYTI1NiwKICAgICkuaGV4ZGlnZXN0KCk=",
        "summary": "61L | utils.py | .py | 2.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\version.py",
        "type": ".py",
        "size_kb": 0.1,
        "content": "IyBweWxpbnQ6IHNraXAtZmlsZQoKX192ZXJzaW9uX18gPSAiMC4zLjQuZGV2MCtnNTcxMzdkNGU4LmQyMDI1MTAxNiI=",
        "summary": "3L | version.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\wsgi.py",
        "type": ".py",
        "size_kb": 0.1,
        "content": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGZ1dHVyZXNib2FyZC5hcHAKCgphcHAgPSBmdXR1cmVzYm9hcmQuYXBwLmluaXRfYXBwKCkK",
        "summary": "6L | wsgi.py | .py | 0.1 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\__init__.py",
        "type": ".py",
        "size_kb": 0.9,
        "content": "Iwpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgppbXBvcnQgcGF0aGxpYgoKUEFDS0FHRV9ST09UID0gcGF0aGxpYi5QYXRoKF9fZmlsZV9fKS5yZXNvbHZlKCkucGFyZW50CnRyeToKICAgIGZyb20gLnZlcnNpb24gaW1wb3J0IF9fdmVyc2lvbl9fCmV4Y2VwdCBJbXBvcnRFcnJvcjogICMgcHJhZ21hOiBubyBjb3ZlcgogICAgX192ZXJzaW9uX18gPSAiMC4wLjAubm90LWluc3RhbGxlZCIKICAgIHRyeToKICAgICAgICBmcm9tIGltcG9ydGxpYi5tZXRhZGF0YSBpbXBvcnQgUGFja2FnZU5vdEZvdW5kRXJyb3IsIHZlcnNpb24KCiAgICAgICAgdHJ5OgogICAgICAgICAgICBfX3ZlcnNpb25fXyA9IHZlcnNpb24oImZ1dHVyZXNib2FyZCIpCiAgICAgICAgZXhjZXB0IFBhY2thZ2VOb3RGb3VuZEVycm9yOgogICAgICAgICAgICAjIHBhY2thZ2UgaXMgbm90IGluc3RhbGxlZAogICAgICAgICAgICBwYXNzCiAgICBleGNlcHQgSW1wb3J0RXJyb3I6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBmcm9tIHBrZ19yZXNvdXJjZXMgaW1wb3J0ICggICMgdHlwZTogaWdub3JlCiAgICAgICAgICAgICAgICBEaXN0cmlidXRpb25Ob3RGb3VuZCwKICAgICAgICAgICAgICAgIGdldF9kaXN0cmlidXRpb24sCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIF9fdmVyc2lvbl9fID0gZ2V0X2Rpc3RyaWJ1dGlvbigiZnV0dXJlc2JvYXJkIikudmVyc2lvbgogICAgICAgICAgICBleGNlcHQgRGlzdHJpYnV0aW9uTm90Rm91bmQ6CiAgICAgICAgICAgICAgICAjIHBhY2thZ2UgaXMgbm90IGluc3RhbGxlZAogICAgICAgICAgICAgICAgcGFzcwogICAgICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICAgICAgIyBwa2cgcmVzb3VyY2VzIGlzbid0IGV2ZW4gYXZhaWxhYmxlPyEKICAgICAgICAgICAgcGFzcwo=",
        "summary": "33L | __init__.py | .py | 0.9 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\base.html",
        "type": ".html",
        "size_kb": 10.5,
        "content": "",
        "summary": "141L | base.html | .html | 10.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\coin.html",
        "type": ".html",
        "size_kb": 30.7,
        "content": "",
        "summary": "707L | coin.html | .html | 30.7 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\error.html",
        "type": ".html",
        "size_kb": 0.4,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfTQwNHslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWV4Y2xhbWF0aW9uLWNpcmNsZSI+PC9pPiBFcnJvciA0MDQ8L2gzPgogICAgPC9kaXY+CiAgICA8cCBjbGFzcz0iaW1wb3J0YW50Ij4KICAgICAgICBQYWdlIG5vdCBmb3VuZAogICAgPC9wPgp7JSBlbmRibG9jayAlfQo=",
        "summary": "10L | error.html | .html | 0.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\history.html",
        "type": ".html",
        "size_kb": 3.6,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9eyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgdGl0bGUgJX1JbmNvbWUgaGlzdG9yeXslIGVuZGJsb2NrICV9CnslIGJsb2NrIGNvbnRlbnQgJX0KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBmbGV4LXdyYXAgZmxleC1tZC1ub3dyYXAgYWxpZ24taXRlbXMtY2VudGVyIHB0LTMgcGItMiBtYi0zIGJvcmRlci1ib3R0b20iPgogICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLWhpc3RvcnkiPjwvaT4gSW5jb21lIGhpc3Rvcnk8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIHslIGlmIGZpbGVuYW1lICE9ICItIiAlfQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtaW5mbyIgcm9sZT0iYWxlcnQiPjxpIGNsYXNzPSJmYXMgZmEtZmlsZS1kb3dubG9hZCI+PC9pPiBZb3VyIGZpbGUgaGFzIGJlZW4gc2F2ZWQgdG8gPGNvZGU+e3sgZm5hbWUgfX08L2NvZGU+IHdoaWNoIGNhbiBiZSBkb3dubG9hZGVkIGJ5IGNsaWNraW5nIDxhIGhyZWY9ICJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1mbmFtZSkgfX0iPmhlcmU8L2E+PC9kaXY+PGJyPgogICAgICAgICAgICB7JSBlbmRpZiAlfQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0ib3JkZXJzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+VGltZSBwZXJpb2Q8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlRvdGFsIHJlY29yZHM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvbCBpbiBoaXN0b3J5WyJjb2x1bW5zIl0gJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+e3sgY29sIH19PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgdGltZWZyYW1lIGluIGhpc3RvcnkgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGlmIHRpbWVmcmFtZSAhPSAiY29sdW1ucyIgJX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCJtYWluLmhpc3RvcnlfcGFnZV90aW1lZnJhbWUiLCBzdGFydD1oaXN0b3J5W3RpbWVmcmFtZV1bInN0YXJ0Il0sIGVuZD1oaXN0b3J5W3RpbWVmcmFtZV1bImVuZCJdKSB9fSIgcm9sZT0iYnV0dG9uIj5TYXZlIHRvIGZpbGU8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHRpbWVmcmFtZSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBoaXN0b3J5W3RpbWVmcmFtZV1bInRvdGFsIl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgY29sIGluIGhpc3RvcnlbImNvbHVtbnMiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGhpc3RvcnlbdGltZWZyYW1lXVtjb2xdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGJyPjxocj48YnI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZCI+CiAgICAgICAgICAgICAgICA8dGFibGUgaWQ9Im9sZGZpbGVzIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Eb3dubG9hZDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+RmlsZW5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICB7JSBmb3IgZmlsZSBpbiBmaWxlcyAlfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtIiBocmVmPSJ7eyB1cmxfZm9yKCdzdGF0aWMnLCBmaWxlbmFtZT1maWxlKSB9fSIgcm9sZT0iYnV0dG9uIj5Eb3dubG9hZDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBmaWxlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKCgoKCiAgICA8c2NyaXB0PgogICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICQoJyNvcmRlcnMnKS5EYXRhVGFibGUoewogICAgICAgICAgICAgICAgInBhZ2luZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IGZhbHNlLAogICAgICAgICAgICAgICAgIm9yZGVyIjogW10sCiAgICAgICAgICAgICAgICAiaW5mbyI6IGZhbHNlLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJCgnI29sZGZpbGVzJykuRGF0YVRhYmxlKHsKICAgICAgICAgICAgICAgICJwYWdpbmciOiB0cnVlLAogICAgICAgICAgICAgICAgInNlYXJjaGluZyI6IHRydWUsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWyAxLCAnZGVzYycgXV0sCiAgICAgICAgICAgICAgICAiaW5mbyI6IHRydWUsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "87L | history.html | .html | 3.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\home.html",
        "type": ".html",
        "size_kb": 9.4,
        "content": "",
        "summary": "300L | home.html | .html | 9.4 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\positions.html",
        "type": ".html",
        "size_kb": 4.5,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayBhdXRvcmVsb2FkICV9PG1ldGEgaHR0cC1lcXVpdj0icmVmcmVzaCIgY29udGVudD0iNjAiPnslIGVuZGJsb2NrICV9CnslIGJsb2NrIHRpdGxlICV9UG9zaXRpb25zeyUgZW5kYmxvY2sgJX0KeyUgYmxvY2sgY29udGVudCAlfQogICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGZsZXgtd3JhcCBmbGV4LW1kLW5vd3JhcCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyBwYi0yIG1iLTMgYm9yZGVyLWJvdHRvbSI+CiAgICAgICAgPGgzPjxpIGNsYXNzPSJmYXMgZmEtaGFuZC1ob2xkaW5nLXVzZCI+PC9pPiBQb3NpdGlvbnM8L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiB0YWJsZS1yZXNwb25zaXZlIj4KICAgICAgICAgICAgPHRhYmxlIGlkPSJvcmRlcnMiIGNsYXNzPSd0YWJsZSB0YWJsZS1zbSB0YWJsZS1ib3JkZXJlZCB0ZXh0LWNlbnRlcic+CiAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3M9InRoZWFkLWRhcmsiPgogICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlN5bWJvbDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5MZXZlcmFnZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFZvbHVtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5Qb3MuIFByaWNlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlBvcy4gVmFsdWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+VW5yZWFsaXNlZCBQbkw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+Q3VycmVudCBQcmljZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+QnV5cyBsZWZ0PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPSJ0YWJsZS1zdWNjZXNzIj5OZXh0IGJ1eTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtc3VjY2VzcyI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLXN1Y2Nlc3MiPkRpc3RhbmNlICU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+U2VsbHMgbGVmdDwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0idGFibGUtZGFuZ2VyIj5OZXh0IHNlbGw8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InRhYmxlLWRhbmdlciI+RGlzdGFuY2UgJTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgICAgeyUgZm9yIGNvaW4gaW4gcG9zaXRpb25zICV9CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBjb2luIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNV19fSB7eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bM10gfX14PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMF1bNl0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKHBvc2l0aW9uc1tjb2luXVswXVswXVs2XSAqIHBvc2l0aW9uc1tjb2luXVswXVswXVs0XSl8cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7ICIkJS4yZiJ8Zm9ybWF0KHBvc2l0aW9uc1tjb2luXVswXVswXVsyXSkgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IG1hcmtwcmljZXNbY29pbl18cm91bmQoOCl9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzBdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVs0XX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNV19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+eyUgaWYgcG9zaXRpb25zW2NvaW5dWzJdWzRdICE9ICItIiAlfXt7ICgocG9zaXRpb25zW2NvaW5dWzJdWzVdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsxXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bNl19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzddfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs2XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs3XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICB7JSBpZiBwb3NpdGlvbnNbY29pbl1bMF18bGVuZ3RoID4gMSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgY29pbiB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzVdfX0ge3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzNdIH19eDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzBdWzFdWzZdIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0gfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IChwb3NpdGlvbnNbY29pbl1bMF1bMV1bNl0gKiBwb3NpdGlvbnNbY29pbl1bMF1bMV1bNF0pfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyAiJCUuMmYifGZvcm1hdChwb3NpdGlvbnNbY29pbl1bMF1bMV1bMl0pIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBtYXJrcHJpY2VzW2NvaW5dfHJvdW5kKDgpfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IHBvc2l0aW9uc1tjb2luXVsyXVsyXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bOF19fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzldfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVs4XSAhPSAiLSIgJX17eyAoKHBvc2l0aW9uc1tjb2luXVsyXVs5XXxmbG9hdC9tYXJrcHJpY2VzW2NvaW5dKSoxMDApfHJvdW5kKDIpfX0lIHslIGVuZGlmICV9PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bM119fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgcG9zaXRpb25zW2NvaW5dWzJdWzEwXX19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBwb3NpdGlvbnNbY29pbl1bMl1bMTFdfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnslIGlmIHBvc2l0aW9uc1tjb2luXVsyXVsxMF0gIT0gIi0iICV9e3sgKChwb3NpdGlvbnNbY29pbl1bMl1bMTFdfGZsb2F0L21hcmtwcmljZXNbY29pbl0pKjEwMCl8cm91bmQoMil9fSUgeyUgZW5kaWYgJX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIHslIGVuZGlmICV9CiAgICAgICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdD4KCiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJCgnI29yZGVycycpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbWzAsImFzYyJdXSwKICAgICAgICAgICAgfSk7CiAgICAgICAgfSApOwoKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "84L | positions.html | .html | 4.5 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\templates\\projection.html",
        "type": ".html",
        "size_kb": 5.0,
        "content": "eyUgZXh0ZW5kcyAiYmFzZS5odG1sIiAlfQp7JSBibG9jayB0aXRsZSAlfVByb2plY3Rpb257JSBlbmRibG9jayAlfQp7JSBibG9jayBjb250ZW50ICV9CiAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gZmxleC13cmFwIGZsZXgtbWQtbm93cmFwIGFsaWduLWl0ZW1zLWNlbnRlciBwdC0zIHBiLTIgbWItMyBib3JkZXItYm90dG9tIj4KICAgICAgICA8aDM+PGkgY2xhc3M9ImZhcyBmYS1jaGFydC1saW5lIj48L2k+IFByb2plY3Rpb248L2gzPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0xMiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgICAgQmFsYW5jZSBwcm9qZWN0aW9uIHZpc3VhbGlzZWQKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGNhbnZhcyBpZD0ibGluZUNoYXJ0IiBoZWlnaHQ9IjQwMCI+PC9jYW52YXM+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8YnI+CgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtaGVhZGVyIHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgIEJhbGFuY2UgcHJvamVjdGlvbiBicmVha2Rvd24KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHRhYmxlIGlkPSJoeXBlIiBjbGFzcz0ndGFibGUgdGFibGUtc20gdGFibGUtYm9yZGVyZWQgdGV4dC1jZW50ZXInPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzcz0idGhlYWQtZGFyayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EYWlseSAlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4zMCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD42MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD45MCBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4xMjAgZGF5czwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+MjQwIGRheXM8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPjM2NSBkYXlzPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgeyUgZm9yIHZhbHVlIGluIGRhdGFbInByb2oiXSAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgKCh2YWx1ZSAtIDEpICogMTAwKXxyb3VuZCgyKSB9fSU8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMzBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVs5MF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInByb2oiXVt2YWx1ZV1bMTIwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicHJvaiJdW3ZhbHVlXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwcm9qIl1bdmFsdWVdWy0xXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIHslIGVuZGZvciAlfQogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbV92YWx1ZSJdIH19JSAoYXZnIHBhc3QgNyBkYXlzKTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzMwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzYwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzkwXXxyb3VuZCgyKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e3sgZGF0YVsicGN1c3RvbSJdWzEyMF18cm91bmQoMikgfX08L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRhdGFbInBjdXN0b20iXVsyNDBdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBkYXRhWyJwY3VzdG9tIl1bLTFdfHJvdW5kKDIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8c2NyaXB0PgoKICAgICAgICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkKCcjaHlwZScpLkRhdGFUYWJsZSh7CiAgICAgICAgICAgICAgICAicGFnaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAic2VhcmNoaW5nIjogZmFsc2UsCiAgICAgICAgICAgICAgICAib3JkZXIiOiBbXSwKICAgICAgICAgICAgICAgICJpbmZvIjogZmFsc2UsCiAgICAgICAgICAgIH0pOwogICAgICAgIH0gKTsKCiAgICAgICAgQ2hhcnQucmVnaXN0ZXIoQ2hhcnREYXRhTGFiZWxzKTsKCiAgICAgICAgY29uc3QgZmxhdF9jb2xvdXJzID0gWwogICAgICAgICAgICAicmdiYSg0NiwgMjA0LCAxMTMsIDAuMykiLCAicmdiYSg1MiwgMTUyLCAyMTksIDAuMykiLCAicmdiYSgxNTUsIDg5LCAxODIsIDAuMykiLCAicmdiYSg1MiwgNzMsIDk0LCAwLjMpIiwgInJnYmEoMjQxLCAxOTYsIDE1LCAwLjMpIiwgCiAgICAgICAgICAgICJyZ2JhKDIzMCwgMTI2LCAzNCwgMC4zKSIsICJyZ2JhKDIzMSwgNzYsIDYwLCAwLjMpIiwgInJnYmEoMTI3LCAxNDAsIDE0MSwgMC4zKSIsICJyZ2JhKDQ0LCA2MiwgODAsIDAuMykiLCAicmdiYSgyNiwgMTg4LCAxNTYsIDAuMykiLAogICAgICAgICAgICAKICAgICAgICBdCiAgICAgICAgCiAgICAgICAgY29uc3QgZGF0YSA9IHsKICAgICAgICAgICAgbGFiZWxzOiB7eyBkYXRhWyJkYXRlcyJdIHwgc2FmZSB9fSwKICAgICAgICAgICAgZGF0YXNldHM6IFsKICAgICAgICAgICAgICAgIHslIGZvciB2YWx1ZSBpbiBkYXRhWyJwcm9qIl0gJX0KICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3t7ICgodmFsdWUgLSAxKSAqIDEwMCl8cm91bmQoMikgfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwcm9qIl1bdmFsdWVdIH19LAogICAgICAgICAgICAgICAgICAgIGZpbGw6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBmbGF0X2NvbG91cnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKmZsYXRfY29sb3Vycy5sZW5ndGgpXSwKICAgICAgICAgICAgICAgICAgICB0ZW5zaW9uOiAwLjEsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgeyUgZW5kZm9yICV9CiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICd7eyBkYXRhWyJwY3VzdG9tX3ZhbHVlIl0gfX0lJywKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7eyBkYXRhWyJwY3VzdG9tIl0gfX0sCiAgICAgICAgICAgICAgICAgICAgZmlsbDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDc1LCAxOTIsIDE5MiwgMC4zKScsCiAgICAgICAgICAgICAgICAgICAgdGVuc2lvbjogMC4xLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgXQogICAgICAgIH07CiAgICAgICAgY29uc3QgY29uZmlnMiA9IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgICAgICAgICAgbGF5b3V0OiB7CiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogewogICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDIwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHBsdWdpbnM6ewogICAgICAgICAgICAgICAgICAgIGRhdGFsYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2UKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNjYWxlczogewogICAgICAgICAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmVhcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvU2tpcDogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydCgKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpbmVDaGFydCcpLAogICAgICAgICAgICBjb25maWcyCiAgICAgICAgKTsKICAgIDwvc2NyaXB0Pgp7JSBlbmRibG9jayAlfQo=",
        "summary": "135L | projection.html | .html | 5.0 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\chartjs-chart-financial.js",
        "type": ".js",
        "size_kb": 14.6,
        "content": "",
        "summary": "522L | chartjs-chart-financial.js | .js | 14.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\js\\hammer.min.js",
        "type": ".js",
        "size_kb": 20.3,
        "content": "",
        "summary": "7L | hammer.min.js | .js | 20.3 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\dashboard.css",
        "type": ".css",
        "size_kb": 1.6,
        "content": "Ym9keSB7CiAgZm9udC1zaXplOiAuODc1cmVtOwp9CgouZmVhdGhlciB7CiAgd2lkdGg6IDE2cHg7CiAgaGVpZ2h0OiAxNnB4OwogIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTsKfQoKLyoKICogU2lkZWJhcgogKi8KCi5zaWRlYmFyIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIC8qIHJ0bDpyYXc6CiAgcmlnaHQ6IDA7CiAgKi8KICBib3R0b206IDA7CiAgLyogcnRsOnJlbW92ZSAqLwogIGxlZnQ6IDA7CiAgei1pbmRleDogMTAwOyAvKiBCZWhpbmQgdGhlIG5hdmJhciAqLwogIHBhZGRpbmc6IDQ4cHggMCAwOyAvKiBIZWlnaHQgb2YgbmF2YmFyICovCiAgYm94LXNoYWRvdzogaW5zZXQgLTFweCAwIDAgcmdiYSgwLCAwLCAwLCAuMSk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkgewogIC5zaWRlYmFyIHsKICAgIHRvcDogNXJlbTsKICB9Cn0KCi5zaWRlYmFyLXN0aWNreSB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogMDsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0OHB4KTsKICBwYWRkaW5nLXRvcDogLjVyZW07CiAgb3ZlcmZsb3cteDogaGlkZGVuOwogIG92ZXJmbG93LXk6IGF1dG87IC8qIFNjcm9sbGFibGUgY29udGVudHMgaWYgdmlld3BvcnQgaXMgc2hvcnRlciB0aGFuIGNvbnRlbnQuICovCn0KCi5zaWRlYmFyIC5uYXYtbGluayB7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBjb2xvcjogIzMzMzsKfQoKLnNpZGViYXIgLm5hdi1saW5rIC5mZWF0aGVyIHsKICBtYXJnaW4tcmlnaHQ6IDRweDsKICBjb2xvcjogIzcyNzI3MjsKfQoKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSB7CiAgY29sb3I6ICMyNDcwZGM7Cn0KCi5zaWRlYmFyIC5uYXYtbGluazpob3ZlciAuZmVhdGhlciwKLnNpZGViYXIgLm5hdi1saW5rLmFjdGl2ZSAuZmVhdGhlciB7CiAgY29sb3I6IGluaGVyaXQ7Cn0KCi5zaWRlYmFyLWhlYWRpbmcgewogIGZvbnQtc2l6ZTogLjc1cmVtOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi8qCiAqIE5hdmJhcgogKi8KCi5uYXZiYXItYnJhbmQgewogIHBhZGRpbmctdG9wOiAuNzVyZW07CiAgcGFkZGluZy1ib3R0b206IC43NXJlbTsKICBmb250LXNpemU6IDFyZW07CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAuMjUpOwogIGJveC1zaGFkb3c6IGluc2V0IC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgLjI1KTsKfQoKLm5hdmJhciAubmF2YmFyLXRvZ2dsZXIgewogIHRvcDogLjI1cmVtOwogIHJpZ2h0OiAxcmVtOwp9CgoubmF2YmFyIC5mb3JtLWNvbnRyb2wgewogIHBhZGRpbmc6IC43NXJlbSAxcmVtOwogIGJvcmRlci13aWR0aDogMDsKICBib3JkZXItcmFkaXVzOiAwOwp9CgouZm9ybS1jb250cm9sLWRhcmsgewogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjEpOwogIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuMSk7Cn0KCi5mb3JtLWNvbnRyb2wtZGFyazpmb2N1cyB7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDsKICBib3gtc2hhZG93OiAwIDAgMCAzcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAuMjUpOwp9Cg==",
        "summary": "100L | dashboard.css | .css | 1.6 KB"
      },
      {
        "path": "backend\\src\\futuresboard\\static\\styles\\sidebars.css",
        "type": ".css",
        "size_kb": 1.9,
        "content": "Ym9keSB7CiAgbWluLWhlaWdodDogMTAwdmg7CiAgbWluLWhlaWdodDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKfQoKaHRtbCB7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwp9CgptYWluIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogbm93cmFwOwogIGhlaWdodDogMTAwdmg7CiAgaGVpZ2h0OiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOwogIG1heC1oZWlnaHQ6IDEwMHZoOwogIG92ZXJmbG93LXg6IGF1dG87CiAgb3ZlcmZsb3cteTogaGlkZGVuOwp9CgouYi1leGFtcGxlLWRpdmlkZXIgewogIGZsZXgtc2hyaW5rOiAwOwogIHdpZHRoOiAxLjVyZW07CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4xKTsKICBib3JkZXI6IHNvbGlkIHJnYmEoMCwgMCwgMCwgLjE1KTsKICBib3JkZXItd2lkdGg6IDFweCAwOwogIGJveC1zaGFkb3c6IGluc2V0IDAgLjVlbSAxLjVlbSByZ2JhKDAsIDAsIDAsIC4xKSwgaW5zZXQgMCAuMTI1ZW0gLjVlbSByZ2JhKDAsIDAsIDAsIC4xNSk7Cn0KCi5iaSB7CiAgdmVydGljYWwtYWxpZ246IC0uMTI1ZW07CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgZmlsbDogY3VycmVudENvbG9yOwp9CgouZHJvcGRvd24tdG9nZ2xlIHsgb3V0bGluZTogMDsgfQoKLm5hdi1mbHVzaCAubmF2LWxpbmsgewogIGJvcmRlci1yYWRpdXM6IDA7Cn0KCi5idG4tdG9nZ2xlIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IC4yNXJlbSAuNXJlbTsKICBmb250LXdlaWdodDogNjAwOwogIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC42NSk7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgYm9yZGVyOiAwOwp9Ci5idG4tdG9nZ2xlOmhvdmVyLAouYnRuLXRvZ2dsZTpmb2N1cyB7CiAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjg1KTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDJmNGVhOwp9CgouYnRuLXRvZ2dsZTo6YmVmb3JlIHsKICB3aWR0aDogMS4yNWVtOwogIGxpbmUtaGVpZ2h0OiAwOwogIGNvbnRlbnQ6IHVybCgiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScxNicgaGVpZ2h0PScxNicgdmlld0JveD0nMCAwIDE2IDE2JyUzZSUzY3BhdGggZmlsbD0nbm9uZScgc3Ryb2tlPSdyZ2JhJTI4MCwwLDAsLjUlMjknIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNSAxNGw2LTYtNi02Jy8lM2UlM2Mvc3ZnJTNlIik7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIC4zNXMgZWFzZTsKICB0cmFuc2Zvcm0tb3JpZ2luOiAuNWVtIDUwJTsKfQoKLmJ0bi10b2dnbGVbYXJpYS1leHBhbmRlZD0idHJ1ZSJdIHsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuODUpOwp9Ci5idG4tdG9nZ2xlW2FyaWEtZXhwYW5kZWQ9InRydWUiXTo6YmVmb3JlIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7Cn0KCi5idG4tdG9nZ2xlLW5hdiBhIHsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBwYWRkaW5nOiAuMTg3NXJlbSAuNXJlbTsKICBtYXJnaW4tdG9wOiAuMTI1cmVtOwogIG1hcmdpbi1sZWZ0OiAxLjI1cmVtOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouYnRuLXRvZ2dsZS1uYXYgYTpob3ZlciwKLmJ0bi10b2dnbGUtbmF2IGE6Zm9jdXMgewogIGJhY2tncm91bmQtY29sb3I6ICNkMmY0ZWE7Cn0KCi5zY3JvbGxhcmVhIHsKICBvdmVyZmxvdy15OiBhdXRvOwp9CgouZnctc2VtaWJvbGQgeyBmb250LXdlaWdodDogNjAwOyB9Ci5saC10aWdodCB7IGxpbmUtaGVpZ2h0OiAxLjI1OyB9Cg==",
        "summary": "89L | sidebars.css | .css | 1.9 KB"
      },
      {
        "path": "frontend\\src\\App.css",
        "type": ".css",
        "size_kb": 0.6,
        "content": "I3Jvb3QgewogIG1heC13aWR0aDogMTI4MHB4OwogIG1hcmdpbjogMCBhdXRvOwogIHBhZGRpbmc6IDJyZW07CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoubG9nbyB7CiAgaGVpZ2h0OiA2ZW07CiAgcGFkZGluZzogMS41ZW07CiAgd2lsbC1jaGFuZ2U6IGZpbHRlcjsKICB0cmFuc2l0aW9uOiBmaWx0ZXIgMzAwbXM7Cn0KLmxvZ286aG92ZXIgewogIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDJlbSAjNjQ2Y2ZmYWEpOwp9Ci5sb2dvLnJlYWN0OmhvdmVyIHsKICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAyZW0gIzYxZGFmYmFhKTsKfQoKQGtleWZyYW1lcyBsb2dvLXNwaW4gewogIGZyb20gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7CiAgfQogIHRvIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7CiAgfQp9CgpAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IG5vLXByZWZlcmVuY2UpIHsKICBhOm50aC1vZi10eXBlKDIpIC5sb2dvIHsKICAgIGFuaW1hdGlvbjogbG9nby1zcGluIGluZmluaXRlIDIwcyBsaW5lYXI7CiAgfQp9CgouY2FyZCB7CiAgcGFkZGluZzogMmVtOwp9CgoucmVhZC10aGUtZG9jcyB7CiAgY29sb3I6ICM4ODg7Cn0K",
        "summary": "42L | App.css | .css | 0.6 KB"
      },
      {
        "path": "frontend\\src\\App.jsx",
        "type": ".jsx",
        "size_kb": 0.9,
        "content": "aW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCcKaW1wb3J0IHJlYWN0TG9nbyBmcm9tICcuL2Fzc2V0cy9yZWFjdC5zdmcnCmltcG9ydCB2aXRlTG9nbyBmcm9tICcvdml0ZS5zdmcnCmltcG9ydCAnLi9BcHAuY3NzJwoKZnVuY3Rpb24gQXBwKCkgewogIGNvbnN0IFtjb3VudCwgc2V0Q291bnRdID0gdXNlU3RhdGUoMCkKCiAgcmV0dXJuICgKICAgIDw+CiAgICAgIDxkaXY+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly92aXRlLmRldiIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgPGltZyBzcmM9e3ZpdGVMb2dvfSBjbGFzc05hbWU9ImxvZ28iIGFsdD0iVml0ZSBsb2dvIiAvPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJodHRwczovL3JlYWN0LmRldiIgdGFyZ2V0PSJfYmxhbmsiPgogICAgICAgICAgPGltZyBzcmM9e3JlYWN0TG9nb30gY2xhc3NOYW1lPSJsb2dvIHJlYWN0IiBhbHQ9IlJlYWN0IGxvZ28iIC8+CiAgICAgICAgPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGgxPlZpdGUgKyBSZWFjdDwvaDE+CiAgICAgIDxkaXYgY2xhc3NOYW1lPSJjYXJkIj4KICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldENvdW50KChjb3VudCkgPT4gY291bnQgKyAxKX0+CiAgICAgICAgICBjb3VudCBpcyB7Y291bnR9CiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPHA+CiAgICAgICAgICBFZGl0IDxjb2RlPnNyYy9BcHAuanN4PC9jb2RlPiBhbmQgc2F2ZSB0byB0ZXN0IEhNUgogICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgIDxwIGNsYXNzTmFtZT0icmVhZC10aGUtZG9jcyI+CiAgICAgICAgQ2xpY2sgb24gdGhlIFZpdGUgYW5kIFJlYWN0IGxvZ29zIHRvIGxlYXJuIG1vcmUKICAgICAgPC9wPgogICAgPC8+CiAgKQp9CgpleHBvcnQgZGVmYXVsdCBBcHAK",
        "summary": "35L | App.jsx | .jsx | 0.9 KB"
      },
      {
        "path": "frontend\\src\\index.css",
        "type": ".css",
        "size_kb": 0.8,
        "content": "QHRhaWx3aW5kIGJhc2U7CkB0YWlsd2luZCBjb21wb25lbnRzOwpAdGFpbHdpbmQgdXRpbGl0aWVzOwoKLyogQmFzaWMgZGFyayB0aGVtZSBhbmQgdHdlYWtzICovCjpyb290IHsKICAtLWJnOiAjMDcxMTI2OwogIC0tY2FyZDogIzBiMTUzMDsKICAtLW11dGVkOiAjOTRhM2I4OwogIC0tYnVsbDogIzEwYjk4MTsKICAtLWJlYXI6ICNlZjQ0NDQ7CiAgLS1hY2NlbnQ6ICM2MGE1ZmE7Cn0KCmh0bWwsIGJvZHksICNyb290IHsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZDogdmFyKC0tYmcpOwogIGNvbG9yOiAjZTZlZWY4Owp9Cgpib2R5IHsKICBmb250LWZhbWlseTogSW50ZXIsIHVpLXNhbnMtc2VyaWYsIHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgIlNlZ29lIFVJIiwgUm9ib3RvLCAiSGVsdmV0aWNhIE5ldWUiLCBBcmlhbDsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwp9CgouYXBwLXNoZWxsIHsKICBtaW4taGVpZ2h0OiAxMDB2aDsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjYwcHggMWZyOwp9Cgouc2lkZWJhciB7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgxMSwxNywzMiwwLjkpLCByZ2JhKDcsMTcsMzgsMC45NSkpOwogIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMjU1LDI1NSwyNTUsMC4wMyk7Cn0KCi5oZWFkZXIgewogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMDMpOwp9CgouY2FyZCB7CiAgYmFja2dyb3VuZDogdmFyKC0tY2FyZCk7Cn0K",
        "summary": "45L | index.css | .css | 0.8 KB"
      },
      {
        "path": "frontend\\src\\main.jsx",
        "type": ".jsx",
        "size_kb": 0.2,
        "content": "aW1wb3J0IFJlYWN0IGZyb20gInJlYWN0IjsKaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gInJlYWN0LWRvbS9jbGllbnQiOwppbXBvcnQgQXBwIGZyb20gIi4vQXBwIjsKaW1wb3J0ICIuL2luZGV4LmNzcyI7CgpjcmVhdGVSb290KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyb290IikpLnJlbmRlcigKICA8UmVhY3QuU3RyaWN0TW9kZT4KICAgIDxBcHAgLz4KICA8L1JlYWN0LlN0cmljdE1vZGU+Cik7Cg==",
        "summary": "10L | main.jsx | .jsx | 0.2 KB"
      },
      {
        "path": "backend\\tests\\test_metrics.py",
        "type": ".py",
        "size_kb": 0.4,
        "content": "aW1wb3J0IGFzeW5jaW8KZnJvbSBiYWNrZW5kLnNyYy5mdXR1cmVzYm9hcmQubWV0cmljcyBpbXBvcnQgZ2V0X2FsbF9tZXRyaWNzICAjIEFic29sdXRlIGZyb20gYmFja2VuZC90ZXN0cwoKZGVmIHRlc3Rfd2VpZ2h0ZWRfb2koKToKICAgIG1ldHJpY3MgPSBhc3luY2lvLnJ1bihnZXRfYWxsX21ldHJpY3MobGltaXQ9NSkpCiAgICBhc3NlcnQgbGVuKG1ldHJpY3MpID49IDQgICMgVG9wLXZvbCBqaXR0ZXIgOyA+PTQgc3RhYmxlIFAzCiAgICBhc3NlcnQgJ3dlaWdodGVkX29pX3VzZCcgaW4gbWV0cmljc1swXQogICAgYXNzZXJ0IG1ldHJpY3NbMF1bJ3dlaWdodGVkX29pX3VzZCddID4gMAoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHRlc3Rfd2VpZ2h0ZWRfb2koKQ==",
        "summary": "11L | test_metrics.py | .py | 0.4 KB"
      },
      {
        "path": "docs\\api_guide.md",
        "type": ".md",
        "size_kb": 1.2,
        "content": "IyBBUEkgR3VpZGUgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpCYXNlOiBodHRwOi8vMTI3LjAuMC4xOjUwMDAgfCBBdXRoOiBOb25lIChSZWFkLU9ubHkpIHwgRm9ybWF0OiBKU09OIChDb250ZW50LVJhbmdlIHBhZykuCgojIyBFbmRwb2ludHMKCnwgUm91dGUgfCBNZXRob2QgfCBQYXJhbXMgfCBEZXNjIHwgRXhhbXBsZSBDdXJsIHwgUmVzcG9uc2UgVGVhc2UgfAp8LS0tLS0tLXwtLS0tLS0tLXwtLS0tLS0tLXwtLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tLXwKfCAvYXBpL21ldHJpY3MgfCBHRVQgfCA/dGY9MTVtJmxpbWl0PTIwIHwgUGFnaW5hdGVkIHF1YW50cyAoT0kvTFPOlC9aIGV0Yy4pIHwgYGN1cmwgImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0iIHwganEgJy5bXSB8IHtzeW0sIHpfc2NvcmV9J2AgfCAyMDAge2RhdGE6IFt7c3ltOiJFVEgiLCB6OjEuMjAsIGNvbmZsdWVuY2U6MC4zM31dLCByYW5nZTowLTE5LzIwfSB8CnwgL2hlYWx0aCB8IEdFVCB8IE5vbmUgfCBVcHRpbWUvcmF0ZS9lcnJvcnMgfCBgY3VybCBodHRwOi8vMTI3LjAuMC4xOjUwMDAvaGVhbHRoYCB8IDIwMCB7InVwdGltZSI6OTkuOSwgInJlcV9yYXRlIjozNTAsICJlcnJvcnMiOjB9IHwKfCAvYXBpL3JlcGxheSAoUDQpIHwgR0VUIHwgP3RmPTFoJnN0YXJ0X3RzPS4uLiB8IEJpc2VjdCB0cyBqb2lucyBzaW0gfCBgY3VybCAiL2FwaS9yZXBsYXk/dGY9MWgiIHwganEgJy5ldmVudHNbXSdgIHwgVGVhc2U6IHtldmVudHM6IFt7dHMsIHpfc3Bpa2U6dHJ1ZX1dfSB8CnwgV1MgL3NvY2tldC5pbyB8IFdTIHwgRW1pdDogbWV0cmljc191cGRhdGUgfCBCYXRjaCB0ZiBxdWFudHMgKyBhbGVydHMgfCBGcm9udGVuZDogc29ja2V0LmlvLWNsaWVudCBjb25uZWN0IHwgT246ICdhbGVydF90b2FzdCcge3N5bToiQlRDIiwgdHlwZToiWl9zcGlrZSIsIHZhbDoyLjZ9IHwKCiMjIFZhbGlkYXRpb24gKGNvZGVfZXhlY3V0aW9uIFRlYXNlKQpgYGBweXRob24KaW1wb3J0IHJlcXVlc3RzCnIgPSByZXF1ZXN0cy5nZXQoJ2h0dHA6Ly8xMjcuMC4wLjE6NTAwMC9hcGkvbWV0cmljcz90Zj0xNW0nKQpkYXRhID0gci5qc29uKCkKcHJpbnQobGVuKGRhdGFbJ2RhdGEnXSksICdwYWlyczsgWiBmaW5pdGU6JywgYWxsKGFicyhkWyd6X3Njb3JlJ10pIDwgMTAgZm9yIGQgaW4gZGF0YVsnZGF0YSddKSkKIyBPdXRwdXQ6IDIwIHBhaXJzOyBaIGZpbml0ZTogVHJ1ZQ==",
        "summary": "20L | api_guide.md | .md | 1.2 KB"
      },
      {
        "path": "docs\\codegen.py",
        "type": ".py",
        "size_kb": 3.2,
        "content": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoiIiIKRnVsbCBDb250aW51aXR5IEV4cG9ydCAodjAuNCkKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClNjYW5zIHByb2plY3QgZGlyZWN0b3JpZXMgYW5kIGV4cG9ydHMgYWxsIHNvdXJjZSBmaWxlcyAoUHl0aG9uLCBKUywgUmVhY3QsIENTUywgSFRNTCwgY29uZmlncywgZG9jcykKaW50byBhIHNpbmdsZSBKU09OIGZpbGUgd2l0aCBiYXNlNjQtZW5jb2RlZCBjb250ZW50LgoKT3V0cHV0OiBkb2NzL3Byb2plY3RfZGF0YS5qc29uCiIiIgoKaW1wb3J0IGpzb24KaW1wb3J0IGJhc2U2NAppbXBvcnQgb3MKZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgojID09PSBDT05GSUcgPT09ClBST0pFQ1RfUk9PVCA9IFBhdGgob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguZGlybmFtZShfX2ZpbGVfXykpKS5yZXNvbHZlKCkKSlNPTl9QQVRIID0gUFJPSkVDVF9ST09UIC8gJ2RvY3MnIC8gJ3Byb2plY3RfZGF0YS5qc29uJwoKIyBEaXJlY3RvcmllcyB0byBpbmNsdWRlCkNPREVfRElSUyA9IFsKICAgICdiYWNrZW5kL3NyYy9mdXR1cmVzYm9hcmQnLAogICAgJ2Zyb250ZW5kL3NyYycsCiAgICAnYmFja2VuZC90ZXN0cycsCiAgICAnZnJvbnRlbmQvcHVibGljJywKICAgICdkb2NzJwpdCgojIEZpbGUgdHlwZXMgdG8gaW5jbHVkZQpBTExPV0VEX0VYVFMgPSBbCiAgICAnLnB5JywgJy5qcycsICcuanN4JywgJy50cycsICcudHN4JywgJy5qc29uJywgJy5tZCcsCiAgICAnLmNzcycsICcuc2NzcycsICcuaHRtbCcsICcueW1sJywgJy55YW1sJywgJy50b21sJywgJy50eHQnLCAnLmluaScKXQoKIyBNYXggZmlsZSBzaXplIChpbiBieXRlcykg4oCUIGluY3JlYXNlIGZvciBmdWxsIHByb2plY3QKTUFYX0ZJTEVfU0laRSA9IDEwMDBfMDAwICAjIH4yNTAgS0IKCiMgPT09IExPR0lDID09PQpkZWYgZ2VuX2NvZGVfc2VjdGlvbigpOgogICAgZmlsZXMgPSBbXQogICAgZm9yIGRpcl9yZWwgaW4gQ09ERV9ESVJTOgogICAgICAgIGRpcl9wYXRoID0gUFJPSkVDVF9ST09UIC8gZGlyX3JlbAogICAgICAgIGlmIG5vdCBkaXJfcGF0aC5leGlzdHMoKToKICAgICAgICAgICAgcHJpbnQoZiLimqDvuI8gIE1pc3NpbmcgZGlyZWN0b3J5OiB7ZGlyX3BhdGh9IikKICAgICAgICAgICAgY29udGludWUKICAgICAgICBmb3IgZmlsZV9wYXRoIGluIGRpcl9wYXRoLnJnbG9iKCcqJyk6CiAgICAgICAgICAgIGlmIG5vdCBmaWxlX3BhdGguaXNfZmlsZSgpOgogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgc3VmZml4ID0gZmlsZV9wYXRoLnN1ZmZpeC5sb3dlcigpCiAgICAgICAgICAgIGlmIHN1ZmZpeCBpbiBBTExPV0VEX0VYVFMgYW5kIGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSA8IE1BWF9GSUxFX1NJWkU6CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKGZpbGVfcGF0aCwgJ3InLCBlbmNvZGluZz0ndXRmLTgnLCBlcnJvcnM9J2lnbm9yZScpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBmLnJlYWQoKQogICAgICAgICAgICAgICAgICAgIGI2NCA9IGJhc2U2NC5iNjRlbmNvZGUoY29udGVudC5lbmNvZGUoKSkuZGVjb2RlKCkKICAgICAgICAgICAgICAgICAgICBzdW1tYXJ5ID0gZiJ7bGVuKGNvbnRlbnQuc3BsaXRsaW5lcygpKX1MIHwge2ZpbGVfcGF0aC5uYW1lfSB8IHtzdWZmaXh9IHwge3JvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpfSBLQiIKICAgICAgICAgICAgICAgICAgICBmaWxlcy5hcHBlbmQoewogICAgICAgICAgICAgICAgICAgICAgICAicGF0aCI6IHN0cihmaWxlX3BhdGgucmVsYXRpdmVfdG8oUFJPSkVDVF9ST09UKSksCiAgICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogc3VmZml4LAogICAgICAgICAgICAgICAgICAgICAgICAic2l6ZV9rYiI6IHJvdW5kKGZpbGVfcGF0aC5zdGF0KCkuc3Rfc2l6ZSAvIDEwMjQsIDEpLAogICAgICAgICAgICAgICAgICAgICAgICAiY29udGVudCI6IGI2NCwKICAgICAgICAgICAgICAgICAgICAgICAgInN1bW1hcnkiOiBzdW1tYXJ5CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKchSB7ZmlsZV9wYXRoLm5hbWU6NDB9IHwge3N1bW1hcnl9IikKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBwcmludChmIuKdjCBSZWFkIGZhaWxlZCB7ZmlsZV9wYXRofToge2V9IikKICAgIHJldHVybiB7ImZpbGVzIjogZmlsZXN9CgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgIyBMb2FkIGV4aXN0aW5nIGRhdGEgaWYgcHJlc2VudAogICAgdHJ5OgogICAgICAgIHdpdGggb3BlbihKU09OX1BBVEgsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICAgICAgZGF0YSA9IGpzb24ubG9hZChmKQogICAgICAgIHByaW50KCJNZXJnaW5nIGludG8gZXhpc3RpbmcgcHJvamVjdF9kYXRhLmpzb24g4oCmIikKICAgIGV4Y2VwdCAoRmlsZU5vdEZvdW5kRXJyb3IsIGpzb24uSlNPTkRlY29kZUVycm9yKToKICAgICAgICBkYXRhID0geyJwcm9qZWN0IjogeyJuYW1lIjogIkNyeXB0byBGdXR1cmVzIERhc2hib2FyZCIsICJ2ZXJzaW9uIjogInYwLjQifX0KICAgICAgICBwcmludCgiSW5pdGlhbGl6aW5nIG5ldyBKU09OIOKApiIpCgogICAgIyBHZW5lcmF0ZSBjb2RlIHNlY3Rpb24KICAgIGNvZGVfZGF0YSA9IGdlbl9jb2RlX3NlY3Rpb24oKQogICAgZGF0YVsiY29kZSJdID0gY29kZV9kYXRhCiAgICBkYXRhWyJtZXRhZGF0YSJdID0gewogICAgICAgICJ1cGRhdGVkIjogZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVZLSVtLSVkICVIOiVNOiVTIiksCiAgICAgICAgInRvdGFsX2ZpbGVzIjogbGVuKGNvZGVfZGF0YVsiZmlsZXMiXSksCiAgICAgICAgIm1heF9maWxlX3NpemVfa2IiOiByb3VuZChNQVhfRklMRV9TSVpFIC8gMTAyNCwgMSkKICAgIH0KCiAgICAjIFdyaXRlIEpTT04KICAgIHdpdGggb3BlbihKU09OX1BBVEgsICd3JywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZjoKICAgICAgICBqc29uLmR1bXAoZGF0YSwgZiwgaW5kZW50PTIsIGVuc3VyZV9hc2NpaT1GYWxzZSkKCiAgICBwcmludChmIlxu8J+foiBFeHBvcnQgQ29tcGxldGU6IHtsZW4oY29kZV9kYXRhWydmaWxlcyddKX0gZmlsZXMgc2F2ZWQg4oaSIHtKU09OX1BBVEh9IikK",
        "summary": "92L | codegen.py | .py | 3.2 KB"
      },
      {
        "path": "docs\\continuity_log.json",
        "type": ".json",
        "size_kb": 0.9,
        "content": "WwogIHsKICAgICJ0aW1lc3RhbXAiOiAiMjAyNS0xMC0yMVQxMjoxMjowNiIsCiAgICAicGhhc2UiOiAiUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMiLAogICAgImJhY2tlbmQiOiAiaGVhbHRoeSIsCiAgICAidXB0aW1lUGN0IjogMTAwLjAsCiAgICAidG90YWxfcnVudGltZSI6IDAuMCwKICAgICJkb3dudGltZSI6IDAuMCwKICAgICJzdGF0dXMiOiAiYWN0aXZlIgogIH0sCiAgewogICAgInRpbWVzdGFtcCI6ICIyMDI1LTEwLTIxVDEyOjE3OjA2IiwKICAgICJwaGFzZSI6ICJQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyIsCiAgICAiYmFja2VuZCI6ICJoZWFsdGh5IiwKICAgICJ1cHRpbWVQY3QiOiAxMDAuMCwKICAgICJ0b3RhbF9ydW50aW1lIjogMzAwLjAsCiAgICAiZG93bnRpbWUiOiAwLjAsCiAgICAic3RhdHVzIjogImFjdGl2ZSIKICB9LAogIHsKICAgICJ0aW1lc3RhbXAiOiAiMjAyNS0xMC0yMVQxMjoxODowNyIsCiAgICAicGhhc2UiOiAiUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMiLAogICAgImJhY2tlbmQiOiAiaGVhbHRoeSIsCiAgICAidXB0aW1lUGN0IjogMTAwLjAsCiAgICAidG90YWxfcnVudGltZSI6IDMwMC4wLAogICAgImRvd250aW1lIjogMC4wLAogICAgInN0YXR1cyI6ICJhY3RpdmUiCiAgfSwKICB7CiAgICAidGltZXN0YW1wIjogIjIwMjUtMTAtMjFUMTI6MjA6MDAiLAogICAgInBoYXNlIjogIlAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIiwKICAgICJiYWNrZW5kIjogImhlYWx0aHkiLAogICAgInVwdGltZVBjdCI6IDEwMC4wLAogICAgInRvdGFsX3J1bnRpbWUiOiAzMDAuMCwKICAgICJkb3dudGltZSI6IDAuMCwKICAgICJzdGF0dXMiOiAiYWN0aXZlIgogIH0KXQ==",
        "summary": "38L | continuity_log.json | .json | 0.9 KB"
      },
      {
        "path": "docs\\continuity_state.json",
        "type": ".json",
        "size_kb": 0.2,
        "content": "ewogICJ0aW1lc3RhbXAiOiAiMjAyNS0xMC0yMVQxMjoyNToxMyIsCiAgInBoYXNlIjogIlAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIiwKICAiYmFja2VuZCI6ICJoZWFsdGh5IiwKICAidXB0aW1lUGN0IjogMTAwLjAsCiAgInRvdGFsX3J1bnRpbWUiOiAzMDAuMCwKICAiZG93bnRpbWUiOiAwLjAsCiAgInN0YXR1cyI6ICJhY3RpdmUiCn0=",
        "summary": "9L | continuity_state.json | .json | 0.2 KB"
      },
      {
        "path": "docs\\continuity_state.md",
        "type": ".md",
        "size_kb": 1.3,
        "content": "77u/IyBDb250aW51aXR5IFN0YXRlIC0gQ3J5cHRvIEZ1dHVyZXMgRGFzaGJvYXJkCkxhc3QgU3luYzogMjAyNS0xMC0yMSAxNzoxNjoyMgpQaGFzZTogUDMuNiAtIFVURjggTG9nZ2luZyArIFF1YW50U3VtbWFyeSBTdGFibGUKCiMjIENvcmUgRmlsZSBWZXJzaW9ucwp8IG1ldHJpY3MucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgMTcyRTM5MSB8CnwgYmx1ZXByaW50LnB5IHwgMjAyNS0xMC0yMSAxNzoxNjoyMiB8IDJFMzBGMDEgfAp8IHV0aWxzLnB5IHwgMjAyNS0xMC0yMSAxNzoxNjoyMiB8IDUzQzdCQUUgfAp8IGJpbmFuY2Vfd3NfY2xpZW50LnB5IHwgMjAyNS0xMC0yMSAxNzoxNjoyMiB8IDc3OTQ3RDkgfAp8IHdzZ2kucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgQUZFQTdGNiB8CnwgQXBwLmpzeCB8IDIwMjUtMTAtMjEgMTc6MTY6MjIgfCBGM0Q4NTI0IHwKfCBhcHAucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgQzE5QTE2NyB8CnwgZGIucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgODMxQTBDOCB8CnwgY2xpLnB5IHwgMjAyNS0xMC0yMSAxNzoxNjoyMiB8IDA0MEQ1MjQgfAp8IHNjcmFwZXIucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgRUJERDYzRiB8CnwgY29uZmlnLnB5IHwgMjAyNS0xMC0yMSAxNzoxNjoyMiB8IDk3NEZDRUEgfAp8IHZlcnNpb24ucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgQTI4NTQ4QiB8CnwgX19pbml0X18ucHkgfCAyMDI1LTEwLTIxIDE3OjE2OjIyIHwgRDI4MzVCRiB8CgojIyBCYWNrZW5kIEhlYWx0aApIZWFsdGggY2hlY2sgZmFpbGVkCgojIyBSZWNlbnQgU25hcHNob3RzCnwgVGltZXN0YW1wIHwgQmFja2VuZCB8IFBoYXNlIHwKfC0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tfC0tLS0tLS18CnwgMjAyNS0xMC0yMFQyMzoyNDoyOCB8IEdyZWVuIChoZWFsdGh5KSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIwVDIzOjI5OjI1IHwgR3JlZW4gKGhlYWx0aHkpIHwgUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMgfAp8IDIwMjUtMTAtMjBUMTc6NTk6MjcgfCBHcmVlbiAoaGVhbHRoeSkgfCBQMyAtIFdlaWdodGVkIE9JICsgVG9wIEwvUyArIEFsZXJ0cyB8CnwgMjAyNS0xMC0yMFQxODowMzowMiB8IEdyZWVuIChoZWFsdGh5KSB8IFAzIC0gV2VpZ2h0ZWQgT0kgKyBUb3AgTC9TICsgQWxlcnRzIHwKfCAyMDI1LTEwLTIwVDE4OjAzOjA1IHwgR3JlZW4gKGhlYWx0aHkpIHwgUDMgLSBXZWlnaHRlZCBPSSArIFRvcCBML1MgKyBBbGVydHMgfApVcHRpbWUgKGxhc3QgMTApOiAxMC8xMCAtPiAxMDAlCgo=",
        "summary": "32L | continuity_state.md | .md | 1.3 KB"
      },
      {
        "path": "docs\\gen_blueprint.py",
        "type": ".py",
        "size_kb": 3.4,
        "content": "IyBnZW5fYmx1ZXByaW50LnB5IHYxLjQgKE9jdCAyMCwgMjAyNSkg4oCUIENyb3NzLURyaXZlIEZpeCArIER1cGUgR3VhcmQKIyBSdW46IGNkIGRvY3MgOyBweXRob24gZ2VuX2JsdWVwcmludC5weQppbXBvcnQgc3FsaXRlMwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCBudW1weSBhcyBucAppbXBvcnQgcmUKaW1wb3J0IHRlbXBmaWxlCmltcG9ydCBvcwppbXBvcnQgc2h1dGlsCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQoKREJfUEFUSCA9IFBhdGgociJFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZFxmdXR1cmVzLmRiIikKTURfUEFUSCA9IFBhdGgoInF1YW50X2JsdWVwcmludC5tZCIpCgpkZWYgY2xlYW5fb2xkX2twaShjb250ZW50OiBzdHIpIC0+IHN0cjoKICAgICIiIlphcCBvbGQgJyMjIEF1dG8tS1BJJyBibG9ja3MgdG8gcHJldmVudCBkdXBlcy4iIiIKICAgIHBhdHRlcm4gPSByIiMjIEF1dG8tS1BJIFVwZGF0ZS4qPyg/PVxuIyMgfFxaKSIKICAgIHJldHVybiByZS5zdWIocGF0dGVybiwgIiIsIGNvbnRlbnQsIGZsYWdzPXJlLkRPVEFMTCkKCmRlZiBzYWZlX3dyaXRlKHBhdGg6IHN0ciwgZGF0YTogc3RyKToKICAgICIiIlRlbXAgaW4gc2FtZSBkaXIgKyBzaHV0aWwubW92ZSBmb3IgY3Jvc3MtZHJpdmUgc2FmZS4iIiIKICAgIGRpcl9wYXRoID0gb3MucGF0aC5kaXJuYW1lKHBhdGgpIG9yICIuIgogICAgd2l0aCB0ZW1wZmlsZS5OYW1lZFRlbXBvcmFyeUZpbGUobW9kZT0idyIsIGRlbGV0ZT1GYWxzZSwgZW5jb2Rpbmc9InV0Zi04Iiwgc3VmZml4PSIubWQiLCBkaXI9ZGlyX3BhdGgpIGFzIHRtcDoKICAgICAgICB0bXAud3JpdGUoZGF0YSkKICAgICAgICB0bXBfcGF0aCA9IHRtcC5uYW1lCiAgICB0cnk6CiAgICAgICAgc2h1dGlsLm1vdmUodG1wX3BhdGgsIHBhdGgpICAjIEhhbmRsZXMgY3Jvc3MtZGV2aWNlCiAgICBleGNlcHQgc2h1dGlsLkVycm9yOgogICAgICAgIG9zLnJlcGxhY2UodG1wX3BhdGgsIHBhdGgpICAjIEZhbGxiYWNrIHNhbWUtZGV2aWNlCgpkZWYgbWFpbigpOgogICAgcHJpbnQoZiJbaV0gREI6IHtEQl9QQVRIfSB8IE1EOiB7TURfUEFUSH0iKQogICAga3BpID0gIiIKCiAgICAjIENvbm4gKyBxdWVyeSAod2l0aCBndWFyZDsgY29sPXZvbF91c2QgbWF0Y2ggc2VlZCkKICAgIHRyeToKICAgICAgICB3aXRoIHNxbGl0ZTMuY29ubmVjdChEQl9QQVRIKSBhcyBjb246CiAgICAgICAgICAgIGN1ciA9IGNvbi5jdXJzb3IoKQogICAgICAgICAgICBjdXIuZXhlY3V0ZSgiU0VMRUNUIENPVU5UKCopIEZST00gbWV0cmljcyIpCiAgICAgICAgICAgIHRvdGFsX3Jvd3MgPSBjdXIuZmV0Y2hvbmUoKVswXQogICAgICAgICAgICBwcmludChmIlvinJNdIFJvd3MgVG90YWw6IHt0b3RhbF9yb3dzfSIpCgogICAgICAgICAgICBjdXIuZXhlY3V0ZSgiU0VMRUNUIENPVU5UKCopIEZST00gbWV0cmljcyBXSEVSRSBvaV9hYnNfdXNkID4gMCBBTkQgdm9sX3VzZCA+IDAiKQogICAgICAgICAgICB2YWxpZF9yb3dzID0gY3VyLmZldGNob25lKClbMF0KICAgICAgICAgICAgcHJpbnQoZiJb4pyTXSBWYWxpZCBPSS9Wb2w6IHt2YWxpZF9yb3dzfSIpCgogICAgICAgICAgICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1Qgb2lfYWJzX3VzZCwgdm9sX3VzZCBGUk9NIG1ldHJpY3MgT1JERVIgQlkgdGltZXN0YW1wIERFU0MgTElNSVQgMjAiLCBjb24pCiAgICAgICAgICAgIHByaW50KGYiW+Kck10gUXVlcnkgUm93czoge2xlbihkZil9IikKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBwcmludChmIlvinJddIENvbm4gRXJyb3I6IHtlfSIpCiAgICAgICAgZGYgPSBwZC5EYXRhRnJhbWUoKQoKICAgICMgS1BJIGdlbgogICAgaWYgZGYuZW1wdHk6CiAgICAgICAga3BpID0gIiMjIEF1dG8tS1BJIFVwZGF0ZSAoTm8gRGF0YSlcbnwgV2VpZ2h0ZWQgT0kgfCBDdXJyZW50IHxcbnwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXxcbnwgJDAuMDBCIHwgTm8gcm93cyB8XG4iCiAgICBlbGlmIGRmWyJ2b2xfdXNkIl0uZmlsbG5hKDApLnN1bSgpID09IDA6CiAgICAgICAga3BpID0gZiIjIyBBdXRvLUtQSSBVcGRhdGUgKFplcm8vTmFOIFZvbClcbnwgV2VpZ2h0ZWQgT0kgfCBDdXJyZW50IHxcbnwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXxcbnwgJDAuMDBCIHwgQXZnIHtsZW4oZGYpfSBwYWlycyB8XG4iCiAgICBlbHNlOgogICAgICAgIGRmX2NsZWFuID0gZGYuZHJvcG5hKHN1YnNldD1bIm9pX2Fic191c2QiLCAidm9sX3VzZCJdKQogICAgICAgIGlmIGRmX2NsZWFuLmVtcHR5OgogICAgICAgICAgICBrcGkgPSAiIyMgQXV0by1LUEkgVXBkYXRlIChBbGwgTmFOKVxufCBXZWlnaHRlZCBPSSB8IEN1cnJlbnQgfFxufC0tLS0tLS0tLS0tLS18LS0tLS0tLS0tfFxufCAkMC4wMEIgfCBObyB2YWxpZCByb3dzIHxcbiIKICAgICAgICBlbHNlOgogICAgICAgICAgICB3ZWlnaHRzID0gZGZfY2xlYW5bInZvbF91c2QiXSAvIGRmX2NsZWFuWyJ2b2xfdXNkIl0uc3VtKCkKICAgICAgICAgICAgd19vaSA9IG5wLmF2ZXJhZ2UoZGZfY2xlYW5bIm9pX2Fic191c2QiXSwgd2VpZ2h0cz13ZWlnaHRzKQogICAgICAgICAgICBrcGkgPSBmIiMjIEF1dG8tS1BJIFVwZGF0ZSAoV2VpZ2h0ZWQgT0kgVGVhc2Uge2RhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCclWS0lbS0lZCAlSDolTScpfSlcbnwgV2VpZ2h0ZWQgT0kgfCBDdXJyZW50IHxcbnwtLS0tLS0tLS0tLS0tfC0tLS0tLS0tLXxcbnwgJHt3X29pLzFlOTouMmZ9QiB8IEF2ZyB7bGVuKGRmX2NsZWFuKX0gcGFpcnMgfFxuIgoKICAgICMgQ2xlYW4gKyB3cml0ZSAobm8gZHVwZTsgc2FmZSBzd2FwKQogICAgdHJ5OgogICAgICAgIGlmIE1EX1BBVEguZXhpc3RzKCk6CiAgICAgICAgICAgIHdpdGggb3BlbihNRF9QQVRILCAiciIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgICAgICAgICBjb250ZW50ID0gY2xlYW5fb2xkX2twaShmLnJlYWQoKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBjb250ZW50ID0gIiMgUXVhbnQgQmx1ZXByaW50XG4iCiAgICAgICAgdXBkYXRlZCA9IGNvbnRlbnQgKyAiXG4iICsga3BpCiAgICAgICAgc2FmZV93cml0ZShNRF9QQVRILCB1cGRhdGVkKQogICAgICAgIHByaW50KGYiW+Kck10gTUQgVXBkYXRlZDoge3dfb2kvMWU5Oi4yZiBpZiAnd19vaScgaW4gbG9jYWxzKCkgZWxzZSAwOi4yZn1CIHwgU2luZ2xlIEtQSSIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJb4pyXXSBXcml0ZSBFcnJvcjoge2V9IikKCiAgICBwcmludChrcGkpICAjIEVjaG8KCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCk=",
        "summary": "84L | gen_blueprint.py | .py | 3.4 KB"
      },
      {
        "path": "docs\\gen_tracker.py",
        "type": ".py",
        "size_kb": 3.2,
        "content": "IyBSdW46IFBTOiBjZCBkb2NzIDsgcHl0aG9uIGdlbl90cmFja2VyLnB5IChBcHBlbmRzIEtQSSByb3cgdy8gZ2l0IGRpZmY7IHVzZXMgJzVtJyBkYXRhKSAgCmltcG9ydCBzcWxpdGUzICAKaW1wb3J0IHBhbmRhcyBhcyBwZCAgCmltcG9ydCBzdWJwcm9jZXNzICAjIE5ldzogR2l0IGRpZmYgdGVhc2UKaW1wb3J0IG9zCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCgpjb24gPSBzcWxpdGUzLmNvbm5lY3QocidFOlxUcmFkaW5nXGNyeXB0by1mdXR1cmVzLWRhc2hib2FyZFxiYWNrZW5kXHNyY1xmdXR1cmVzYm9hcmRcZnV0dXJlcy5kYicpCiMgQXV0by1maXggTlVMTCB0ZiAgCmNvbi5leGVjdXRlKCJVUERBVEUgbWV0cmljcyBTRVQgdGltZWZyYW1lID0gJzVtJyBXSEVSRSB0aW1lZnJhbWUgSVMgTlVMTCIpICAKY29uLmNvbW1pdCgpICAKdHJ5OiAgCiAgIyBUcnkgJzE1bScgZmlyc3QsIGZhbGxiYWNrIHRvICc1bScgb3IgdG90YWwgIAogICMgTDE1IEZpeDogQ2hhaW4gZmFsbGJhY2sgJzE1bScg4oaSICc1bScg4oaSIHRvdGFsIGlmIDAKICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196LCBDT1VOVCgqKSBhcyByb3dzIEZST00gbWV0cmljcyBXSEVSRSB0aW1lZnJhbWU9JzE1bSciLCBjb24pCiAgaWYgZGZbJ3Jvd3MnXVswXSA9PSAwOgogICAgICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1QgQVZHKHpfc2NvcmUpIGFzIGF2Z196LCBDT1VOVCgqKSBhcyByb3dzIEZST00gbWV0cmljcyBXSEVSRSB0aW1lZnJhbWU9JzVtJyIsIGNvbikKICAgICAgaWYgZGZbJ3Jvd3MnXVswXSA9PSAwOgogICAgICAgICAgZGYgPSBwZC5yZWFkX3NxbCgiU0VMRUNUIEFWRyh6X3Njb3JlKSBhcyBhdmdfeiwgQ09VTlQoKikgYXMgcm93cyBGUk9NIG1ldHJpY3MiLCBjb24pICAjIFRvdGFsIGZhbGxiYWNrCiAgcHJpbnQoZiJRdWVyeSBmYWxsYmFjazogdGY9JzE1bScgcm93cyB7ZGZbJ3Jvd3MnXVswXX0gKGNoYWluIHRvICc1bScvdG90YWwgaWYgMCkiKQogICMgT3B0aW06IEdpdCBkaWZmIGFwcGVuZCAoZmlsZXNfY2hhbmdlZCBlbnYgb3IgZGVmYXVsdCAwKQogIGZpbGVzX2NoYW5nZWQgPSBpbnQob3MuZ2V0ZW52KCdGSUxFU19DSEFOR0VEJywgJzAnKSkKICB0cyA9IGRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSDolTSIpCiAgcm93ID0gZiJ8IFAzIHwgMjUlIHwgRnJhbWV3b3JrIHYxLjMgc3luYyAoe2ZpbGVzX2NoYW5nZWR9IGZpbGVzLCB7dHN9KSB8XG4iICAjIFRlYXNlIGFwcGVuZCAoZWRpdCBwaGFzZS9wY3QpCiAgd2l0aCBvcGVuKCJxdWFudF9wcm9ncmVzc190cmFja2VyLm1kIiwgImEiLCBlbmNvZGluZz0idXRmLTgiKSBhcyBmOiAgIyBOZXc6ID4+IE1EIHZzIHByaW50CiAgICAgIGYud3JpdGUocm93KQogIHByaW50KGYiQXBwZW5kZWQgS1BJIHJvdzoge3Jvdy5zdHJpcCgpfSIpCiAgcHJpbnQoInwgQXZnIFotU2NvcmUgKCc1bScpIHwgREIgUm93cyAoJzVtJykgfCIpICAKICBwcmludCgifC0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tfCIpICAKICAjIEwyNiBGaXg6IE5vbmUgZ3VhcmQgZm9yIGF2Z196IChOL0EgaWYgcm93cz09MCkKICBhdmdfel92YWwgPSBkZlsnYXZnX3onXS5maWxsbmEoMClbMF0gaWYgZGZbJ3Jvd3MnXVswXSA+IDAgZWxzZSAnTi9BJwogIHByaW50KGYifCB7YXZnX3pfdmFsfSB8IHtkZlsncm93cyddWzBdfSB8IikgCmV4Y2VwdCBzcWxpdGUzLk9wZXJhdGlvbmFsRXJyb3IgYXMgZTogIAogIGlmICd6X3Njb3JlJyBpbiBzdHIoZSk6ICAKICAgIHByaW50KCIjIyBEQiBOb3RlOiB6X3Njb3JlIG1pc3Npbmcg4oCTIFJ1biBhbHRlcl9kYi5weSArIHJlLXNlZWQiKSAgCiAgICBkZiA9IHBkLnJlYWRfc3FsKCJTRUxFQ1QgQVZHKGdsb2JhbF9scykgYXMgYXZnX2xzLCBDT1VOVCgqKSBhcyByb3dzIEZST00gbWV0cmljcyIsIGNvbikgIAogICAgcm93ID0gZiJ8IFAzIHwgMjUlIHwgRnJhbWV3b3JrIHYxLjMgc3luYyAoel9zY29yZSBwZW5kaW5nLCB7dHN9KSB8XG4iCiAgICB3aXRoIG9wZW4oInF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQiLCAiYSIsIGVuY29kaW5nPSJ1dGYtOCIpIGFzIGY6CiAgICAgICAgZi53cml0ZShyb3cpCiAgICBwcmludChmIkFwcGVuZGVkIGZhbGxiYWNrIHJvdzoge3Jvdy5zdHJpcCgpfSIpCiAgICBwcmludCgifCBBdmcgR2xvYmFsIExTIChUb3RhbCkgfCBEQiBSb3dzIChUb3RhbCkgfCIpICAKICAgIHByaW50KCJ8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tfCIpICAKICAgIHByaW50KGYifCB7ZGZbJ2F2Z19scyddWzBdOi4yZn0gfCB7ZGZbJ3Jvd3MnXVswXX0gfCIpICAKICBlbHNlOiAgCiAgICByYWlzZSBlICAKCiMgT3B0aW0gVGVhc2U6IFotcm9sbCBwbG90IChtYXRwbG90bGliOyBzYXZlIHBuZyBlbWJlZCkg4oCTIEJlZm9yZSBjb24uY2xvc2UoKQp0cnk6CiAgICBpbXBvcnQgbWF0cGxvdGxpYi5weXBsb3QgYXMgcGx0CiAgICBkZl9wbG90ID0gcGQucmVhZF9zcWwoIlNFTEVDVCB6X3Njb3JlLCB0aW1lc3RhbXAgRlJPTSBtZXRyaWNzIE9SREVSIEJZIHRpbWVzdGFtcCBERVNDIExJTUlUIDEwMCIsIGNvbikKICAgIGRmX3Bsb3RbJ3RpbWVzdGFtcCddID0gcGQudG9fZGF0ZXRpbWUoZGZfcGxvdFsndGltZXN0YW1wJ10pCiAgICBkZl9wbG90LnNldF9pbmRleCgndGltZXN0YW1wJywgaW5wbGFjZT1UcnVlKQogICAgZGZfcGxvdFsnel9yb2xsJ10gPSBkZl9wbG90Wyd6X3Njb3JlJ10ucm9sbGluZygyMCkubWVhbigpCiAgICBwbHQucGxvdChkZl9wbG90Wyd6X3JvbGwnXSkKICAgIHBsdC50aXRsZSgnWi1Sb2xsIE1lYW4gVHJlbmQgKExhc3QgMTAwKScpCiAgICBwbHQuc2F2ZWZpZygnel90cmVuZC5wbmcnLCBkcGk9MTAwLCBiYm94X2luY2hlcz0ndGlnaHQnKQogICAgcHJpbnQoIlotdHJlbmQgcGxvdCBzYXZlZDogel90cmVuZC5wbmcgKGVtYmVkIGluIHByb2dyZXNzX3RyYWNrZXIubWQpIikKZXhjZXB0IEltcG9ydEVycm9yOgogICAgcHJpbnQoIk1hdHBsb3RsaWIgbWlzc2luZzogcGlwIGluc3RhbGwgbWF0cGxvdGxpYiAoYmFja2VuZC9yZXFzLnR4dCkiKQpleGNlcHQgRXhjZXB0aW9uIGFzIHBsb3RfZToKICAgIHByaW50KGYiUGxvdCBlcnJvcjoge3Bsb3RfZX0gLSBDaGVjayBEQiByb3dzID4xMDAiKQpjb24uY2xvc2UoKQ==",
        "summary": "62L | gen_tracker.py | .py | 3.2 KB"
      },
      {
        "path": "docs\\project_context_v3.json",
        "type": ".json",
        "size_kb": 0.6,
        "content": "77u/ewogICAgInRpbWVzdGFtcCI6ICAiMjAyNS0xMC0yMSAxNzoxNjoyMiIsCiAgICAicGhhc2UiOiAgIlAzLjYgLSBVVEY4IExvZ2dpbmcgKyBRdWFudFN1bW1hcnkgU3RhYmxlIiwKICAgICJiYWNrZW5kX2hlYWx0aCI6ICAiSGVhbHRoIGNoZWNrIGZhaWxlZCIsCiAgICAiYmFja2VuZF9jb25maWciOiAgewoKICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgInNhbXBsZV9tZXRyaWMiOiAgewoKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAicmVwb19zdW1tYXJ5IjogIHsKCiAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAidXB0aW1lX3BjdCI6ICAxMDAsCiAgICAiYmFja2VuZF9uYW1lIjogICJmdXR1cmVzYm9hcmQiLAogICAgImRiX3BhdGgiOiAgImJhY2tlbmQvc3JjL2Z1dHVyZXNib2FyZC9mdXR1cmVzLmRiIiwKICAgICJzeXN0ZW0iOiAgewogICAgICAgICAgICAgICAgICAgIm5vZGUiOiAgInYyMi4yMC4wIiwKICAgICAgICAgICAgICAgICAgICJ1c2VyIjogICJMaWFuIiwKICAgICAgICAgICAgICAgICAgICJvcyI6ICAiTWljcm9zb2Z0IFdpbmRvd3MgMTAgUHJvIiwKICAgICAgICAgICAgICAgICAgICJweXRob24iOiAgIlB5dGhvbiAzLjEzLjEiCiAgICAgICAgICAgICAgIH0KfQo=",
        "summary": "23L | project_context_v3.json | .json | 0.6 KB"
      },
      {
        "path": "docs\\project_data.json",
        "type": ".json",
        "size_kb": 589.4,
        "content": "",
        "summary": "487L | project_data.json | .json | 589.4 KB"
      },
      {
        "path": "docs\\quant_blueprint.md",
        "type": ".md",
        "size_kb": 7.1,
        "content": "",
        "summary": "93L | quant_blueprint.md | .md | 7.1 KB"
      },
      {
        "path": "docs\\quant_progress_tracker.md",
        "type": ".md",
        "size_kb": 7.7,
        "content": "",
        "summary": "120L | quant_progress_tracker.md | .md | 7.7 KB"
      },
      {
        "path": "docs\\README.md",
        "type": ".md",
        "size_kb": 2.4,
        "content": "IyDwn5OaIENyeXB0byBGdXR1cmVzIERhc2hib2FyZCDigJMgRG9jdW1lbnRhdGlvbiBJbmRleAoKX1VwZGF0ZWQ6IDIwMjUtMTAtMjAgfCBWZXJzaW9uOiB2Mi4zIChQaGFzZSAzIOKAkyBXZWlnaHRlZCBPSSAmIEFsZXJ0cylfCgotLS0KCiMjIPCfp60gQ29yZSBPdmVydmlldwoKLSAqKlByb2plY3Q6KiogUmVhbC10aW1lIENyeXB0byBGdXR1cmVzIFF1YW50IERhc2hib2FyZCAgCi0gKipPd25lcjoqKiBMaWFuIElzYWFjICAKLSAqKkJhY2tlbmQ6KiogRmxhc2sgKyBTUUxBbGNoZW15ICsgU29ja2V0SU8gIAotICoqRnJvbnRlbmQ6KiogVml0ZSArIFRyZW1vciArIFJlY2hhcnRzICAKLSAqKlBoYXNlOioqIFAzIOKAkyBXZWlnaHRlZCBPSSwgVG9wIEwvUywgQWxlcnRzICAKLSAqKkdvYWw6KiogRGV0ZWN0IGRpcmVjdGlvbmFsIGJpYXMgKFo+Mi41LCBMUz4yLCBJbWI+MyUpIGFuZCBzaW11bGF0ZSBjb25mbHVlbmNlIOKGkiBQNCByZXBsYXkuCgotLS0KCiMjIPCflJcgRG9jdW1lbnRhdGlvbiBNYXAKCnwgRmlsZSB8IERlc2NyaXB0aW9uIHwgTGFzdCBVcGRhdGVkIHwKfC0tLS0tLS18LS0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS0tfAp8IFtjb250aW51aXR5X3N0YXRlLm1kXShjb250aW51aXR5X3N0YXRlLm1kKSB8IExpdmUgc3lzdGVtIHNuYXBzaG90IChhdXRvLXVwZGF0ZWQgYnkgUG93ZXJTaGVsbCkgfCBEeW5hbWljIHwKfCBbYXBpX2d1aWRlLm1kXShhcGlfZ3VpZGUubWQpIHwgUkVTVCArIFdTIGVuZHBvaW50cyByZWZlcmVuY2UgfCAyMDI1LTEwLTE4IHwKfCBbcXVhbnRfYmx1ZXByaW50Lm1kXShxdWFudF9ibHVlcHJpbnQubWQpIHwgQXJjaGl0ZWN0dXJlLCBtZXRyaWNzLCBhbmQgcXVhbnQgZW5naW5lZXJpbmcgYmx1ZXByaW50IHwgMjAyNS0xMC0xOCB8CnwgW3F1YW50X3Byb2dyZXNzX3RyYWNrZXIubWRdKHF1YW50X3Byb2dyZXNzX3RyYWNrZXIubWQpIHwgUHJvZ3Jlc3MgYnkgcGhhc2UsIEtQSXMsIGFuZCBtZXRyaWNzIGV2b2x1dGlvbiB8IDIwMjUtMTAtMTggfAp8IFtyb2FkbWFwLm1kXShyb2FkbWFwLm1kKSB8IEV4ZWN1dGlvbiBtYXRyaXggYWNyb3NzIGJhY2tlbmQsIFVYLCBvcHMgfCAyMDI1LTEwLTE4IHwKfCBbdGVzdGluZ19oYXJuZXNzLm1kXSh0ZXN0aW5nX2hhcm5lc3MubWQpIHwgUHl0ZXN0IGFuZCBxdWFudCB2YWxpZGF0aW9uIGhhcm5lc3MgfCAyMDI1LTEwLTE4IHwKCi0tLQoKIyMg8J+nqSBBdXRvbWF0aW9uIFNjcmlwdHMKCnwgU2NyaXB0IHwgRnVuY3Rpb24gfCBDb21tYW5kIHwKfC0tLS0tLS0tLXwtLS0tLS0tLS0tLXwtLS0tLS0tLS0tfAp8IGBnZW5fYmx1ZXByaW50LnB5YCB8IFVwZGF0ZXMgYmx1ZXByaW50IEtQSXMgYW5kIGZvcm11bGFzIHwgYHB5dGhvbiBkb2NzL2dlbl9ibHVlcHJpbnQucHlgIHwKfCBgZ2VuX3RyYWNrZXIucHlgIHwgVXBkYXRlcyBwaGFzZSBwcm9ncmVzcyAmIEtQSXMgZnJvbSBEQiB8IGBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weWAgfAp8IGBJbnZva2UtQ29udGludWl0eVNuYXBzaG90YCB8IFVwZGF0ZXMgc3lzdGVtIHNuYXBzaG90IGF1dG9tYXRpY2FsbHkgfCBQb3dlclNoZWxsIGZ1bmN0aW9uIHwKCi0tLQoKIyMg8J+nriBRdWFudCBNb2RlbCBTdW1tYXJ5Cgp8IE1ldHJpYyB8IFB1cnBvc2UgfCBQaGFzZSB8CnwtLS0tLS0tLS18LS0tLS0tLS0tLXwtLS0tLS0tfAp8IFotU2NvcmUgfCBEZXZpYXRpb24vQW5vbWFseSBkZXRlY3Rpb24gfCBQMiB8CnwgTFMgUmF0aW8gfCBTZW50aW1lbnQgc2tldyB8IFAxIHwKfCBXZWlnaHRlZCBPSSB8IFZvbHVtZS13ZWlnaHRlZCBPSSBzdHJlbmd0aCB8IFAzIHwKfCBDb25mbHVlbmNlIHwgQ29tYmluZWQgYmlhcyB0cmlnZ2VyIChaL0xTL0ltYikgfCBQMyB8CnwgQ29yciBSZXBsYXkgfCBSb2xsaW5nIGNvcnJlbGF0aW9uIHJlcGxheSBzaW0gfCBQNCB8CgotLS0KCiMjIPCfp7EgUGhhc2UgU3VtbWFyeQoKfCBQaGFzZSB8IEZvY3VzIHwgU3RhdHVzIHwKfC0tLS0tLS0tfC0tLS0tLS0tfC0tLS0tLS0tfAp8IDEuNSB8IFNjYWZmb2xkICsgV1MgRW1pdCB8IOKchSBDb21wbGV0ZSB8CnwgMiB8IENvcmUgVEYgKyBFeHBvcnRzIHwg4pyFIENvbXBsZXRlIHwKfCAzIHwgV2VpZ2h0ZWQgT0kgKyBBbGVydHMgfCDwn5SEIEluIFByb2dyZXNzIHwKfCA0IHwgUmVwbGF5ICsgQ29yciBTaW0gfCDij7MgUGxhbm5lZCB8CgotLS0KCiMjIPCfp6ogVGVzdGluZyBIb29rcwoKUnVuIHRoZSBmdWxsIHZhbGlkYXRpb24gaGFybmVzczoKCmBgYHBvd2Vyc2hlbGwKcHl0ZXN0IC1xCmN1cmwgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9tZXRyaWNzP3RmPTE1bSB8IGpxIGxlbmd0aApweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQo=",
        "summary": "71L | README.md | .md | 2.4 KB"
      },
      {
        "path": "docs\\roadmap.md",
        "type": ".md",
        "size_kb": 6.0,
        "content": "",
        "summary": "43L | roadmap.md | .md | 6.0 KB"
      },
      {
        "path": "docs\\testing_harness.md",
        "type": ".md",
        "size_kb": 1.3,
        "content": "IyBUZXN0aW5nIEhhcm5lc3MgdjEuMCDigJMgT2N0IDE4LCAyMDI1CgpGb2N1czogU21va2UgKDw1cyksIEJlbmNoICg8MTBzLzUwIHBhaXJzKSwgUXVhbnQgVmFsIChaIGZpbml0ZS9mYWxzZS1wb3MpLiBSdW46IHB5dGVzdCAtcSA7IGNvZGVfZXhlY3V0aW9uIHNuaXBwZXRzLgoKIyMgUHl0ZXN0IFN1aXRlIChweXRlc3QuaW5pICsgRmlsZXMpCi0gdGVzdF9tZXRyaWNzLnB5OiBgZGVmIHRlc3RfZ2V0X2FsbCgpOiBtZXRyaWNzID0gZ2V0X2FsbF9tZXRyaWNzKHRmPScxNW0nKTsgYXNzZXJ0IGxlbihtZXRyaWNzKSA9PSAyMDsgYXNzZXJ0IGFsbChucC5pc2Zpbml0ZShtWyd6X3Njb3JlJ10pIGZvciBtIGluIG1ldHJpY3MpYAotIHRlc3Rfd3MucHk6IGBkZWYgdGVzdF9lbWl0KCk6IC4uLiBhc3NlcnQgJ21ldHJpY3NfdXBkYXRlJyBpbiBzb2NrZXRpby5ldmVudHNgCi0gQmVuY2g6IGBweXRlc3QgLS1iZW5jaG1hcmstb25seWAgKFRhcmdldDogPDVzIGxvYWQsIG5vIGJsYW5rcykuCgojIyBUb29sIFNuaXBwZXRzIChjb2RlX2V4ZWN1dGlvbikKfCBUZXN0IHwgU25pcHBldCB8IEV4cGVjdGVkIHwKfC0tLS0tLXwtLS0tLS0tLS18LS0tLS0tLS0tLXwKfCBaIEZpbml0ZSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IHogPSBucC5yYW5kb20ubm9ybWFsKDAsMSwyMCk7IGFzc2VydCBucC5hbGwobnAuaXNmaW5pdGUoeikpICYgKG5wLmFicyh6KSA8IDEwKWAgfCBUcnVlIHwKfCBXZWlnaHRlZCBPSSB8IGBpbXBvcnQgbnVtcHkgYXMgbnA7IG9pID0gbnAuYXJyYXkoWzFlOSwyZTldKTsgdm9scyA9IG5wLmFycmF5KFsxZTksMmU5XSk7IHcgPSBucC5hdmVyYWdlKG9pLCB3ZWlnaHRzPXZvbHMvdm9scy5zdW0oKSk7IHByaW50KHcpYCB8IDEuNjY2ZTkgfAp8IENvbmZsdWVuY2UgfCBgZGVmIGNhbGMoeixscyxpbWIpOiByZXR1cm4gc3VtKFt6PjIuNSwgbHM+MiwgYWJzKGltYik+M10pLzM7IHByaW50KGNhbGMoMi42LDIuMSwtMy4xKSlgIHwgMS4wIHwKfCBEQiBSb3dzIHwgQXMgZ2VuX3RyYWNrZXIucHkgfCA+NTgxIHwKCiMjIDI0aCBIYXJuZXNzIChQUyBDaGFpbikKYGBgcG93ZXJzaGVsbApweXRlc3QgLXEgOyBjdXJsIC9hcGkvbWV0cmljcz90Zj0xNW0gfCBqcSAnbGVuZ3RoJyA7IEdldC1Db250ZW50IGJhY2tlbmQvbG9ncy9hcHAubG9nIC1UYWlsIDEwIHwgU2VsZWN0LVN0cmluZyAiZW1pdHxlcnJvciIgOyBweXRob24gZG9jcy9nZW5fdHJhY2tlci5weQojIE91dHB1dDogLi4uLi4uLi4gMjAgOyBFbWl0dGVkMjAgKG5vIGVycm9yKQ==",
        "summary": "21L | testing_harness.md | .md | 1.3 KB"
      }
    ]
  },
  "metadata": {
    "updated": "2025-10-21 19:27:10",
    "total_files": 43,
    "max_file_size_kb": 976.6
  }
}